{"version":3,"file":"Star.r69PtoVf.js","sources":["../../../app/menus/BreadcrumbMenu.tsx","../../../app/components/Breadcrumb.tsx","../../../app/components/DocumentBreadcrumb.tsx","../../../app/components/CircularProgressBar.tsx","../../../app/components/DocumentTasks.tsx","../../../app/components/DocumentMeta.tsx","../../../app/components/Star.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport { MenuInternalLink } from \"~/types\";\n\ntype Props = {\n  items: MenuInternalLink[];\n};\n\nexport default function BreadcrumbMenu({ items }: Props) {\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n    placement: \"bottom\",\n  });\n\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show path to document\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Path to document\")}>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n","import { GoToIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { s, ellipsis } from \"@shared/styles\";\nimport Flex from \"~/components/Flex\";\nimport BreadcrumbMenu from \"~/menus/BreadcrumbMenu\";\nimport { undraggableOnDesktop } from \"~/styles\";\nimport { MenuInternalLink } from \"~/types\";\n\ntype Props = React.PropsWithChildren<{\n  items: MenuInternalLink[];\n  max?: number;\n  highlightFirstItem?: boolean;\n}>;\n\nfunction Breadcrumb(\n  { items, highlightFirstItem, children, max = 2 }: Props,\n  ref: React.RefObject<HTMLDivElement> | null\n) {\n  const totalItems = items.length;\n  const topLevelItems: MenuInternalLink[] = [...items];\n  let overflowItems;\n\n  // chop middle breadcrumbs and present a \"...\" menu instead\n  if (totalItems > max) {\n    const halfMax = Math.floor(max / 2);\n    overflowItems = topLevelItems.splice(halfMax, totalItems - max);\n\n    topLevelItems.splice(halfMax, 0, {\n      to: \"\",\n      type: \"route\",\n      title: <BreadcrumbMenu items={overflowItems as MenuInternalLink[]} />,\n    });\n  }\n\n  return (\n    <Flex justify=\"flex-start\" align=\"center\" ref={ref}>\n      {topLevelItems.map((item, index) => (\n        <React.Fragment\n          key={\n            (typeof item.to === \"string\" ? item.to : item.to.pathname) || index\n          }\n        >\n          {item.icon}\n          {item.to ? (\n            <Item\n              to={item.to}\n              $withIcon={!!item.icon}\n              $highlight={!!highlightFirstItem && index === 0}\n            >\n              {item.title}\n            </Item>\n          ) : (\n            item.title\n          )}\n          {index !== topLevelItems.length - 1 || !!children ? <Slash /> : null}\n        </React.Fragment>\n      ))}\n      {children}\n    </Flex>\n  );\n}\n\nconst Slash = styled(GoToIcon)`\n  flex-shrink: 0;\n  fill: ${s(\"divider\")};\n`;\n\nconst Item = styled(Link)<{ $highlight: boolean; $withIcon: boolean }>`\n  ${ellipsis()}\n  ${undraggableOnDesktop()}\n\n  display: flex;\n  flex-shrink: 1;\n  min-width: 0;\n  cursor: var(--pointer);\n  color: ${s(\"text\")};\n  font-size: 15px;\n  height: 24px;\n  font-weight: ${(props) => (props.$highlight ? \"500\" : \"inherit\")};\n  margin-left: ${(props) => (props.$withIcon ? \"4px\" : \"0\")};\n\n  svg {\n    flex-shrink: 0;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport default React.forwardRef<HTMLDivElement, Props>(Breadcrumb);\n","import { observer } from \"mobx-react\";\nimport { ArchiveIcon, GoToIcon, ShapesIcon, TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Icon from \"@shared/components/Icon\";\nimport type { NavigationNode } from \"@shared/types\";\nimport Document from \"~/models/Document\";\nimport Breadcrumb from \"~/components/Breadcrumb\";\nimport CollectionIcon from \"~/components/Icons/CollectionIcon\";\nimport { useLocationSidebarContext } from \"~/hooks/useLocationSidebarContext\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { MenuInternalLink } from \"~/types\";\nimport { archivePath, settingsPath, trashPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  children?: React.ReactNode;\n  document: Document;\n  onlyText?: boolean;\n};\n\nfunction useCategory(document: Document): MenuInternalLink | null {\n  const { t } = useTranslation();\n\n  if (document.isDeleted) {\n    return {\n      type: \"route\",\n      icon: <TrashIcon />,\n      title: t(\"Trash\"),\n      to: trashPath(),\n    };\n  }\n\n  if (document.isArchived) {\n    return {\n      type: \"route\",\n      icon: <ArchiveIcon />,\n      title: t(\"Archive\"),\n      to: archivePath(),\n    };\n  }\n\n  if (document.template) {\n    return {\n      type: \"route\",\n      icon: <ShapesIcon />,\n      title: t(\"Templates\"),\n      to: settingsPath(\"templates\"),\n    };\n  }\n\n  return null;\n}\n\nfunction DocumentBreadcrumb(\n  { document, children, onlyText }: Props,\n  ref: React.RefObject<HTMLDivElement> | null\n) {\n  const { collections } = useStores();\n  const { t } = useTranslation();\n  const category = useCategory(document);\n  const sidebarContext = useLocationSidebarContext();\n  const collection = document.collectionId\n    ? collections.get(document.collectionId)\n    : undefined;\n  const can = usePolicy(collection);\n\n  React.useEffect(() => {\n    void document.loadRelations({ withoutPolicies: true });\n  }, [document]);\n\n  let collectionNode: MenuInternalLink | undefined;\n\n  if (collection && can.readDocument) {\n    collectionNode = {\n      type: \"route\",\n      title: collection.name,\n      icon: <CollectionIcon collection={collection} expanded />,\n      to: {\n        pathname: collection.path,\n        state: { sidebarContext },\n      },\n    };\n  } else if (document.isCollectionDeleted) {\n    collectionNode = {\n      type: \"route\",\n      title: t(\"Deleted Collection\"),\n      icon: undefined,\n      to: \"\",\n    };\n  }\n\n  const path = document.pathTo;\n\n  const items = React.useMemo(() => {\n    const output = [];\n\n    if (category) {\n      output.push(category);\n    }\n\n    if (collectionNode) {\n      output.push(collectionNode);\n    }\n\n    path.slice(0, -1).forEach((node: NavigationNode) => {\n      const title = node.title || t(\"Untitled\");\n      output.push({\n        type: \"route\",\n        title: node.icon ? (\n          <>\n            <StyledIcon value={node.icon} color={node.color} /> {title}\n          </>\n        ) : (\n          title\n        ),\n        to: {\n          pathname: node.url,\n          state: { sidebarContext },\n        },\n      });\n    });\n    return output;\n  }, [t, path, category, sidebarContext, collectionNode]);\n\n  if (!collections.isLoaded) {\n    return null;\n  }\n\n  if (onlyText === true) {\n    return (\n      <>\n        {collection?.name}\n        {path.slice(0, -1).map((node: NavigationNode) => (\n          <React.Fragment key={node.id}>\n            <SmallSlash />\n            {node.title || t(\"Untitled\")}\n          </React.Fragment>\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <Breadcrumb items={items} ref={ref} highlightFirstItem>\n      {children}\n    </Breadcrumb>\n  );\n}\n\nconst StyledIcon = styled(Icon)`\n  margin-right: 2px;\n`;\n\nconst SmallSlash = styled(GoToIcon)`\n  width: 12px;\n  height: 12px;\n  vertical-align: middle;\n  flex-shrink: 0;\n\n  fill: ${(props) => props.theme.textTertiary};\n  opacity: 0.5;\n`;\n\nexport default observer(React.forwardRef(DocumentBreadcrumb));\n","import React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\n\nconst cleanPercentage = (percentage: number) => {\n  const tooLow = !Number.isFinite(+percentage) || percentage < 0;\n  const tooHigh = percentage > 100;\n  return tooLow ? 0 : tooHigh ? 100 : +percentage;\n};\n\nconst Circle = ({\n  color,\n  percentage,\n  offset,\n}: {\n  color: string;\n  percentage?: number;\n  offset: number;\n}) => {\n  const radius = offset * 0.7;\n  const circumference = 2 * Math.PI * radius;\n  let strokePercentage;\n\n  if (percentage) {\n    // because the circle is so small, anything greater than 85% appears like 100%\n    percentage = percentage > 85 && percentage < 100 ? 85 : percentage;\n    strokePercentage = percentage\n      ? ((100 - percentage) * circumference) / 100\n      : 0;\n  }\n\n  return (\n    <circle\n      r={radius}\n      cx={offset}\n      cy={offset}\n      fill=\"none\"\n      stroke={strokePercentage !== circumference ? color : \"\"}\n      strokeWidth={2.5}\n      strokeDasharray={circumference}\n      strokeDashoffset={percentage ? strokePercentage : 0}\n      strokeLinecap=\"round\"\n      style={{\n        transition: \"stroke-dashoffset 0.6s ease 0s\",\n      }}\n    />\n  );\n};\n\nconst CircularProgressBar = ({\n  percentage,\n  size = 16,\n}: {\n  percentage: number;\n  size?: number;\n}) => {\n  const theme = useTheme();\n  percentage = cleanPercentage(percentage);\n  const offset = Math.floor(size / 2);\n\n  return (\n    <SVG width={size} height={size}>\n      <g transform={`rotate(-90 ${offset} ${offset})`}>\n        <Circle color={theme.progressBarBackground} offset={offset} />\n        {percentage > 0 && (\n          <Circle\n            color={theme.accent}\n            percentage={percentage}\n            offset={offset}\n          />\n        )}\n      </g>\n    </SVG>\n  );\n};\n\nconst SVG = styled.svg`\n  flex-shrink: 0;\n`;\n\nexport default CircularProgressBar;\n","import { TFunction } from \"i18next\";\nimport { observer } from \"mobx-react\";\nimport { DoneIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled, { useTheme } from \"styled-components\";\nimport Document from \"~/models/Document\";\nimport CircularProgressBar from \"~/components/CircularProgressBar\";\nimport usePrevious from \"~/hooks/usePrevious\";\nimport { bounceIn } from \"~/styles/animations\";\n\ntype Props = {\n  document: Document;\n};\n\nfunction getMessage(t: TFunction, total: number, completed: number): string {\n  if (completed === 0) {\n    return t(`{{ total }} task`, {\n      total,\n      count: total,\n    });\n  } else if (completed === total) {\n    return t(`{{ completed }} task done`, {\n      completed,\n      count: completed,\n    });\n  } else {\n    return t(`{{ completed }} of {{ total }} tasks`, {\n      total,\n      completed,\n    });\n  }\n}\n\nfunction DocumentTasks({ document }: Props) {\n  const { tasks, tasksPercentage } = document;\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const { completed, total } = tasks;\n  const done = completed === total;\n  const previousDone = usePrevious(done);\n  const message = getMessage(t, total, completed);\n  return (\n    <>\n      {completed === total ? (\n        <Done\n          color={theme.accent}\n          size={20}\n          $animated={done && previousDone === false}\n        />\n      ) : (\n        <CircularProgressBar percentage={tasksPercentage} />\n      )}\n      &nbsp;{message}\n    </>\n  );\n}\n\nconst Done = styled(DoneIcon)<{ $animated: boolean }>`\n  margin: -1px;\n  animation: ${(props) => (props.$animated ? bounceIn : \"none\")} 600ms;\n  transform-origin: center center;\n`;\n\nexport default observer(DocumentTasks);\n","import { LocationDescriptor } from \"history\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { s, ellipsis } from \"@shared/styles\";\nimport Document from \"~/models/Document\";\nimport Revision from \"~/models/Revision\";\nimport DocumentBreadcrumb from \"~/components/DocumentBreadcrumb\";\nimport DocumentTasks from \"~/components/DocumentTasks\";\nimport Flex from \"~/components/Flex\";\nimport Time from \"~/components/Time\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  children?: React.ReactNode;\n  showCollection?: boolean;\n  showPublished?: boolean;\n  showLastViewed?: boolean;\n  showParentDocuments?: boolean;\n  document: Document;\n  revision?: Revision;\n  replace?: boolean;\n  to?: LocationDescriptor;\n};\n\nconst DocumentMeta: React.FC<Props> = ({\n  showPublished,\n  showCollection,\n  showLastViewed,\n  showParentDocuments,\n  document,\n  revision,\n  children,\n  replace,\n  to,\n  ...rest\n}: Props) => {\n  const { t } = useTranslation();\n  const { collections } = useStores();\n  const user = useCurrentUser();\n  const {\n    modifiedSinceViewed,\n    updatedAt,\n    updatedBy,\n    createdAt,\n    publishedAt,\n    archivedAt,\n    deletedAt,\n    isDraft,\n    lastViewedAt,\n    isTasks,\n    isTemplate,\n  } = document;\n\n  // Prevent meta information from displaying if updatedBy is not available.\n  // Currently the situation where this is true is rendering share links.\n  if (!updatedBy) {\n    return null;\n  }\n\n  const collection = document.collectionId\n    ? collections.get(document.collectionId)\n    : undefined;\n  const lastUpdatedByCurrentUser = user.id === updatedBy.id;\n  const userName = updatedBy.name;\n  let content;\n\n  if (revision) {\n    content = (\n      <span>\n        {revision.createdBy?.id === user.id\n          ? t(\"You updated\")\n          : t(\"{{ userName }} updated\", { userName })}{\" \"}\n        <Time dateTime={revision.createdAt} addSuffix />\n      </span>\n    );\n  } else if (deletedAt) {\n    content = (\n      <span>\n        {lastUpdatedByCurrentUser\n          ? t(\"You deleted\")\n          : t(\"{{ userName }} deleted\", { userName })}{\" \"}\n        <Time dateTime={deletedAt} addSuffix />\n      </span>\n    );\n  } else if (archivedAt) {\n    content = (\n      <span>\n        {lastUpdatedByCurrentUser\n          ? t(\"You archived\")\n          : t(\"{{ userName }} archived\", { userName })}{\" \"}\n        <Time dateTime={archivedAt} addSuffix />\n      </span>\n    );\n  } else if (\n    document.sourceMetadata &&\n    document.sourceMetadata?.importedAt &&\n    document.sourceMetadata.importedAt >= updatedAt\n  ) {\n    content = (\n      <span>\n        {document.sourceMetadata.createdByName\n          ? t(\"{{ userName }} updated\", {\n              userName: document.sourceMetadata.createdByName,\n            })\n          : t(\"Imported\")}{\" \"}\n        <Time dateTime={createdAt} addSuffix />\n      </span>\n    );\n  } else if (createdAt === updatedAt) {\n    content = (\n      <span>\n        {lastUpdatedByCurrentUser\n          ? t(\"You created\")\n          : t(\"{{ userName }} created\", { userName })}{\" \"}\n        <Time dateTime={updatedAt} addSuffix />\n      </span>\n    );\n  } else if (publishedAt && (publishedAt === updatedAt || showPublished)) {\n    content = (\n      <span>\n        {lastUpdatedByCurrentUser\n          ? t(\"You published\")\n          : t(\"{{ userName }} published\", { userName })}{\" \"}\n        <Time dateTime={publishedAt} addSuffix />\n      </span>\n    );\n  } else {\n    content = (\n      <Modified highlight={modifiedSinceViewed && !lastUpdatedByCurrentUser}>\n        {lastUpdatedByCurrentUser\n          ? t(\"You updated\")\n          : t(\"{{ userName }} updated\", { userName })}{\" \"}\n        <Time dateTime={updatedAt} addSuffix />\n      </Modified>\n    );\n  }\n\n  const nestedDocumentsCount = collection\n    ? collection.getChildrenForDocument(document.id).length\n    : 0;\n  const canShowProgressBar = isTasks && !isTemplate;\n\n  const timeSinceNow = () => {\n    if (isDraft || !showLastViewed) {\n      return null;\n    }\n\n    if (!lastViewedAt) {\n      if (lastUpdatedByCurrentUser) {\n        return null;\n      }\n      return (\n        <Viewed>\n          •&nbsp;<Modified highlight>{t(\"Never viewed\")}</Modified>\n        </Viewed>\n      );\n    }\n\n    return (\n      <Viewed>\n        •&nbsp;{t(\"Viewed\")} <Time dateTime={lastViewedAt} addSuffix shorten />\n      </Viewed>\n    );\n  };\n\n  return (\n    <Container\n      align=\"center\"\n      rtl={document.dir === \"rtl\"}\n      {...rest}\n      dir=\"ltr\"\n      lang=\"\"\n    >\n      {to ? (\n        <Link to={to} replace={replace}>\n          {content}\n        </Link>\n      ) : (\n        content\n      )}\n      {showCollection && collection && (\n        <span>\n          &nbsp;{t(\"in\")}&nbsp;\n          <Strong>\n            <DocumentBreadcrumb document={document} onlyText />\n          </Strong>\n        </span>\n      )}\n      {showParentDocuments && nestedDocumentsCount > 0 && (\n        <span>\n          &nbsp;• {nestedDocumentsCount}{\" \"}\n          {t(\"nested document\", {\n            count: nestedDocumentsCount,\n          })}\n        </span>\n      )}\n      &nbsp;{timeSinceNow()}\n      {canShowProgressBar && (\n        <>\n          &nbsp;•&nbsp;\n          <DocumentTasks document={document} />\n        </>\n      )}\n      {children}\n    </Container>\n  );\n};\n\nconst Strong = styled.strong`\n  font-weight: 550;\n`;\n\nconst Container = styled(Flex)<{ rtl?: boolean }>`\n  justify-content: ${(props) => (props.rtl ? \"flex-end\" : \"flex-start\")};\n  color: ${s(\"textTertiary\")};\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  min-width: 0;\n`;\n\nconst Viewed = styled.span`\n  ${ellipsis()}\n`;\n\nconst Modified = styled.span<{ highlight?: boolean }>`\n  font-weight: ${(props) => (props.highlight ? \"600\" : \"400\")};\n`;\n\nexport default observer(DocumentMeta);\n","import { observer } from \"mobx-react\";\nimport { StarredIcon, UnstarredIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled, { useTheme } from \"styled-components\";\nimport { hover } from \"@shared/styles\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\nimport {\n  starCollection,\n  unstarCollection,\n} from \"~/actions/definitions/collections\";\nimport { starDocument, unstarDocument } from \"~/actions/definitions/documents\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport NudeButton from \"./NudeButton\";\n\ntype Props = {\n  /** Target collection */\n  collection?: Collection;\n  /** Target document */\n  document?: Document;\n  /** Size of the star */\n  size?: number;\n  /** Color override for the star */\n  color?: string;\n};\n\nfunction Star({ size, document, collection, color, ...rest }: Props) {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const context = useActionContext({\n    activeDocumentId: document?.id,\n    activeCollectionId: collection?.id,\n  });\n\n  const target = document || collection;\n\n  if (!target) {\n    return null;\n  }\n\n  return (\n    <NudeButton\n      context={context}\n      hideOnActionDisabled\n      tooltip={{\n        content: target.isStarred ? t(\"Unstar document\") : t(\"Star document\"),\n        delay: 500,\n      }}\n      action={\n        collection\n          ? collection.isStarred\n            ? unstarCollection\n            : starCollection\n          : document\n          ? document.isStarred\n            ? unstarDocument\n            : starDocument\n          : undefined\n      }\n      size={size}\n      {...rest}\n    >\n      {target.isStarred ? (\n        <AnimatedStar size={size} color={theme.yellow} />\n      ) : (\n        <AnimatedStar\n          size={size}\n          color={color ?? theme.textTertiary}\n          as={UnstarredIcon}\n        />\n      )}\n    </NudeButton>\n  );\n}\n\nexport const AnimatedStar = styled(StarredIcon)`\n  flex-shrink: 0;\n  transition: all 100ms ease-in-out;\n\n  &: ${hover} {\n    transform: scale(1.1);\n  }\n  &:active {\n    transform: scale(0.95);\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default observer(Star);\n"],"names":["BreadcrumbMenu","items","t","useTranslation","menu","useMenuState","modal","placement","jsxs","Fragment","children","jsx","OverflowMenuButton","ContextMenu","Template","Slash","styled","GoToIcon","withConfig","componentId","s","Item","Link","ellipsis","undraggableOnDesktop","props","$highlight","$withIcon","React","Breadcrumb","highlightFirstItem","max","ref","totalItems","length","topLevelItems","overflowItems","halfMax","Math","floor","splice","to","type","title","Flex","justify","align","map","item","index","React.Fragment","icon","pathname","StyledIcon","Icon","SmallSlash","theme","textTertiary","DocumentBreadcrumb$1","observer","DocumentBreadcrumb","document","onlyText","collections","useStores","category","useCategory","isDeleted","TrashIcon","trashPath","isArchived","ArchiveIcon","archivePath","template","ShapesIcon","settingsPath","sidebarContext","useLocationSidebarContext","collection","collectionId","get","undefined","can","usePolicy","collectionNode","loadRelations","withoutPolicies","readDocument","name","CollectionIcon","expanded","path","state","isCollectionDeleted","pathTo","output","push","slice","forEach","node","value","color","url","isLoaded","id","Circle","percentage","offset","radius","circumference","PI","strokePercentage","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","strokeLinecap","style","transition","CircularProgressBar","size","useTheme","cleanPercentage","Number","isFinite","SVG","width","height","transform","progressBarBackground","accent","svg","Done","DoneIcon","$animated","bounceIn","DocumentTasks","tasks","tasksPercentage","completed","total","done","previousDone","usePrevious","message","getMessage","count","Strong","strong","Container","rtl","Viewed","span","Modified","highlight","DocumentMeta","showPublished","showCollection","showLastViewed","showParentDocuments","revision","replace","rest","user","useCurrentUser","modifiedSinceViewed","updatedAt","updatedBy","createdAt","publishedAt","archivedAt","deletedAt","isDraft","lastViewedAt","isTasks","isTemplate","lastUpdatedByCurrentUser","userName","content","createdBy","Time","dateTime","addSuffix","sourceMetadata","importedAt","createdByName","nestedDocumentsCount","getChildrenForDocument","canShowProgressBar","dir","lang","shorten","AnimatedStar","StarredIcon","hover","Star","context","useActionContext","activeDocumentId","activeCollectionId","target","NudeButton","hideOnActionDisabled","tooltip","isStarred","delay","action","unstarCollection","starCollection","unstarDocument","starDocument","yellow","as","UnstarredIcon"],"mappings":"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"}