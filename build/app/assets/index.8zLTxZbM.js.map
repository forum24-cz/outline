{"version":3,"file":"index.8zLTxZbM.js","sources":["../../../app/components/ChangeLanguage.tsx","../../../app/components/InputLarge.ts","../../../app/scenes/Login/components/AuthenticationProvider.tsx","../../../app/scenes/Login/components/BackButton.tsx","../../../app/scenes/Login/components/Notices.tsx","../../../app/scenes/Login/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { changeLanguage } from \"~/utils/language\";\n\ntype Props = {\n  locale: string;\n};\n\nexport default function ChangeLanguage({ locale }: Props) {\n  const { i18n } = useTranslation();\n\n  React.useEffect(() => {\n    void changeLanguage(locale, i18n);\n  }, [locale, i18n]);\n\n  return null;\n}\n","import styled from \"styled-components\";\nimport Input from \"./Input\";\n\nconst InputLarge = styled(Input)`\n  height: 38px;\n  flex-grow: 1;\n  margin-right: 8px;\n\n  input {\n    height: 38px;\n  }\n`;\n\nexport default InputLarge;\n","import { EmailIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport ButtonLarge from \"~/components/ButtonLarge\";\nimport InputLarge from \"~/components/InputLarge\";\nimport PluginIcon from \"~/components/PluginIcon\";\nimport { client } from \"~/utils/ApiClient\";\nimport Desktop from \"~/utils/Desktop\";\nimport { getRedirectUrl } from \"../urls\";\n\ntype Props = React.ComponentProps<typeof ButtonLarge> & {\n  id: string;\n  name: string;\n  authUrl: string;\n  isCreate: boolean;\n  onEmailSuccess: (email: string) => void;\n};\n\nfunction AuthenticationProvider(props: Props) {\n  const { t } = useTranslation();\n  const [showEmailSignin, setShowEmailSignin] = React.useState(false);\n  const [isSubmitting, setSubmitting] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const { isCreate, id, name, authUrl, onEmailSuccess, ...rest } = props;\n\n  const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  const handleSubmitEmail = async (\n    event: React.SyntheticEvent<HTMLFormElement>\n  ) => {\n    event.preventDefault();\n\n    if (showEmailSignin && email) {\n      setSubmitting(true);\n\n      try {\n        const response = await client.post(event.currentTarget.action, {\n          email,\n          client: Desktop.isElectron() ? \"desktop\" : undefined,\n        });\n\n        if (response.redirect) {\n          window.location.href = response.redirect;\n        } else {\n          onEmailSuccess(email);\n        }\n      } finally {\n        setSubmitting(false);\n      }\n    } else {\n      setShowEmailSignin(true);\n    }\n  };\n\n  const href = getRedirectUrl(authUrl);\n\n  if (id === \"email\") {\n    if (isCreate) {\n      return null;\n    }\n\n    return (\n      <Wrapper>\n        <Form method=\"POST\" action=\"/auth/email\" onSubmit={handleSubmitEmail}>\n          {showEmailSignin ? (\n            <>\n              <InputLarge\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"me@domain.com\"\n                value={email}\n                onChange={handleChangeEmail}\n                disabled={isSubmitting}\n                autoFocus\n                required\n                short\n              />\n              <ButtonLarge type=\"submit\" disabled={isSubmitting} {...rest}>\n                {t(\"Sign In\")} →\n              </ButtonLarge>\n            </>\n          ) : (\n            <ButtonLarge type=\"submit\" icon={<EmailIcon />} fullwidth {...rest}>\n              {t(\"Continue with Email\")}\n            </ButtonLarge>\n          )}\n        </Form>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <ButtonLarge\n      onClick={() => (window.location.href = href)}\n      icon={<PluginIcon id={id} />}\n      fullwidth\n      {...rest}\n    >\n      {t(\"Continue with {{ authProviderName }}\", {\n        authProviderName: name,\n      })}\n    </ButtonLarge>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default AuthenticationProvider;\n","import { BackIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { parseDomain } from \"@shared/utils/domains\";\nimport { Config } from \"~/stores/AuthStore\";\nimport env from \"~/env\";\nimport Desktop from \"~/utils/Desktop\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\n\ntype Props = {\n  config?: Config;\n};\n\nexport default function BackButton({ config }: Props) {\n  const { t } = useTranslation();\n  const isSubdomain = !!config?.hostname;\n\n  if (!isCloudHosted || parseDomain(window.location.origin).custom) {\n    return null;\n  }\n\n  if (Desktop.isElectron() && !isSubdomain) {\n    return null;\n  }\n\n  return (\n    <Link href={isSubdomain ? env.URL : \"https://www.getoutline.com\"}>\n      <BackIcon /> {Desktop.isElectron() ? t(\"Back\") : t(\"Back to home\")}\n    </Link>\n  );\n}\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  color: inherit;\n  padding: ${Desktop.isElectron() ? \"48px 32px\" : \"32px\"};\n  font-weight: 500;\n  position: absolute;\n\n  svg {\n    transition: transform 100ms ease-in-out;\n  }\n\n  &:hover {\n    svg {\n      transform: translateX(-4px);\n    }\n  }\n`;\n","/* eslint-disable react/no-unescaped-entities */\nimport { WarningIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans } from \"react-i18next\";\nimport Notice from \"~/components/Notice\";\nimport useQuery from \"~/hooks/useQuery\";\n\nfunction Message({ notice }: { notice: string }) {\n  switch (notice) {\n    case \"domain-not-allowed\":\n      return (\n        <Trans>\n          The domain associated with your email address has not been allowed for\n          this workspace.\n        </Trans>\n      );\n    case \"domain-required\":\n      return (\n        <Trans>\n          Unable to sign-in. Please navigate to your workspace's custom URL,\n          then try to sign-in again.\n          <hr />\n          If you were invited to a workspace, you will find a link to it in the\n          invite email.\n        </Trans>\n      );\n    case \"gmail-account-creation\":\n      return (\n        <Trans>\n          Sorry, a new account cannot be created with a personal Gmail address.\n          <hr />\n          Please use a Google Workspaces account instead.\n        </Trans>\n      );\n    case \"pending-deletion\":\n      return (\n        <Trans>\n          The workspace associated with your user is scheduled for deletion and\n          cannot be accessed at this time.\n        </Trans>\n      );\n    case \"maximum-reached\":\n      return (\n        <Trans>\n          The workspace you authenticated with is not authorized on this\n          installation. Try another?\n        </Trans>\n      );\n    case \"malformed-user-info\":\n      return (\n        <Trans>\n          We could not read the user info supplied by your identity provider.\n        </Trans>\n      );\n    case \"email-auth-required\":\n      return (\n        <Trans>\n          Your account uses email sign-in, please sign-in with email to\n          continue.\n        </Trans>\n      );\n    case \"email-auth-ratelimit\":\n      return (\n        <Trans>\n          An email sign-in link was recently sent, please check your inbox or\n          try again in a few minutes.\n        </Trans>\n      );\n    case \"auth-error\":\n    case \"state-mismatch\":\n      return (\n        <Trans>\n          Authentication failed – we were unable to sign you in at this time.\n          Please try again.\n        </Trans>\n      );\n    case \"invalid-authentication\":\n      return (\n        <Trans>\n          Authentication failed – you do not have permission to access this\n          workspace.\n        </Trans>\n      );\n    case \"expired-token\":\n      return (\n        <Trans>\n          Sorry, it looks like that sign-in link is no longer valid, please try\n          requesting another.\n        </Trans>\n      );\n    case \"user-suspended\":\n      return (\n        <Trans>\n          Your account has been suspended. To re-activate your account, please\n          contact a workspace admin.\n        </Trans>\n      );\n    case \"team-suspended\":\n      return (\n        <Trans>\n          This workspace has been suspended. Please contact support to restore\n          access.\n        </Trans>\n      );\n    case \"authentication-provider-disabled\":\n      return (\n        <Trans>\n          Authentication failed – this login method was disabled by a workspace\n          admin.\n        </Trans>\n      );\n    case \"invite-required\":\n      return (\n        <Trans>\n          The workspace you are trying to join requires an invite before you can\n          create an account.\n          <hr />\n          Please request an invite from your workspace admin and try again.\n        </Trans>\n      );\n    default:\n      return <Trans>Sorry, an unknown error occurred.</Trans>;\n  }\n}\n\nexport default function Notices() {\n  const query = useQuery();\n  const notice = query.get(\"notice\");\n\n  if (!notice) {\n    return null;\n  }\n\n  return (\n    <Notice icon={<WarningIcon color=\"currentcolor\" />}>\n      <Message notice={notice} />\n    </Notice>\n  );\n}\n","import find from \"lodash/find\";\nimport { observer } from \"mobx-react\";\nimport { EmailIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useLocation, Link, Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getCookie, setCookie } from \"tiny-cookie\";\nimport { s } from \"@shared/styles\";\nimport { UserPreference } from \"@shared/types\";\nimport { parseDomain } from \"@shared/utils/domains\";\nimport { Config } from \"~/stores/AuthStore\";\nimport { AvatarSize } from \"~/components/Avatar\";\nimport ButtonLarge from \"~/components/ButtonLarge\";\nimport ChangeLanguage from \"~/components/ChangeLanguage\";\nimport Fade from \"~/components/Fade\";\nimport Flex from \"~/components/Flex\";\nimport Heading from \"~/components/Heading\";\nimport OutlineIcon from \"~/components/Icons/OutlineIcon\";\nimport Input from \"~/components/Input\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport PageTitle from \"~/components/PageTitle\";\nimport TeamLogo from \"~/components/TeamLogo\";\nimport Text from \"~/components/Text\";\nimport env from \"~/env\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport {\n  useLastVisitedPath,\n  usePostLoginPath,\n} from \"~/hooks/useLastVisitedPath\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport { draggableOnDesktop } from \"~/styles\";\nimport Desktop from \"~/utils/Desktop\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport { detectLanguage } from \"~/utils/language\";\nimport { homePath } from \"~/utils/routeHelpers\";\nimport AuthenticationProvider from \"./components/AuthenticationProvider\";\nimport BackButton from \"./components/BackButton\";\nimport Notices from \"./components/Notices\";\nimport { getRedirectUrl, navigateToSubdomain } from \"./urls\";\n\ntype Props = {\n  children?: (config?: Config) => React.ReactNode;\n};\n\nfunction Login({ children }: Props) {\n  const location = useLocation();\n  const query = useQuery();\n  const notice = query.get(\"notice\");\n\n  const { t } = useTranslation();\n  const user = useCurrentUser({ rejectOnEmpty: false });\n  const { auth } = useStores();\n  const { config } = auth;\n  const [error, setError] = React.useState(null);\n  const [emailLinkSentTo, setEmailLinkSentTo] = React.useState(\"\");\n  const isCreate = location.pathname === \"/create\";\n  const rememberLastPath = !!user?.getPreference(\n    UserPreference.RememberLastPath\n  );\n  const [lastVisitedPath] = useLastVisitedPath();\n  const [spendPostLoginPath] = usePostLoginPath();\n\n  const handleReset = React.useCallback(() => {\n    setEmailLinkSentTo(\"\");\n  }, []);\n  const handleEmailSuccess = React.useCallback((email) => {\n    setEmailLinkSentTo(email);\n  }, []);\n\n  const handleGoSubdomain = React.useCallback(async (event) => {\n    event.preventDefault();\n    const data = Object.fromEntries(new FormData(event.target));\n    await navigateToSubdomain(data.subdomain.toString());\n  }, []);\n\n  React.useEffect(() => {\n    auth.fetchConfig().catch(setError);\n  }, [auth]);\n\n  React.useEffect(() => {\n    const entries = Object.fromEntries(query.entries());\n    const existing = getCookie(\"signupQueryParams\");\n\n    // We don't want to set this cookie if we're viewing an error notice via\n    // query string(notice =), if there are no query params, or it's already set\n    if (Object.keys(entries).length && !query.get(\"notice\") && !existing) {\n      setCookie(\"signupQueryParams\", JSON.stringify(entries));\n    }\n  }, [query]);\n\n  if (auth.authenticated) {\n    const postLoginPath = spendPostLoginPath();\n    if (postLoginPath) {\n      return <Redirect to={postLoginPath} />;\n    }\n\n    if (rememberLastPath && lastVisitedPath !== location.pathname) {\n      return <Redirect to={lastVisitedPath} />;\n    }\n\n    if (auth.team?.defaultCollectionId) {\n      return <Redirect to={`/collection/${auth.team?.defaultCollectionId}`} />;\n    }\n\n    return <Redirect to={homePath()} />;\n  }\n\n  if (error) {\n    return (\n      <Background>\n        <BackButton />\n        <ChangeLanguage locale={detectLanguage()} />\n        <Centered align=\"center\" justify=\"center\" column auto>\n          <PageTitle title={t(\"Login\")} />\n          <Heading centered>{t(\"Error\")}</Heading>\n          <Note>\n            {t(\"Failed to load configuration.\")}\n            {!isCloudHosted && (\n              <p>\n                {t(\n                  \"Check the network requests and server logs for full details of the error.\"\n                )}\n              </p>\n            )}\n          </Note>\n        </Centered>\n      </Background>\n    );\n  }\n\n  // we're counting on the config request being fast, so just a simple loading\n  // indicator here that's delayed by 250ms\n  if (!config) {\n    return <LoadingIndicator />;\n  }\n\n  const isCustomDomain = parseDomain(window.location.origin).custom;\n\n  // Unmapped custom domain\n  if (isCloudHosted && isCustomDomain && !config.name) {\n    return (\n      <Background>\n        <BackButton config={config} />\n        <ChangeLanguage locale={detectLanguage()} />\n        <Centered align=\"center\" justify=\"center\" column auto>\n          <PageTitle title={t(\"Custom domain setup\")} />\n          <Heading centered>{t(\"Almost there\")}…</Heading>\n          <Note>\n            {t(\n              \"Your custom domain is successfully pointing at Outline. To complete the setup process please contact support.\"\n            )}\n          </Note>\n        </Centered>\n      </Background>\n    );\n  }\n\n  if (Desktop.isElectron() && notice === \"domain-required\") {\n    return (\n      <Background>\n        <BackButton config={config} />\n        <ChangeLanguage locale={detectLanguage()} />\n\n        <Centered\n          as=\"form\"\n          onSubmit={handleGoSubdomain}\n          align=\"center\"\n          justify=\"center\"\n          column\n          auto\n        >\n          <Heading centered>{t(\"Choose workspace\")}</Heading>\n          <Note>\n            {t(\n              \"This login method requires choosing your workspace to continue\"\n            )}\n            …\n          </Note>\n          <Flex>\n            <Input\n              name=\"subdomain\"\n              style={{ textAlign: \"right\" }}\n              placeholder={t(\"subdomain\")}\n              pattern=\"^[a-z\\d-]+$\"\n              required\n            >\n              <Domain>.getoutline.com</Domain>\n            </Input>\n          </Flex>\n          <ButtonLarge type=\"submit\" fullwidth>\n            {t(\"Continue\")}\n          </ButtonLarge>\n        </Centered>\n      </Background>\n    );\n  }\n\n  const hasMultipleProviders = config.providers.length > 1;\n  const defaultProvider = find(\n    config.providers,\n    (provider) => provider.id === auth.lastSignedIn && !isCreate\n  );\n\n  if (emailLinkSentTo) {\n    return (\n      <Background>\n        <BackButton config={config} />\n        <Centered align=\"center\" justify=\"center\" column auto>\n          <PageTitle title={t(\"Check your email\")} />\n          <CheckEmailIcon size={38} />\n          <Heading centered>{t(\"Check your email\")}</Heading>\n          <Note>\n            <Trans\n              defaults=\"A magic sign-in link has been sent to the email <em>{{ emailLinkSentTo }}</em> if an account exists.\"\n              values={{ emailLinkSentTo }}\n              components={{ em: <em /> }}\n            />\n          </Note>\n          <br />\n          <ButtonLarge onClick={handleReset} fullwidth neutral>\n            {t(\"Back to login\")}\n          </ButtonLarge>\n        </Centered>\n      </Background>\n    );\n  }\n\n  // If there is only one provider and it's OIDC, redirect immediately.\n  if (\n    config.providers.length === 1 &&\n    config.providers[0].id === \"oidc\" &&\n    !env.OIDC_DISABLE_REDIRECT &&\n    !query.get(\"notice\") &&\n    !query.get(\"logout\")\n  ) {\n    window.location.href = getRedirectUrl(config.providers[0].authUrl);\n    return null;\n  }\n\n  return (\n    <Background>\n      <BackButton config={config} />\n      <ChangeLanguage locale={detectLanguage()} />\n\n      <Centered align=\"center\" justify=\"center\" gap={12} column auto>\n        <PageTitle\n          title={config.name ? `${config.name} – ${t(\"Login\")}` : t(\"Login\")}\n        />\n        <Logo>\n          {config.logo && !isCreate ? (\n            <TeamLogo size={AvatarSize.XXLarge} src={config.logo} />\n          ) : (\n            <OutlineIcon size={AvatarSize.XXLarge} />\n          )}\n        </Logo>\n        {isCreate ? (\n          <>\n            <StyledHeading as=\"h2\" centered>\n              {t(\"Create a workspace\")}\n            </StyledHeading>\n            <Content>\n              {t(\n                \"Get started by choosing a sign-in method for your new workspace below…\"\n              )}\n            </Content>\n          </>\n        ) : (\n          <>\n            <StyledHeading as=\"h2\" centered>\n              {t(\"Login to {{ authProviderName }}\", {\n                authProviderName: config.name || env.APP_NAME,\n              })}\n            </StyledHeading>\n            {children?.(config)}\n          </>\n        )}\n        <Notices />\n        {defaultProvider && (\n          <React.Fragment key={defaultProvider.id}>\n            <AuthenticationProvider\n              isCreate={isCreate}\n              onEmailSuccess={handleEmailSuccess}\n              {...defaultProvider}\n            />\n            {hasMultipleProviders && (\n              <>\n                <Note>\n                  {t(\"You signed in with {{ authProviderName }} last time.\", {\n                    authProviderName: defaultProvider.name,\n                  })}\n                </Note>\n                <Or data-text={t(\"Or\")} />\n              </>\n            )}\n          </React.Fragment>\n        )}\n        {config.providers.map((provider) => {\n          if (defaultProvider && provider.id === defaultProvider.id) {\n            return null;\n          }\n\n          return (\n            <AuthenticationProvider\n              key={provider.id}\n              isCreate={isCreate}\n              onEmailSuccess={handleEmailSuccess}\n              neutral={defaultProvider && hasMultipleProviders}\n              {...provider}\n            />\n          );\n        })}\n        {isCreate && (\n          <Note>\n            <Trans>\n              Already have an account? Go to <Link to=\"/\">login</Link>.\n            </Trans>\n          </Note>\n        )}\n      </Centered>\n    </Background>\n  );\n}\n\nconst StyledHeading = styled(Heading)`\n  margin: 0;\n`;\n\nconst Domain = styled.div`\n  color: ${s(\"textSecondary\")};\n  padding: 0 8px 0 0;\n`;\n\nconst CheckEmailIcon = styled(EmailIcon)`\n  margin-bottom: -1.5em;\n`;\n\nconst Background = styled(Fade)`\n  width: 100vw;\n  height: 100%;\n  background: ${s(\"background\")};\n  display: flex;\n  ${draggableOnDesktop()}\n`;\n\nconst Logo = styled.div`\n  margin-bottom: -4px;\n`;\n\nconst Content = styled(Text)`\n  color: ${s(\"textSecondary\")};\n  text-align: center;\n  margin-top: -8px;\n`;\n\nconst Note = styled(Text)`\n  color: ${s(\"textTertiary\")};\n  text-align: center;\n  font-size: 14px;\n  margin-top: 8px;\n\n  em {\n    font-style: normal;\n    font-weight: 500;\n  }\n`;\n\nconst Or = styled.hr`\n  margin: 1em 0;\n  position: relative;\n  width: 100%;\n  border: 0;\n  border-top: 1px solid ${s(\"divider\")};\n\n  &:after {\n    content: attr(data-text);\n    display: block;\n    position: absolute;\n    left: 50%;\n    transform: translate3d(-50%, -50%, 0);\n    text-transform: uppercase;\n    font-size: 11px;\n    font-weight: 500;\n    color: ${s(\"textTertiary\")};\n    background: ${s(\"background\")};\n    border-radius: 2px;\n    padding: 0 4px;\n  }\n`;\n\nconst Centered = styled(Flex)`\n  user-select: none;\n  width: 90vw;\n  height: 100%;\n  max-width: 320px;\n  margin: 0 auto;\n`;\n\nexport default observer(Login);\n"],"names":["ChangeLanguage","locale","i18n","useTranslation","React","changeLanguage","InputLarge","styled","Input","withConfig","componentId","AuthenticationProvider","props","t","showEmailSignin","setShowEmailSignin","isSubmitting","setSubmitting","email","setEmail","isCreate","id","name","authUrl","onEmailSuccess","rest","handleChangeEmail","event","target","value","handleSubmitEmail","async","preventDefault","response","client","post","currentTarget","action","Desktop","isElectron","undefined","redirect","location","href","getRedirectUrl","Wrapper","children","jsx","Form","method","onSubmit","jsxs","Fragment","type","placeholder","onChange","disabled","autoFocus","required","short","ButtonLarge","icon","EmailIcon","fullwidth","onClick","window","PluginIcon","authProviderName","div","form","BackButton","config","isSubdomain","hostname","isCloudHosted","parseDomain","origin","custom","Link","env","URL","BackIcon","a","Message","notice","Trans","Notices","useQuery","get","Notice","WarningIcon","color","StyledHeading","Heading","Domain","s","CheckEmailIcon","Background","Fade","draggableOnDesktop","Logo","Content","Text","Note","Or","hr","Centered","Flex","observer","Login","useLocation","query","user","useCurrentUser","rejectOnEmpty","auth","useStores","error","setError","emailLinkSentTo","setEmailLinkSentTo","pathname","rememberLastPath","getPreference","UserPreference","RememberLastPath","lastVisitedPath","useLastVisitedPath","spendPostLoginPath","usePostLoginPath","handleReset","handleEmailSuccess","handleGoSubdomain","data","Object","fromEntries","FormData","navigateToSubdomain","subdomain","toString","fetchConfig","catch","entries","existing","getCookie","keys","length","setCookie","JSON","stringify","authenticated","postLoginPath","Redirect","to","team","defaultCollectionId","homePath","detectLanguage","align","justify","column","auto","PageTitle","title","centered","LoadingIndicator","isCustomDomain","as","style","textAlign","pattern","hasMultipleProviders","providers","defaultProvider","find","provider","lastSignedIn","size","defaults","values","components","em","neutral","OIDC_DISABLE_REDIRECT","gap","logo","TeamLogo","AvatarSize","XXLarge","src","OutlineIcon","APP_NAME","React.Fragment","map"],"mappings":"mrBAQA,SAAwBA,gBAAeC,OAAEA,IACjC,MAAAC,KAAEA,GAASC,IAMV,OAJPC,EAAAA,WAAgB,KACTC,EAAeJ,EAAQC,EAAI,GAC/B,CAACD,EAAQC,IAEL,IACT,CCbA,MAAMI,EAAaC,EAAOC,GAAMC,WAAA,CAAAC,YAAA,eAAbH,CAQlB,CAAA,iECQD,SAASI,uBAAuBC,GACxB,MAAAC,EAAEA,GAAMV,KACPW,EAAiBC,GAAsBX,YAAe,IACtDY,EAAcC,GAAiBb,YAAe,IAC9Cc,EAAOC,GAAYf,WAAe,KACnCgB,SAAEA,EAAAA,GAAUC,EAAAA,KAAIC,EAAAA,QAAMC,EAAAA,eAASC,KAAmBC,GAASb,EAE3Dc,kBAAqBC,IAChBA,EAAAA,EAAMC,OAAOC,MAAK,EAGvBC,kBAAoBC,MACxBJ,IAIA,GAFAA,EAAMK,iBAEFlB,GAAmBI,EAAO,CAC5BD,GAAc,GAEV,IACF,MAAMgB,QAAiBC,EAAOC,KAAKR,EAAMS,cAAcC,OAAQ,CAC7DnB,QACAgB,OAAQI,EAAQC,aAAe,eAAYC,IAGzCP,EAASQ,SACJC,OAAAA,SAASC,KAAOV,EAASQ,SAEhCjB,EAAeN,EACjB,CACQ,QACRD,GAAc,EAChB,CAAA,MAEAF,GAAmB,EACrB,EAGI4B,EAAOC,EAAerB,GAE5B,MAAW,UAAPF,EACED,EACK,OAINyB,EACC,CAAAC,SAACC,EAAAC,EAAK,CAAAC,OAAO,OAAOZ,OAAO,cAAca,SAAUpB,kBAChDhB,SAAAA,EAEGqC,EAAAC,EAAA,CAAAN,SAAA,CAAAC,EAACzC,GACC+C,KAAK,QACL/B,KAAK,QACLgC,YAAY,gBACZzB,MAAOX,EACPqC,SAAU7B,kBACV8B,SAAUxC,EACVyC,WAAS,EACTC,UAAQ,EACRC,OAAK,MAENC,EAAY,CAAAP,KAAK,SAASG,SAAUxC,KAAkBS,EACpDZ,SAAAA,CAAAA,EAAE,WAAW,WAIjBkC,EAAAa,EAAA,CAAYP,KAAK,SAASQ,KAAOC,EAAAA,EAAAA,UAAA,CAAY,GAAEC,WAAS,KAAKtC,EAC3DZ,WAAE,+BASZ+C,EACC,CAAAI,QAAS,IAAOC,OAAOvB,SAASC,KAAOA,EACvCkB,KAAOd,EAAAmB,EAAA,CAAW7C,OAClB0C,WAAS,KACLtC,EAEHZ,WAAE,uCAAwC,CACzCsD,iBAAkB7C,KAI1B,CAEA,MAAMuB,EAAUtC,EAAO6D,IAAG3D,WAAA,CAAAC,YAAA,gBAAVH,CAEf,CAAA,gBAEKyC,EAAOzC,EAAO8D,KAAI5D,WAAA,CAAAC,YAAA,gBAAXH,CAIZ,CAAA,2DCtGD,SAAwB+D,YAAWC,OAAEA,IAC7B,MAAA1D,EAAEA,GAAMV,IACRqE,IAAgBD,GAAQE,SAE9B,OAAKC,GAAiBC,EAAYV,OAAOvB,SAASkC,QAAQC,QAItDvC,EAAQC,eAAiBiC,EAHpB,OAQNM,EAAK,CAAAnC,KAAM6B,EAAcO,EAAIC,IAAM,6BAClClC,SAAA,CAACmC,EAAAA,EAAQA,SAAA,IAAG,IAAE3C,EAAQC,aAAe1B,EAAE,QAAUA,EAAE,kBAGzD,CAEA,MAAMiE,EAAOvE,EAAO2E,EAACzE,WAAA,CAAAC,YAAA,gBAARH,CAIA+B,CAAAA,yDAAAA,4HAAAA,EAAQC,aAAe,YAAc,QC9BlD,SAAS4C,SAAQC,OAAEA,IACjB,OAAQA,GACN,IAAK,qBAED,OAACrC,EAAAsC,GAAKvC,SAGN,2FAEJ,IAAK,2BAEAuC,EAAK,CAAAvC,SAAA,CAAA,kGAGH,KAAE,IAAA,yFAKT,IAAK,kCAEAuC,EAAK,CAAAvC,SAAA,CAAA,0EAEH,KAAE,IAAA,qDAIT,IAAK,mBAED,OAACC,EAAAsC,GAAKvC,SAGN,2GAEJ,IAAK,kBAED,OAACC,EAAAsC,GAAKvC,SAGN,8FAEJ,IAAK,sBAED,OAACC,EAAAsC,GAAKvC,SAEN,wEAEJ,IAAK,sBAED,OAACC,EAAAsC,GAAKvC,SAGN,4EAEJ,IAAK,uBAED,OAACC,EAAAsC,GAAKvC,SAGN,oGAEJ,IAAK,aACL,IAAK,iBAED,OAACC,EAAAsC,GAAKvC,SAGN,0FAEJ,IAAK,yBAED,OAACC,EAAAsC,GAAKvC,SAGN,iFAEJ,IAAK,gBAED,OAACC,EAAAsC,GAAKvC,SAGN,8FAEJ,IAAK,iBAED,OAACC,EAAAsC,GAAKvC,SAGN,oGAEJ,IAAK,iBAED,OAACC,EAAAsC,GAAKvC,SAGN,iFAEJ,IAAK,mCAED,OAACC,EAAAsC,GAAKvC,SAGN,iFAEJ,IAAK,2BAEAuC,EAAK,CAAAvC,SAAA,CAAA,8FAGH,KAAE,IAAA,uEAIT,QACS,OAACC,EAAAsC,GAAMvC,SAAiC,sCAErD,CAEA,SAAwBwC,UACtB,MACMF,EADQG,IACOC,IAAI,UAEzB,OAAKJ,IAKFK,EAAO,CAAA5B,KAAO6B,EAAAA,EAAAA,YAAA,CAAYC,MAAM,iBAC/B7C,SAACC,EAAAoC,QAAQ,CAAAC,aALJ,IAQX,CC2LA,MAAMQ,EAAgBrF,EAAOsF,GAAQpF,WAAA,CAAAC,YAAA,eAAfH,CAErB,CAAA,cAEKuF,EAASvF,EAAO6D,IAAG3D,WAAA,CAAAC,YAAA,eAAVH,CAAU,CAAA,SAAA,uBACdwF,EAAE,kBAIPC,EAAiBzF,EAAOuD,aAAUrD,WAAA,CAAAC,YAAA,eAAjBH,CAEtB,CAAA,0BAEK0F,EAAa1F,EAAO2F,GAAKzF,WAAA,CAAAC,YAAA,eAAZH,CAGHwF,CAAAA,sCAAAA,iBAAAA,IAAAA,EAAE,cAEdI,KAGEC,GAAO7F,EAAO6D,IAAG3D,WAAA,CAAAC,YAAA,eAAVH,CAEZ,CAAA,wBAEK8F,GAAU9F,EAAO+F,GAAK7F,WAAA,CAAAC,YAAA,eAAZH,CAAY,CAAA,SAAA,uCACjBwF,EAAE,kBAKPQ,GAAOhG,EAAO+F,GAAK7F,WAAA,CAAAC,YAAA,eAAZH,CAAY,CAAA,SAAA,2FACdwF,EAAE,iBAWPS,GAAKjG,EAAOkG,GAAEhG,WAAA,CAAAC,YAAA,eAATH,CAAS,CAAA,2EAAA,8KAAA,eAAA,sCAKMwF,EAAE,WAWfA,EAAE,gBACGA,EAAE,eAMdW,GAAWnG,EAAOoG,GAAKlG,WAAA,CAAAC,YAAA,eAAZH,CAMhB,CAAA,2EAEcqG,GAAAA,GAjWf,SAASC,OAAM/D,SAAEA,IACf,MAAMJ,EAAWoE,IACXC,EAAQxB,IACRH,EAAS2B,EAAMvB,IAAI,WAEnB3E,EAAEA,GAAMV,IACR6G,EAAOC,EAAe,CAAEC,eAAe,KACvCC,KAAEA,GAASC,KACX7C,OAAEA,GAAW4C,GACZE,EAAOC,GAAYlH,WAAe,OAClCmH,EAAiBC,GAAsBpH,WAAe,IACvDgB,EAAiC,YAAtBsB,EAAS+E,SACpBC,IAAqBV,GAAMW,cAC/BC,EAAeC,mBAEVC,GAAmBC,KACnBC,IAAsBC,IAEvBC,GAAc9H,EAAAA,aAAkB,KACpCoH,EAAmB,GAAE,GACpB,IACGW,GAAqB/H,eAA6Bc,IACtDsG,EAAmBtG,EAAK,GACvB,IAEGkH,GAAoBhI,eAAkB2B,MAAOJ,IACjDA,EAAMK,iBACN,MAAMqG,EAAOC,OAAOC,YAAY,IAAIC,SAAS7G,EAAMC,eAC7C6G,EAAoBJ,EAAKK,UAAUC,WAAU,GAClD,IAiBH,GAfAvI,EAAAA,WAAgB,KACTwI,EAAAA,cAAcC,MAAMvB,EAAQ,GAChC,CAACH,IAEJ/G,EAAAA,WAAgB,KACd,MAAM0I,EAAUR,OAAOC,YAAYxB,EAAM+B,WACnCC,EAAWC,EAAU,sBAIvBV,OAAOW,KAAKH,GAASI,QAAWnC,EAAMvB,IAAI,WAAcuD,GAC1DI,EAAU,oBAAqBC,KAAKC,UAAUP,GAChD,GACC,CAAC/B,IAEAI,EAAKmC,cAAe,CACtB,MAAMC,EAAgBvB,KACtB,OAAIuB,EACMxG,EAAAyG,EAAS,CAAAC,GAAIF,IAGnB7B,GAAoBI,IAAoBpF,EAAS+E,SAC3C1E,EAAAyG,EAAS,CAAAC,GAAI3B,IAGnBX,EAAKuC,MAAMC,sBACLH,EAAS,CAAAC,GAAI,eAAetC,EAAKuC,MAAMC,0BAGzCH,EAAA,CAASC,GAAIG,KACvB,CAEA,GAAIvC,WAECpB,EACC,CAAAnD,SAAA,CAAAC,EAACuB,WAAU,MACVtE,eAAA,CAAeC,OAAQ4J,MACxB1G,EAACuD,IAASoD,MAAM,SAASC,QAAQ,SAASC,QAAM,EAACC,MAAI,EACnDnH,SAAA,GAACoH,EAAU,CAAAC,MAAOtJ,EAAE,aACnBgF,EAAQ,CAAAuE,UAAQ,EAAEvJ,SAAAA,EAAE,aACpB0F,GACE1F,CAAAA,SAAAA,CAAAA,EAAE,kCACD6D,GACC3B,EAAA,IACElC,CAAAA,SAAAA,EACC,wFAYhB,IAAK0D,WACK8F,EAAmB,CAAA,GAG7B,MAAMC,GAAiB3F,EAAYV,OAAOvB,SAASkC,QAAQC,OAG3D,GAAIH,GAAiB4F,KAAmB/F,EAAOjD,cAE1C2E,EACC,CAAAnD,SAAA,CAACC,EAAAuB,YAAWC,aACXvE,eAAA,CAAeC,OAAQ4J,MACxB1G,EAACuD,IAASoD,MAAM,SAASC,QAAQ,SAASC,QAAM,EAACC,MAAI,EACnDnH,SAAA,GAACoH,EAAU,CAAAC,MAAOtJ,EAAE,yBACnBsC,EAAA0C,EAAQ,CAAAuE,UAAQ,EAAEvJ,SAAAA,CAAAA,EAAE,gBAAgB,SACpC0F,GAAA,CACE1F,SACCA,EAAA,yHAQZ,GAAIyB,EAAQC,cAA2B,oBAAX6C,WAEvBa,EACC,CAAAnD,SAAA,CAACC,EAAAuB,YAAWC,aACXvE,eAAA,CAAeC,OAAQ4J,MAEvB1G,EAAAuD,GAAA,CACC6D,GAAG,OACHrH,SAAUkF,GACV0B,MAAM,SACNC,QAAQ,SACRC,QAAM,EACNC,MAAI,EAEJnH,SAAA,CAAAC,EAAC8C,EAAQ,CAAAuE,UAAQ,EAAEvJ,SAAAA,EAAE,wBACpB0F,GACE1F,CAAAA,SAAAA,CAAAA,EACC,kEACD,SAGF8F,EACC,CAAA7D,WAACtC,EACC,CAAAc,KAAK,YACLkJ,MAAO,CAAEC,UAAW,SACpBnH,YAAazC,EAAE,aACf6J,QAAQ,eACRhH,UAAQ,EAERZ,SAACC,EAAA+C,EAAO,CAAAhD,SAAA,wBAGZC,EAACa,GAAYP,KAAK,SAASU,WAAS,EACjClD,SAAAA,EAAE,oBAOP8J,MAAAA,GAAuBpG,EAAOqG,UAAU1B,OAAS,EACjD2B,GAAkBC,EACtBvG,EAAOqG,WACNG,GAAaA,EAAS1J,KAAO8F,EAAK6D,eAAiB5J,IAGtD,OAAImG,IAECtB,EACC,CAAAnD,SAAA,CAACC,EAAAuB,YAAWC,WACZpB,EAACuD,IAASoD,MAAM,SAASC,QAAQ,SAASC,QAAM,EAACC,MAAI,EACnDnH,SAAA,GAACoH,EAAU,CAAAC,MAAOtJ,EAAE,sBACnBkC,EAAAiD,EAAe,CAAAiF,KAAM,OACrBpF,EAAQ,CAAAuE,UAAQ,EAAEvJ,SAAAA,EAAE,wBACpB0F,GACC,CAAAzD,WAACuC,EACC,CAAA6F,SAAS,uGACTC,OAAQ,CAAE5D,mBACV6D,WAAY,CAAEC,KAAK,KAAE,WAGxB,KAAE,IACFtI,EAAAa,EAAY,CAAAI,QAASkE,GAAanE,WAAS,EAACuH,SAAO,EACjDzK,SAAEA,EAAA,yBASiB,IAA5B0D,EAAOqG,UAAU1B,QACU,SAA3B3E,EAAOqG,UAAU,GAAGvJ,IACnB0D,EAAIwG,uBACJxE,EAAMvB,IAAI,WACVuB,EAAMvB,IAAI,YAOVS,EACC,CAAAnD,SAAA,CAACC,EAAAuB,YAAWC,aACXvE,eAAA,CAAeC,OAAQ4J,MAEvB1G,EAAAuD,GAAS,CAAAoD,MAAM,SAASC,QAAQ,SAASyB,IAAK,GAAIxB,QAAM,EAACC,MAAI,EAC5DnH,SAAA,GAACoH,EACC,CAAAC,MAAO5F,EAAOjD,KAAO,GAAGiD,EAAOjD,UAAUT,EAAE,WAAaA,EAAE,WAE5DkC,EAACqD,IACE7B,SAAOkH,EAAAA,OAASrK,EACf2B,EAAC2I,GAAST,KAAMU,EAAWC,QAASC,IAAKtH,EAAOkH,OAE/C1I,EAAA+I,GAAYb,KAAMU,EAAWC,YAK9BzI,EAAAC,EAFHhC,EAEG,CAAA0B,SAAA,CAAAC,EAAC6C,GAAc2E,GAAG,KAAKH,UAAQ,EAC5BvJ,SAAAA,EAAE,0BAEJwF,GAAA,CACExF,SACCA,EAAA,8EAMJ,CAAAiC,SAAA,CAAAC,EAAC6C,GAAc2E,GAAG,KAAKH,UAAQ,EAC5BvJ,WAAE,kCAAmC,CACpCsD,iBAAkBI,EAAOjD,MAAQyD,EAAIgH,aAGxCjJ,IAAWyB,QAGfe,QAAO,IACPuF,IACC1H,EAAC6I,WAAA,CACClJ,SAAA,CAAAC,EAACpC,uBACC,CAAAS,WACAI,eAAgB2G,MACZ0C,KAELF,IAEGxH,EAAAC,EAAA,CAAAN,SAAA,CAACC,EAAAwD,GAAA,CACE1F,WAAE,uDAAwD,CACzDsD,iBAAkB0G,GAAgBvJ,WAGrCkF,GAAA,CAAG,YAAW3F,EAAE,aAbFgK,GAAgBxJ,IAkBtCkD,EAAOqG,UAAUqB,KAAkBlB,GAC9BF,IAAmBE,EAAS1J,KAAOwJ,GAAgBxJ,GAC9C,KAIN0B,EAAApC,uBAEC,CAAAS,WACAI,eAAgB2G,GAChBmD,QAAST,IAAmBF,MACxBI,GAJCA,EAAS1J,MAQnBD,KACEmF,GACC,CAAAzD,SAACK,EAAAkC,EAAK,CAAAvC,SAAA,CAAA,oCAC4BgC,EAAA,CAAK2E,GAAG,IAAI3G,SAAK,UAAO,gBA/ElEmB,OAAOvB,SAASC,KAAOC,EAAe2B,EAAOqG,UAAU,GAAGrJ,SACnD,KAqFX"}