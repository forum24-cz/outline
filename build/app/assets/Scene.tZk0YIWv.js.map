{"version":3,"file":"Scene.tZk0YIWv.js","sources":["../../../app/components/Header.tsx","../../../app/components/Scene.tsx"],"sourcesContent":["import throttle from \"lodash/throttle\";\nimport { observer } from \"mobx-react\";\nimport { MenuIcon } from \"outline-icons\";\nimport { transparentize } from \"polished\";\nimport * as React from \"react\";\nimport { mergeRefs } from \"react-merge-refs\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { useComponentSize } from \"@shared/hooks/useComponentSize\";\nimport { depths, s } from \"@shared/styles\";\nimport { supportsPassiveListener } from \"@shared/utils/browser\";\nimport Button from \"~/components/Button\";\nimport Fade from \"~/components/Fade\";\nimport Flex from \"~/components/Flex\";\nimport useEventListener from \"~/hooks/useEventListener\";\nimport useMobile from \"~/hooks/useMobile\";\nimport useStores from \"~/hooks/useStores\";\nimport { draggableOnDesktop, fadeOnDesktopBackgrounded } from \"~/styles\";\nimport Desktop from \"~/utils/Desktop\";\nimport { TooltipProvider } from \"./TooltipContext\";\n\nexport const HEADER_HEIGHT = 64;\n\ntype Props = {\n  left?: React.ReactNode;\n  title: React.ReactNode;\n  actions?:\n    | ((props: { isCompact: boolean }) => React.ReactNode)\n    | React.ReactNode;\n  hasSidebar?: boolean;\n  className?: string;\n};\n\nfunction Header(\n  { left, title, actions, hasSidebar, className }: Props,\n  ref: React.RefObject<HTMLDivElement> | null\n) {\n  const { ui } = useStores();\n  const isMobile = useMobile();\n  const hasMobileSidebar = hasSidebar && isMobile;\n  const internalRef = React.useRef<HTMLDivElement | null>(null);\n  const breadcrumbsRef = React.useRef<HTMLDivElement | null>(null);\n  const passThrough = !actions && !left && !title;\n\n  const [isScrolled, setScrolled] = React.useState(false);\n  const handleScroll = React.useMemo(\n    () => throttle(() => setScrolled(window.scrollY > 75), 50),\n    []\n  );\n\n  useEventListener(\n    \"scroll\",\n    handleScroll,\n    window,\n    supportsPassiveListener ? { passive: true } : { capture: false }\n  );\n\n  const handleClickTitle = React.useCallback(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n\n  const setBreadcrumbRef = React.useCallback((node: HTMLDivElement | null) => {\n    breadcrumbsRef.current = node?.firstElementChild as HTMLDivElement;\n  }, []);\n\n  const size = useComponentSize(internalRef);\n  const breadcrumbsSize = useComponentSize(breadcrumbsRef);\n  const breadcrumbMakesCompact = breadcrumbsSize.width > size.width / 3;\n  const isCompact = size.width < 1000 || breadcrumbMakesCompact;\n\n  return (\n    <TooltipProvider>\n      <Wrapper\n        ref={mergeRefs([ref, internalRef])}\n        align=\"center\"\n        shrink={false}\n        className={className}\n        $passThrough={passThrough}\n        $insetTitleAdjust={ui.sidebarIsClosed && Desktop.hasInsetTitlebar()}\n      >\n        {left || hasMobileSidebar ? (\n          <Breadcrumbs ref={setBreadcrumbRef}>\n            {hasMobileSidebar && (\n              <MobileMenuButton\n                onClick={ui.toggleMobileSidebar}\n                icon={<MenuIcon />}\n                neutral\n              />\n            )}\n            {left}\n          </Breadcrumbs>\n        ) : null}\n\n        {isScrolled && !isCompact ? (\n          <Title onClick={handleClickTitle}>\n            <Fade>{title}</Fade>\n          </Title>\n        ) : (\n          <div />\n        )}\n        <Actions align=\"center\" justify=\"flex-end\">\n          {typeof actions === \"function\" ? actions({ isCompact }) : actions}\n        </Actions>\n      </Wrapper>\n    </TooltipProvider>\n  );\n}\n\nconst Breadcrumbs = styled(\"div\")`\n  flex-grow: 1;\n  flex-basis: 0;\n  align-items: center;\n  padding-right: 8px;\n  display: flex;\n`;\n\nconst Actions = styled(Flex)`\n  flex-grow: 1;\n  flex-basis: 0;\n  min-width: auto;\n  padding-left: 8px;\n\n  ${breakpoint(\"tablet\")`\n    position: unset;\n  `};\n`;\n\ntype WrapperProps = {\n  $passThrough?: boolean;\n  $insetTitleAdjust?: boolean;\n};\n\nconst Wrapper = styled(Flex)<WrapperProps>`\n  top: 0;\n  z-index: ${depths.header};\n  position: sticky;\n  background: ${s(\"background\")};\n\n  ${(props) =>\n    props.$passThrough\n      ? `\n      background: transparent;\n      pointer-events: none;\n      `\n      : `\n      background: ${transparentize(0.2, props.theme.background)};\n      backdrop-filter: blur(20px);\n      `};\n\n  padding: 12px;\n  transform: translate3d(0, 0, 0);\n  min-height: ${HEADER_HEIGHT}px;\n  justify-content: flex-start;\n  ${draggableOnDesktop()}\n\n  button,\n  [role=\"button\"] {\n    ${fadeOnDesktopBackgrounded()}\n  }\n\n  @supports (backdrop-filter: blur(20px)) {\n    backdrop-filter: blur(20px);\n    background: ${(props) => transparentize(0.2, props.theme.background)};\n  }\n\n  @media print {\n    display: none;\n  }\n\n  ${breakpoint(\"tablet\")`\n    padding: 16px;\n    ${(props: WrapperProps) => props.$insetTitleAdjust && `padding-left: 64px;`}\n    `};\n`;\n\nconst Title = styled(\"div\")`\n  display: none;\n  font-size: 16px;\n  font-weight: 600;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  cursor: var(--pointer);\n  min-width: 0;\n\n  ${breakpoint(\"tablet\")`\n    padding-left: 0;\n    display: block;\n  `};\n\n  svg {\n    vertical-align: bottom;\n  }\n\n  @media (display-mode: standalone) {\n    overflow: hidden;\n    flex-grow: 0 !important;\n  }\n`;\n\nconst MobileMenuButton = styled(Button)`\n  margin-right: 8px;\n  pointer-events: auto;\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default observer(React.forwardRef(Header));\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport Header from \"~/components/Header\";\nimport PageTitle from \"~/components/PageTitle\";\n\ntype Props = {\n  /** An icon to display in the header when content has scrolled past the title */\n  icon?: React.ReactNode;\n  /** The title of the scene */\n  title?: React.ReactNode;\n  /** The title of the scene, as text â€“ only required if the title prop is not plain text */\n  textTitle?: string;\n  /** A component to display on the left side of the header */\n  left?: React.ReactNode;\n  /** A component to display on the right side of the header */\n  actions?: React.ReactNode;\n  /** Whether to center the content horizontally with the standard maximum width (default: true) */\n  centered?: boolean;\n  /** Whether to use the full width of the screen (default: false) */\n  wide?: boolean;\n  /** The content of the scene */\n  children?: React.ReactNode;\n};\n\nconst Scene: React.FC<Props> = ({\n  title,\n  icon,\n  textTitle,\n  actions,\n  left,\n  children,\n  centered,\n  wide,\n}: Props) => (\n  <FillWidth>\n    <PageTitle title={textTitle || title} />\n    <Header\n      hasSidebar\n      title={\n        icon ? (\n          <>\n            {icon}&nbsp;{title}\n          </>\n        ) : (\n          title\n        )\n      }\n      actions={actions}\n      left={left}\n    />\n    {centered !== false ? (\n      <CenteredContent maxWidth={wide ? \"100vw\" : undefined} withStickyHeader>\n        {children}\n      </CenteredContent>\n    ) : (\n      children\n    )}\n  </FillWidth>\n);\n\nconst FillWidth = styled.div`\n  width: 100%;\n`;\n\nexport default Scene;\n"],"names":["HEADER_HEIGHT","Breadcrumbs","styled","withConfig","componentId","Actions","Flex","breakpoint","Wrapper","depths","header","s","props","$passThrough","transparentize","theme","background","draggableOnDesktop","fadeOnDesktopBackgrounded","$insetTitleAdjust","Title","MobileMenuButton","Button","Header$1","observer","React","Header","left","title","actions","hasSidebar","className","ref","ui","useStores","isMobile","useMobile","hasMobileSidebar","internalRef","breadcrumbsRef","passThrough","isScrolled","setScrolled","handleScroll","throttle","window","scrollY","useEventListener","supportsPassiveListener","passive","capture","handleClickTitle","scrollTo","top","behavior","setBreadcrumbRef","node","current","firstElementChild","size","useComponentSize","breadcrumbMakesCompact","width","isCompact","jsx","TooltipProvider","children","jsxs","mergeRefs","align","shrink","sidebarIsClosed","Desktop","hasInsetTitlebar","onClick","toggleMobileSidebar","icon","MenuIcon","neutral","Fade","justify","FillWidth","div","Scene$1","Scene","textTitle","centered","wide","PageTitle","CenteredContent","maxWidth","undefined","withStickyHeader"],"mappings":"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"}