{"version":3,"file":"index.6AZhkYdD.js","sources":["../../../node_modules/react-medium-image-zoom/dist/index.js"],"sourcesContent":["'use client';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction ICompress() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-unzoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 14.144531 1.148438 L 9 6.292969 L 9 3 L 8 3 L 8 8 L 13 8 L 13 7 L 9.707031 7 L 14.855469 1.851563 Z M 8 8 L 3 8 L 3 9 L 6.292969 9 L 1.148438 14.144531 L 1.851563 14.855469 L 7 9.707031 L 7 13 L 8 13 Z\" })));\n}\nfunction IEnlarge() {\n    return (React.createElement(\"svg\", { \"aria-hidden\": \"true\", \"data-rmiz-btn-zoom-icon\": true, fill: \"currentColor\", focusable: \"false\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\" },\n        React.createElement(\"path\", { d: \"M 9 1 L 9 2 L 12.292969 2 L 2 12.292969 L 2 9 L 1 9 L 1 14 L 6 14 L 6 13 L 2.707031 13 L 13 2.707031 L 13 6 L 14 6 L 14 1 Z\" })));\n}\n\nconst testElType = (type, el) => type === el?.tagName?.toUpperCase?.();\nconst testDiv = (el) => testElType('DIV', el) || testElType('SPAN', el);\nconst testImg = (el) => testElType('IMG', el);\nconst testImgLoaded = (el) => el.complete && el.naturalHeight !== 0;\nconst testSvg = (el) => testElType('SVG', el);\nconst getScaleToWindow = ({ height, offset, width }) => {\n    return Math.min((window.innerWidth - offset * 2) / width, (window.innerHeight - offset * 2) / height);\n};\nconst getScaleToWindowMax = ({ containerHeight, containerWidth, offset, targetHeight, targetWidth, }) => {\n    const scale = getScaleToWindow({\n        height: targetHeight,\n        offset,\n        width: targetWidth,\n    });\n    const ratio = targetWidth > targetHeight\n        ? targetWidth / containerWidth\n        : targetHeight / containerHeight;\n    return scale > 1 ? ratio : scale * ratio;\n};\nconst getScale = ({ containerHeight, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (!containerHeight || !containerWidth) {\n        return 1;\n    }\n    return !hasScalableSrc && targetHeight && targetWidth\n        ? getScaleToWindowMax({\n            containerHeight,\n            containerWidth,\n            offset,\n            targetHeight,\n            targetWidth,\n        })\n        : getScaleToWindow({\n            height: containerHeight,\n            offset,\n            width: containerWidth,\n        });\n};\nconst URL_REGEX = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/;\nconst getImgSrc = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.currentSrc;\n        }\n        else if (testDiv(imgEl)) {\n            const bgImg = window.getComputedStyle(imgEl).backgroundImage;\n            if (bgImg) {\n                return URL_REGEX.exec(bgImg)?.[1];\n            }\n        }\n    }\n};\nconst getImgAlt = (imgEl) => {\n    if (imgEl) {\n        if (testImg(imgEl)) {\n            return imgEl.alt ?? undefined;\n        }\n        else {\n            return imgEl.getAttribute('aria-label') ?? undefined;\n        }\n    }\n};\nconst getImgRegularStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    const scale = getScale({\n        containerHeight,\n        containerWidth,\n        hasScalableSrc,\n        offset,\n        targetHeight,\n        targetWidth,\n    });\n    return {\n        top: containerTop,\n        left: containerLeft,\n        width: containerWidth * scale,\n        height: containerHeight * scale,\n        transform: `translate(0,0) scale(${1 / scale})`,\n    };\n};\nconst parsePosition = ({ position, relativeNum }) => {\n    const positionNum = parseFloat(position);\n    return position.endsWith('%')\n        ? relativeNum * positionNum / 100\n        : positionNum;\n};\nconst getImgObjectFitStyle = ({ containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, objectFit, objectPosition, offset, targetHeight, targetWidth, }) => {\n    if (objectFit === 'scale-down') {\n        if (targetWidth <= containerWidth && targetHeight <= containerHeight) {\n            objectFit = 'none';\n        }\n        else {\n            objectFit = 'contain';\n        }\n    }\n    if (objectFit === 'cover' || objectFit === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = objectFit === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'none') {\n        const [posLeft = '50%', posTop = '50%'] = objectPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (objectFit === 'fill') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = Math.max(widthRatio, heightRatio);\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            width: containerWidth * scale,\n            height: containerHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        return {};\n    }\n};\nconst getDivImgStyle = ({ backgroundPosition, backgroundSize, containerHeight, containerLeft, containerTop, containerWidth, hasScalableSrc, offset, targetHeight, targetWidth, }) => {\n    if (backgroundSize === 'cover' || backgroundSize === 'contain') {\n        const widthRatio = containerWidth / targetWidth;\n        const heightRatio = containerHeight / targetHeight;\n        const ratio = backgroundSize === 'cover'\n            ? Math.max(widthRatio, heightRatio)\n            : Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else if (backgroundSize === 'auto') {\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight });\n        const scale = getScale({\n            containerHeight: targetHeight,\n            containerWidth: targetWidth,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * scale,\n            height: targetHeight * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n    else {\n        const [sizeW = '50%', sizeH = '50%'] = backgroundSize.split(' ');\n        const sizeWidth = parsePosition({ position: sizeW, relativeNum: containerWidth });\n        const sizeHeight = parsePosition({ position: sizeH, relativeNum: containerHeight });\n        const widthRatio = sizeWidth / targetWidth;\n        const heightRatio = sizeHeight / targetHeight;\n        const ratio = Math.min(widthRatio, heightRatio);\n        const [posLeft = '50%', posTop = '50%'] = backgroundPosition.split(' ');\n        const posX = parsePosition({ position: posLeft, relativeNum: containerWidth - targetWidth * ratio });\n        const posY = parsePosition({ position: posTop, relativeNum: containerHeight - targetHeight * ratio });\n        const scale = getScale({\n            containerHeight: targetHeight * ratio,\n            containerWidth: targetWidth * ratio,\n            hasScalableSrc,\n            offset,\n            targetHeight,\n            targetWidth,\n        });\n        return {\n            top: containerTop + posY,\n            left: containerLeft + posX,\n            width: targetWidth * ratio * scale,\n            height: targetHeight * ratio * scale,\n            transform: `translate(0,0) scale(${1 / scale})`,\n        };\n    }\n};\nconst SRC_SVG_REGEX = /\\.svg$/i;\nconst getStyleModalImg = ({ hasZoomImg, imgSrc, isSvg, isZoomed, loadedImgEl, offset, shouldRefresh, targetEl, }) => {\n    const hasScalableSrc = isSvg ||\n        imgSrc?.slice?.(0, 18) === 'data:image/svg+xml' ||\n        hasZoomImg ||\n        !!(imgSrc && SRC_SVG_REGEX.test(imgSrc));\n    const imgRect = targetEl.getBoundingClientRect();\n    const targetElComputedStyle = window.getComputedStyle(targetEl);\n    const isDivImg = loadedImgEl != null && testDiv(targetEl);\n    const isImgObjectFit = loadedImgEl != null && !isDivImg;\n    const styleImgRegular = getImgRegularStyle({\n        containerHeight: imgRect.height,\n        containerLeft: imgRect.left,\n        containerTop: imgRect.top,\n        containerWidth: imgRect.width,\n        hasScalableSrc,\n        offset,\n        targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n        targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n    });\n    const styleImgObjectFit = isImgObjectFit\n        ? getImgObjectFitStyle({\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            objectFit: targetElComputedStyle.objectFit,\n            objectPosition: targetElComputedStyle.objectPosition,\n            offset,\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n        })\n        : undefined;\n    const styleDivImg = isDivImg\n        ? getDivImgStyle({\n            backgroundPosition: targetElComputedStyle.backgroundPosition,\n            backgroundSize: targetElComputedStyle.backgroundSize,\n            containerHeight: imgRect.height,\n            containerLeft: imgRect.left,\n            containerTop: imgRect.top,\n            containerWidth: imgRect.width,\n            hasScalableSrc,\n            offset,\n            targetHeight: loadedImgEl?.naturalHeight || imgRect.height,\n            targetWidth: loadedImgEl?.naturalWidth || imgRect.width,\n        })\n        : undefined;\n    const style = Object.assign({}, styleImgRegular, styleImgObjectFit, styleDivImg);\n    if (isZoomed) {\n        const viewportX = window.innerWidth / 2;\n        const viewportY = window.innerHeight / 2;\n        const childCenterX = parseFloat(String(style.left || 0)) + (parseFloat(String(style.width || 0)) / 2);\n        const childCenterY = parseFloat(String(style.top || 0)) + (parseFloat(String(style.height || 0)) / 2);\n        const translateX = viewportX - childCenterX;\n        const translateY = viewportY - childCenterY;\n        if (shouldRefresh) {\n            style.transitionDuration = '0.01ms';\n        }\n        style.transform = `translate(${translateX}px,${translateY}px) scale(1)`;\n    }\n    return style;\n};\nconst getStyleGhost = (imgEl) => {\n    if (!imgEl) {\n        return {};\n    }\n    if (testSvg(imgEl)) {\n        const parentEl = imgEl.parentElement;\n        const rect = imgEl.getBoundingClientRect();\n        if (parentEl) {\n            const parentRect = parentEl.getBoundingClientRect();\n            return {\n                height: rect.height,\n                left: parentRect.left - rect.left,\n                top: parentRect.top - rect.top,\n                width: rect.width,\n            };\n        }\n        else {\n            return {\n                height: rect.height,\n                left: rect.left,\n                width: rect.width,\n                top: rect.top,\n            };\n        }\n    }\n    else {\n        return {\n            height: imgEl.offsetHeight,\n            left: imgEl.offsetLeft,\n            width: imgEl.offsetWidth,\n            top: imgEl.offsetTop,\n        };\n    }\n};\nconst adjustSvgIDs = (svgEl) => {\n    const newIdSuffix = '-zoom';\n    const attrs = [\n        'clip-path',\n        'fill',\n        'mask',\n        'marker-start',\n        'marker-mid',\n        'marker-end',\n    ];\n    const idMap = new Map();\n    if (svgEl.hasAttribute('id')) {\n        const oldId = svgEl.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        svgEl.id = newId;\n    }\n    svgEl.querySelectorAll('[id]').forEach(el => {\n        const oldId = el.id;\n        const newId = oldId + newIdSuffix;\n        idMap.set(oldId, newId);\n        el.id = newId;\n    });\n    idMap.forEach((newId, oldId) => {\n        const urlOldID = `url(#${oldId})`;\n        const urlNewID = `url(#${newId})`;\n        const attrsQuery = attrs.map(attr => `[${attr}=\"${urlOldID}\"]`).join(', ');\n        svgEl.querySelectorAll(attrsQuery).forEach(usedEl => {\n            attrs.forEach(attr => {\n                if (usedEl.getAttribute(attr) === urlOldID) {\n                    usedEl.setAttribute(attr, urlNewID);\n                }\n            });\n        });\n    });\n    svgEl.querySelectorAll('style').forEach(styleEl => {\n        idMap.forEach((newId, oldId) => {\n            if (styleEl.textContent) {\n                styleEl.textContent = styleEl.textContent.replaceAll(`#${oldId}`, `#${newId}`);\n            }\n        });\n    });\n};\n\nconst IMAGE_QUERY = ['img', 'svg', '[role=\"img\"]', '[data-zoom]']\n    .map(x => `${x}:not([aria-hidden=\"true\"])`)\n    .join(',');\nconst defaultBodyAttrs = {\n    overflow: '',\n    width: '',\n};\nfunction Controlled(props) {\n    return React.createElement(ControlledBase, { ...props });\n}\nclass ControlledBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            id: '',\n            isZoomImgLoaded: false,\n            loadedImgEl: undefined,\n            modalState: \"UNLOADED\",\n            shouldRefresh: false,\n            styleGhost: {},\n        };\n        this.refContent = React.createRef();\n        this.refDialog = React.createRef();\n        this.refModalContent = React.createRef();\n        this.refModalImg = React.createRef();\n        this.refWrap = React.createRef();\n        this.imgEl = null;\n        this.isScaling = false;\n        this.prevBodyAttrs = defaultBodyAttrs;\n        this.styleModalImg = {};\n        this.handleModalStateChange = (prevModalState) => {\n            const { modalState } = this.state;\n            if (prevModalState !== \"LOADING\" && modalState === \"LOADING\") {\n                this.loadZoomImg();\n                window.addEventListener('resize', this.handleResize, { passive: true });\n                window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n                window.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n                window.addEventListener('touchend', this.handleTouchEnd, { passive: true });\n                window.addEventListener('touchcancel', this.handleTouchCancel, { passive: true });\n                document.addEventListener('keydown', this.handleKeyDown, true);\n            }\n            else if (prevModalState !== \"LOADED\" && modalState === \"LOADED\") {\n                window.addEventListener('wheel', this.handleWheel, { passive: true });\n            }\n            else if (prevModalState !== \"UNLOADING\" && modalState === \"UNLOADING\") {\n                this.ensureImgTransitionEnd();\n                window.removeEventListener('wheel', this.handleWheel);\n                window.removeEventListener('touchstart', this.handleTouchStart);\n                window.removeEventListener('touchmove', this.handleTouchMove);\n                window.removeEventListener('touchend', this.handleTouchEnd);\n                window.removeEventListener('touchcancel', this.handleTouchCancel);\n                document.removeEventListener('keydown', this.handleKeyDown, true);\n            }\n            else if (prevModalState !== \"UNLOADED\" && modalState === \"UNLOADED\") {\n                this.bodyScrollEnable();\n                window.removeEventListener('resize', this.handleResize);\n                this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n                this.refDialog.current?.close?.();\n            }\n        };\n        this.getDialogContainer = () => {\n            let el = document.querySelector('[data-rmiz-portal]');\n            if (el == null) {\n                el = document.createElement('div');\n                el.setAttribute('data-rmiz-portal', '');\n                document.body.appendChild(el);\n            }\n            return el;\n        };\n        this.setId = () => {\n            const gen4 = () => Math.random().toString(16).slice(-4);\n            this.setState({ id: gen4() + gen4() + gen4() });\n        };\n        this.setAndTrackImg = () => {\n            const contentEl = this.refContent.current;\n            if (!contentEl)\n                return;\n            this.imgEl = contentEl.querySelector(IMAGE_QUERY);\n            if (this.imgEl) {\n                this.contentNotFoundChangeObserver?.disconnect?.();\n                this.imgEl.addEventListener('load', this.handleImgLoad);\n                this.imgEl.addEventListener('click', this.handleZoom);\n                if (!this.state.loadedImgEl) {\n                    this.handleImgLoad();\n                }\n                this.imgElResizeObserver = new ResizeObserver(entries => {\n                    const entry = entries[0];\n                    if (entry?.target) {\n                        this.imgEl = entry.target;\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\n                    }\n                });\n                this.imgElResizeObserver.observe(this.imgEl);\n                if (!this.contentChangeObserver) {\n                    this.contentChangeObserver = new MutationObserver(() => {\n                        this.setState({ styleGhost: getStyleGhost(this.imgEl) });\n                    });\n                    this.contentChangeObserver.observe(contentEl, { attributes: true, childList: true, subtree: true });\n                }\n            }\n            else if (!this.contentNotFoundChangeObserver) {\n                this.contentNotFoundChangeObserver = new MutationObserver(this.setAndTrackImg);\n                this.contentNotFoundChangeObserver.observe(contentEl, { childList: true, subtree: true });\n            }\n        };\n        this.handleIfZoomChanged = (prevIsZoomed) => {\n            const { isZoomed } = this.props;\n            if (!prevIsZoomed && isZoomed) {\n                this.zoom();\n            }\n            else if (prevIsZoomed && !isZoomed) {\n                this.unzoom();\n            }\n        };\n        this.handleImgLoad = () => {\n            const imgSrc = getImgSrc(this.imgEl);\n            if (!imgSrc)\n                return;\n            const img = new Image();\n            if (testImg(this.imgEl)) {\n                img.sizes = this.imgEl.sizes;\n                img.srcset = this.imgEl.srcset;\n            }\n            img.src = imgSrc;\n            const setLoaded = () => {\n                this.setState({\n                    loadedImgEl: img,\n                    styleGhost: getStyleGhost(this.imgEl),\n                });\n            };\n            img\n                .decode()\n                .then(setLoaded)\n                .catch(() => {\n                if (testImgLoaded(img)) {\n                    setLoaded();\n                    return;\n                }\n                img.onload = setLoaded;\n            });\n        };\n        this.handleZoom = () => {\n            if (this.hasImage()) {\n                this.props.onZoomChange?.(true);\n            }\n        };\n        this.handleUnzoom = () => {\n            this.props.onZoomChange?.(false);\n        };\n        this.handleBtnUnzoomClick = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.handleUnzoom();\n        };\n        this.handleDialogCancel = (e) => {\n            e.preventDefault();\n        };\n        this.handleDialogClick = (e) => {\n            if (e.target === this.refModalContent.current || e.target === this.refModalImg.current) {\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleDialogClose = (e) => {\n            e.stopPropagation();\n            this.handleUnzoom();\n        };\n        this.handleKeyDown = (e) => {\n            if (e.key === 'Escape' || e.keyCode === 27) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.handleUnzoom();\n            }\n        };\n        this.handleWheel = (e) => {\n            if (e.ctrlKey)\n                return;\n            e.stopPropagation();\n            queueMicrotask(() => {\n                this.handleUnzoom();\n            });\n        };\n        this.handleTouchStart = (e) => {\n            if (e.touches.length > 1) {\n                this.isScaling = true;\n                return;\n            }\n            if (e.changedTouches.length === 1 && e.changedTouches[0]) {\n                this.touchYStart = e.changedTouches[0].screenY;\n            }\n        };\n        this.handleTouchMove = (e) => {\n            const browserScale = window.visualViewport?.scale ?? 1;\n            if (this.props.canSwipeToUnzoom &&\n                !this.isScaling &&\n                browserScale <= 1 && this.touchYStart != null &&\n                e.changedTouches[0]) {\n                this.touchYEnd = e.changedTouches[0].screenY;\n                const max = Math.max(this.touchYStart, this.touchYEnd);\n                const min = Math.min(this.touchYStart, this.touchYEnd);\n                const delta = Math.abs(max - min);\n                if (delta > this.props.swipeToUnzoomThreshold) {\n                    this.touchYStart = undefined;\n                    this.touchYEnd = undefined;\n                    this.handleUnzoom();\n                }\n            }\n        };\n        this.handleTouchEnd = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleTouchCancel = () => {\n            this.isScaling = false;\n            this.touchYStart = undefined;\n            this.touchYEnd = undefined;\n        };\n        this.handleResize = () => {\n            this.setState({ shouldRefresh: true });\n        };\n        this.hasImage = () => {\n            return this.imgEl &&\n                (this.state.loadedImgEl || testSvg(this.imgEl)) &&\n                window.getComputedStyle(this.imgEl).display !== 'none';\n        };\n        this.zoom = () => {\n            this.bodyScrollDisable();\n            this.refDialog.current?.showModal?.();\n            this.refModalImg.current?.addEventListener?.('transitionend', this.handleImgTransitionEnd);\n            this.setState({ modalState: \"LOADING\" });\n        };\n        this.unzoom = () => {\n            this.setState({ modalState: \"UNLOADING\" });\n        };\n        this.handleImgTransitionEnd = () => {\n            clearTimeout(this.timeoutTransitionEnd);\n            if (this.state.modalState === \"LOADING\") {\n                this.setState({ modalState: \"LOADED\" });\n            }\n            else if (this.state.modalState === \"UNLOADING\") {\n                this.setState({ shouldRefresh: false, modalState: \"UNLOADED\" });\n            }\n        };\n        this.ensureImgTransitionEnd = () => {\n            if (this.refModalImg.current) {\n                const td = window.getComputedStyle(this.refModalImg.current).transitionDuration;\n                const tdFloat = parseFloat(td);\n                if (tdFloat) {\n                    const tdMs = tdFloat * (td.endsWith('ms') ? 1 : 1000) + 50;\n                    this.timeoutTransitionEnd = setTimeout(this.handleImgTransitionEnd, tdMs);\n                }\n            }\n        };\n        this.bodyScrollDisable = () => {\n            this.prevBodyAttrs = {\n                overflow: document.body.style.overflow,\n                width: document.body.style.width,\n            };\n            const clientWidth = document.body.clientWidth;\n            document.body.style.overflow = 'hidden';\n            document.body.style.width = `${clientWidth}px`;\n        };\n        this.bodyScrollEnable = () => {\n            document.body.style.width = this.prevBodyAttrs.width;\n            document.body.style.overflow = this.prevBodyAttrs.overflow;\n            this.prevBodyAttrs = defaultBodyAttrs;\n        };\n        this.loadZoomImg = () => {\n            const { props: { zoomImg } } = this;\n            const zoomImgSrc = zoomImg?.src;\n            if (zoomImgSrc) {\n                const img = new Image();\n                img.sizes = zoomImg?.sizes ?? '';\n                img.srcset = zoomImg?.srcSet ?? '';\n                img.src = zoomImgSrc;\n                const setLoaded = () => {\n                    this.setState({ isZoomImgLoaded: true });\n                };\n                img\n                    .decode()\n                    .then(setLoaded)\n                    .catch(() => {\n                    if (testImgLoaded(img)) {\n                        setLoaded();\n                        return;\n                    }\n                    img.onload = setLoaded;\n                });\n            }\n        };\n        this.UNSAFE_handleSvg = () => {\n            const { imgEl, refModalImg, styleModalImg } = this;\n            if (testSvg(imgEl)) {\n                const svgEl = imgEl.cloneNode(true);\n                adjustSvgIDs(svgEl);\n                svgEl.style.width = `${styleModalImg.width || 0}px`;\n                svgEl.style.height = `${styleModalImg.height || 0}px`;\n                svgEl.addEventListener('click', this.handleUnzoom);\n                refModalImg.current?.firstChild?.remove?.();\n                refModalImg.current?.appendChild?.(svgEl);\n            }\n        };\n    }\n    render() {\n        const { handleBtnUnzoomClick, handleDialogCancel, handleDialogClick, handleDialogClose, handleUnzoom, handleZoom, imgEl, props: { a11yNameButtonUnzoom, a11yNameButtonZoom, children, classDialog, IconUnzoom, IconZoom, isZoomed, wrapElement: WrapElement, ZoomContent, zoomImg, zoomMargin, }, refContent, refDialog, refModalContent, refModalImg, refWrap, state: { id, isZoomImgLoaded, loadedImgEl, modalState, shouldRefresh, styleGhost, }, } = this;\n        const idModal = `rmiz-modal-${id}`;\n        const idModalImg = `rmiz-modal-img-${id}`;\n        const isDiv = testDiv(imgEl);\n        const isImg = testImg(imgEl);\n        const isSvg = testSvg(imgEl);\n        const imgAlt = getImgAlt(imgEl);\n        const imgSrc = getImgSrc(imgEl);\n        const imgSizes = isImg ? imgEl.sizes : undefined;\n        const imgSrcSet = isImg ? imgEl.srcset : undefined;\n        const hasZoomImg = !!zoomImg?.src;\n        const hasImage = this.hasImage();\n        const labelBtnZoom = imgAlt\n            ? `${a11yNameButtonZoom}: ${imgAlt}`\n            : a11yNameButtonZoom;\n        const isModalActive = modalState === \"LOADING\" ||\n            modalState === \"LOADED\";\n        const dataContentState = hasImage ? 'found' : 'not-found';\n        const dataOverlayState = modalState === \"UNLOADED\" || modalState === \"UNLOADING\"\n            ? 'hidden'\n            : 'visible';\n        const styleContent = {\n            visibility: modalState === \"UNLOADED\" ? 'visible' : 'hidden',\n        };\n        this.styleModalImg = hasImage\n            ? getStyleModalImg({\n                hasZoomImg,\n                imgSrc,\n                isSvg,\n                isZoomed: isZoomed && isModalActive,\n                loadedImgEl,\n                offset: zoomMargin,\n                shouldRefresh,\n                targetEl: imgEl,\n            })\n            : {};\n        let modalContent = null;\n        if (hasImage) {\n            const modalImg = isImg || isDiv\n                ? React.createElement(\"img\", { alt: imgAlt, sizes: imgSizes, src: imgSrc, srcSet: imgSrcSet, ...isZoomImgLoaded && modalState === \"LOADED\" ? zoomImg : {}, \"data-rmiz-modal-img\": \"\", height: this.styleModalImg.height || undefined, id: idModalImg, ref: refModalImg, style: this.styleModalImg, width: this.styleModalImg.width || undefined })\n                : isSvg\n                    ? React.createElement(\"div\", { \"data-rmiz-modal-img\": true, ref: refModalImg, style: this.styleModalImg })\n                    : null;\n            const modalBtnUnzoom = React.createElement(\"button\", { \"aria-label\": a11yNameButtonUnzoom, \"data-rmiz-btn-unzoom\": \"\", onClick: handleBtnUnzoomClick, type: \"button\" },\n                React.createElement(IconUnzoom, null));\n            modalContent = ZoomContent\n                ? React.createElement(ZoomContent, { buttonUnzoom: modalBtnUnzoom, modalState: modalState, img: modalImg, onUnzoom: handleUnzoom })\n                : React.createElement(React.Fragment, null,\n                    modalImg,\n                    modalBtnUnzoom);\n        }\n        return (React.createElement(WrapElement, { \"aria-owns\": idModal, \"data-rmiz\": \"\", ref: refWrap },\n            React.createElement(WrapElement, { \"data-rmiz-content\": dataContentState, ref: refContent, style: styleContent }, children),\n            hasImage && React.createElement(WrapElement, { \"data-rmiz-ghost\": \"\", style: styleGhost },\n                React.createElement(\"button\", { \"aria-label\": labelBtnZoom, \"data-rmiz-btn-zoom\": \"\", onClick: handleZoom, type: \"button\" },\n                    React.createElement(IconZoom, null))),\n            hasImage && ReactDOM.createPortal(React.createElement(\"dialog\", { \"aria-labelledby\": idModalImg, \"aria-modal\": \"true\", className: classDialog, \"data-rmiz-modal\": \"\", id: idModal, onClick: handleDialogClick, onClose: handleDialogClose, onCancel: handleDialogCancel, ref: refDialog, role: \"dialog\" },\n                React.createElement(\"div\", { \"data-rmiz-modal-overlay\": dataOverlayState }),\n                React.createElement(\"div\", { \"data-rmiz-modal-content\": \"\", ref: refModalContent }, modalContent)), this.getDialogContainer())));\n    }\n    componentDidMount() {\n        this.setId();\n        this.setAndTrackImg();\n        this.handleImgLoad();\n        this.UNSAFE_handleSvg();\n    }\n    componentWillUnmount() {\n        if (this.state.modalState !== \"UNLOADED\") {\n            this.bodyScrollEnable();\n        }\n        this.contentChangeObserver?.disconnect?.();\n        this.contentNotFoundChangeObserver?.disconnect?.();\n        this.imgElResizeObserver?.disconnect?.();\n        this.imgEl?.removeEventListener?.('load', this.handleImgLoad);\n        this.imgEl?.removeEventListener?.('click', this.handleZoom);\n        this.refModalImg.current?.removeEventListener?.('transitionend', this.handleImgTransitionEnd);\n        window.removeEventListener('wheel', this.handleWheel);\n        window.removeEventListener('touchstart', this.handleTouchStart);\n        window.removeEventListener('touchmove', this.handleTouchMove);\n        window.removeEventListener('touchend', this.handleTouchEnd);\n        window.removeEventListener('touchcancel', this.handleTouchCancel);\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        this.handleModalStateChange(prevState.modalState);\n        this.UNSAFE_handleSvg();\n        this.handleIfZoomChanged(prevProps.isZoomed);\n    }\n}\nControlledBase.defaultProps = {\n    a11yNameButtonUnzoom: 'Minimize image',\n    a11yNameButtonZoom: 'Expand image',\n    canSwipeToUnzoom: true,\n    IconUnzoom: ICompress,\n    IconZoom: IEnlarge,\n    swipeToUnzoomThreshold: 10,\n    wrapElement: 'div',\n    zoomMargin: 0,\n};\n\nfunction Uncontrolled(props) {\n    const [isZoomed, setIsZoomed] = React.useState(false);\n    return React.createElement(Controlled, { ...props, isZoomed: isZoomed, onZoomChange: setIsZoomed });\n}\n\nexport { Controlled, Uncontrolled as default };\n"],"names":["testElType","type","el","tagName","toUpperCase","testDiv","testImg","testImgLoaded","complete","naturalHeight","testSvg","getScaleToWindow","height","offset","width","Math","min","window","innerWidth","innerHeight","getScale","containerHeight","containerWidth","hasScalableSrc","targetHeight","targetWidth","scale","ratio","getScaleToWindowMax","URL_REGEX","getImgSrc","imgEl","currentSrc","bgImg","getComputedStyle","backgroundImage","exec","parsePosition","position","relativeNum","positionNum","parseFloat","endsWith","SRC_SVG_REGEX","getStyleModalImg","hasZoomImg","imgSrc","isSvg","isZoomed","loadedImgEl","shouldRefresh","targetEl","slice","test","imgRect","getBoundingClientRect","targetElComputedStyle","isDivImg","isImgObjectFit","styleImgRegular","containerLeft","containerTop","top","left","transform","getImgRegularStyle","naturalWidth","styleImgObjectFit","objectFit","objectPosition","widthRatio","heightRatio","max","posLeft","posTop","split","posX","posY","getImgObjectFitStyle","styleDivImg","backgroundPosition","backgroundSize","sizeW","sizeH","getDivImgStyle","style","Object","assign","viewportX","viewportY","translateX","String","translateY","transitionDuration","getStyleGhost","parentEl","parentElement","rect","parentRect","offsetHeight","offsetLeft","offsetWidth","offsetTop","IMAGE_QUERY","map","x","join","defaultBodyAttrs","overflow","Controlled","props","React","createElement","ControlledBase","Component","constructor","super","arguments","this","state","id","isZoomImgLoaded","modalState","styleGhost","refContent","createRef","refDialog","refModalContent","refModalImg","refWrap","isScaling","prevBodyAttrs","styleModalImg","handleModalStateChange","prevModalState","loadZoomImg","addEventListener","handleResize","passive","handleTouchStart","handleTouchMove","handleTouchEnd","handleTouchCancel","document","handleKeyDown","handleWheel","ensureImgTransitionEnd","removeEventListener","bodyScrollEnable","current","handleImgTransitionEnd","close","getDialogContainer","querySelector","setAttribute","body","appendChild","setId","gen4","random","toString","setState","setAndTrackImg","contentEl","contentNotFoundChangeObserver","disconnect","handleImgLoad","handleZoom","imgElResizeObserver","ResizeObserver","entries","entry","target","observe","contentChangeObserver","MutationObserver","attributes","childList","subtree","handleIfZoomChanged","prevIsZoomed","zoom","unzoom","img","Image","sizes","srcset","src","setLoaded","decode","then","catch","onload","hasImage","onZoomChange","handleUnzoom","handleBtnUnzoomClick","e","preventDefault","stopPropagation","handleDialogCancel","handleDialogClick","handleDialogClose","key","keyCode","ctrlKey","queueMicrotask","touches","length","changedTouches","touchYStart","screenY","browserScale","visualViewport","canSwipeToUnzoom","touchYEnd","abs","swipeToUnzoomThreshold","display","bodyScrollDisable","showModal","clearTimeout","timeoutTransitionEnd","td","tdFloat","tdMs","setTimeout","clientWidth","zoomImg","zoomImgSrc","srcSet","UNSAFE_handleSvg","svgEl","cloneNode","newIdSuffix","attrs","idMap","Map","hasAttribute","oldId","newId","set","querySelectorAll","forEach","urlOldID","urlNewID","attrsQuery","attr","usedEl","getAttribute","styleEl","textContent","replaceAll","adjustSvgIDs","firstChild","remove","render","a11yNameButtonUnzoom","a11yNameButtonZoom","children","classDialog","IconUnzoom","IconZoom","wrapElement","WrapElement","ZoomContent","zoomMargin","idModal","idModalImg","isDiv","isImg","imgAlt","alt","getImgAlt","imgSizes","imgSrcSet","labelBtnZoom","isModalActive","dataContentState","dataOverlayState","styleContent","visibility","modalContent","modalImg","ref","modalBtnUnzoom","onClick","buttonUnzoom","onUnzoom","Fragment","ReactDOM","createPortal","className","onClose","onCancel","role","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","prevState","Uncontrolled","setIsZoomed","useState","defaultProps","ICompress","fill","focusable","viewBox","xmlns","d","IEnlarge"],"mappings":"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","x_google_ignoreList":[0]}