{"version":3,"file":"FilterOptions.-kirZheg.js","sources":["../../../app/components/FilterOptions.tsx"],"sourcesContent":["import deburr from \"lodash/deburr\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState, MenuButton } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport { s } from \"@shared/styles\";\nimport type { FetchPageParams } from \"~/stores/base/Store\";\nimport Button, { Inner } from \"~/components/Button\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport MenuItem from \"~/components/ContextMenu/MenuItem\";\nimport Text from \"~/components/Text\";\nimport Input, { NativeInput, Outline } from \"./Input\";\nimport PaginatedList, { PaginatedItem } from \"./PaginatedList\";\n\ninterface TFilterOption extends PaginatedItem {\n  key: string;\n  label: string;\n  note?: string;\n  icon?: React.ReactNode;\n}\n\ntype Props = {\n  options: TFilterOption[];\n  selectedKeys: (string | null | undefined)[];\n  defaultLabel?: string;\n  className?: string;\n  onSelect: (key: string | null | undefined) => void;\n  showFilter?: boolean;\n  fetchQuery?: (options: FetchPageParams) => Promise<PaginatedItem[]>;\n  fetchQueryOptions?: Record<string, string>;\n};\n\nconst FilterOptions = ({\n  options,\n  selectedKeys = [],\n  defaultLabel = \"Filter options\",\n  className,\n  onSelect,\n  showFilter,\n  fetchQuery,\n  fetchQueryOptions,\n}: Props) => {\n  const { t } = useTranslation();\n  const searchInputRef = React.useRef<HTMLInputElement>(null);\n  const listRef = React.useRef<HTMLDivElement | null>(null);\n  const menu = useMenuState({\n    modal: false,\n  });\n  const selectedItems = options.filter((option) =>\n    selectedKeys.includes(option.key)\n  );\n  const [query, setQuery] = React.useState(\"\");\n\n  const selectedLabel = selectedItems.length\n    ? selectedItems.map((selected) => selected.label).join(\", \")\n    : \"\";\n\n  const renderItem = React.useCallback(\n    (option: TFilterOption) => (\n      <MenuItem\n        key={option.key}\n        onClick={() => {\n          onSelect(option.key);\n          menu.hide();\n        }}\n        selected={selectedKeys.includes(option.key)}\n        {...menu}\n      >\n        {option.icon}\n        {option.note ? (\n          <LabelWithNote>\n            {option.label}\n            <Note>{option.note}</Note>\n          </LabelWithNote>\n        ) : (\n          option.label\n        )}\n      </MenuItem>\n    ),\n    [menu, onSelect, selectedKeys]\n  );\n\n  const handleFilter = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(ev.target.value);\n  };\n\n  const filteredOptions = React.useMemo(() => {\n    const normalizedQuery = deburr(query.toLowerCase());\n\n    return query\n      ? options\n          .filter((option) =>\n            deburr(option.label).toLowerCase().includes(normalizedQuery)\n          )\n          // sort options starting with query first\n          .sort((a, b) => {\n            const aStartsWith = deburr(a.label)\n              .toLowerCase()\n              .startsWith(normalizedQuery);\n            const bStartsWith = deburr(b.label)\n              .toLowerCase()\n              .startsWith(normalizedQuery);\n\n            if (aStartsWith && !bStartsWith) {\n              return -1;\n            }\n            if (!aStartsWith && bStartsWith) {\n              return 1;\n            }\n            return 0;\n          })\n      : options;\n  }, [options, query]);\n\n  const handleKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent) => {\n      if (ev.nativeEvent.isComposing || ev.shiftKey) {\n        return;\n      }\n\n      switch (ev.key) {\n        case \"Escape\":\n          menu.hide();\n          break;\n        case \"Enter\":\n          if (filteredOptions.length === 1) {\n            ev.preventDefault();\n            onSelect(filteredOptions[0].key);\n            menu.hide();\n          }\n          break;\n        case \"ArrowDown\":\n          ev.preventDefault();\n          (listRef.current?.firstElementChild as HTMLElement)?.focus();\n          break;\n        default:\n          break;\n      }\n    },\n    [filteredOptions, menu, onSelect]\n  );\n\n  const handleEscapeFromList = React.useCallback((ev: React.KeyboardEvent) => {\n    searchInputRef.current?.focus();\n\n    if (ev.key === \"Backspace\") {\n      setQuery((prev) => prev.slice(0, -1));\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (menu.visible) {\n      searchInputRef.current?.focus();\n    } else {\n      setQuery(\"\");\n    }\n  }, [menu.visible]);\n\n  const showFilterInput = showFilter || options.length > 10;\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(props) => (\n          <StyledButton\n            {...props}\n            className={className}\n            icon={selectedItems[0]?.key && selectedItems[0]?.icon}\n            neutral\n            disclosure\n          >\n            {selectedItems.length ? selectedLabel : defaultLabel}\n          </StyledButton>\n        )}\n      </MenuButton>\n      <ContextMenu aria-label={defaultLabel} minHeight={66} {...menu}>\n        <PaginatedList\n          listRef={listRef}\n          options={{ query, ...fetchQueryOptions }}\n          items={filteredOptions}\n          fetch={fetchQuery}\n          renderItem={renderItem}\n          onEscape={handleEscapeFromList}\n          heading={showFilterInput ? <Spacer /> : undefined}\n          empty={<Empty />}\n        />\n        {showFilterInput && (\n          <SearchInput\n            ref={searchInputRef}\n            value={query}\n            onChange={handleFilter}\n            onKeyDown={handleKeyDown}\n            placeholder={`${t(\"Filter\")}â€¦`}\n            autoFocus\n          />\n        )}\n      </ContextMenu>\n    </>\n  );\n};\n\nconst Empty = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Spacer />\n      <Text size=\"small\" type=\"tertiary\" style={{ marginLeft: 6 }}>\n        {t(\"No results\")}\n      </Text>\n    </>\n  );\n};\n\nconst Spacer = styled.div`\n  height: 30px;\n`;\n\nconst SearchInput = styled(Input)`\n  position: absolute;\n  width: 100%;\n  border: none;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  overflow: hidden;\n  margin: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n\n  ${Outline} {\n    border: none;\n    border-radius: 0;\n    border-bottom: 1px solid ${s(\"divider\")};\n    background: ${s(\"menuBackground\")};\n    margin: 0;\n  }\n\n  ${NativeInput} {\n    font-size: 14px;\n  }\n`;\n\nconst Note = styled(Text)`\n  display: block;\n  margin: 2px 0;\n  line-height: 1.2em;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${s(\"textTertiary\")};\n`;\n\nconst LabelWithNote = styled.div`\n  font-weight: 500;\n  text-align: left;\n\n  &:hover ${Note} {\n    color: ${(props) => props.theme.white50};\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  box-shadow: none;\n  text-transform: none;\n  border-color: transparent;\n  height: auto;\n\n  &:hover {\n    background: transparent;\n  }\n\n  ${Inner} {\n    line-height: 28px;\n    min-height: auto;\n  }\n`;\n\nexport default FilterOptions;\n"],"names":["FilterOptions","options","selectedKeys","defaultLabel","className","onSelect","showFilter","fetchQuery","fetchQueryOptions","t","useTranslation","searchInputRef","React","listRef","menu","useMenuState","modal","selectedItems","filter","option","includes","key","query","setQuery","selectedLabel","length","map","selected","label","join","renderItem","jsxs","MenuItem","onClick","hide","icon","note","LabelWithNote","Note","filteredOptions","normalizedQuery","deburr","toLowerCase","sort","a","b","aStartsWith","startsWith","bStartsWith","handleKeyDown","ev","nativeEvent","isComposing","shiftKey","preventDefault","current","firstElementChild","focus","handleEscapeFromList","prev","slice","visible","showFilterInput","Fragment","children","jsx","MenuButton","props","StyledButton","neutral","disclosure","ContextMenu","minHeight","PaginatedList","items","fetch","onEscape","heading","Spacer","undefined","empty","Empty","SearchInput","ref","value","onChange","target","onKeyDown","placeholder","autoFocus","Text","size","type","style","marginLeft","styled","div","withConfig","componentId","Input","Outline","s","NativeInput","theme","white50","Button","Inner"],"mappings":"iSAgCA,MAAMA,cAAgBA,EACpBC,UACAC,eAAe,GACfC,eAAe,iBACfC,YACAC,WACAC,aACAC,aACAC,wBAEM,MAAAC,EAAEA,GAAMC,IACRC,EAAiBC,SAA+B,MAChDC,EAAUD,SAAoC,MAC9CE,EAAOC,EAAa,CACxBC,OAAO,IAEHC,EAAgBhB,EAAQiB,QAAQC,GACpCjB,EAAakB,SAASD,EAAOE,QAExBC,EAAOC,GAAYX,WAAe,IAEnCY,EAAgBP,EAAcQ,OAChCR,EAAcS,KAAkBC,GAAAA,EAASC,QAAOC,KAAK,MACrD,GAEEC,EAAalB,EAAAA,aAChBO,GACEY,EAAAC,EAAA,CAECC,QAAS,KACP5B,EAASc,EAAOE,KAChBP,EAAKoB,MAAK,EAEZP,SAAUzB,EAAakB,SAASD,EAAOE,QACnCP,EAEHK,SAAAA,CAAOgB,EAAAA,KACPhB,EAAOiB,KACLL,EAAAM,EACElB,CAAAA,SAAAA,CAAOS,EAAAA,QACPU,EAAMnB,CAAAA,SAAAA,EAAOiB,UAGhBjB,EAAOS,QAfJT,EAAOE,MAmBhB,CAACP,EAAMT,EAAUH,IAObqC,EAAkB3B,EAAAA,SAAc,KACpC,MAAM4B,EAAkBC,EAAOnB,EAAMoB,eAErC,OAAOpB,EACHrB,EACGiB,QACCuB,GAAAA,EAAOtB,EAAOS,OAAOc,cAActB,SAASoB,KAG7CG,MAAK,CAACC,EAAGC,KACFC,MAAAA,EAAcL,EAAOG,EAAEhB,OAC1Bc,cACAK,WAAWP,GACRQ,EAAcP,EAAOI,EAAEjB,OAC1Bc,cACAK,WAAWP,GAEVM,OAAAA,IAAgBE,GACX,GAEJF,GAAeE,EACX,EAEF,CAAA,IAEX/C,CAAAA,GACH,CAACA,EAASqB,IAEP2B,EAAgBrC,eACnBsC,IACC,IAAIA,EAAGC,YAAYC,cAAeF,EAAGG,SAIrC,OAAQH,EAAG7B,KACT,IAAK,SACHP,EAAKoB,OACL,MACF,IAAK,QAC4B,IAA3BK,EAAgBd,SAClByB,EAAGI,iBACMf,EAAAA,EAAgB,GAAGlB,KAC5BP,EAAKoB,QAEP,MACF,IAAK,YACHgB,EAAGI,iBACMC,EAAAA,SAASC,mBAAmCC,QAIzD,GAEF,CAAClB,EAAiBzB,EAAMT,IAGpBqD,EAAuB9C,eAAmBsC,IAC9CvC,EAAe4C,SAASE,QAET,cAAXP,EAAG7B,KACLE,GAAmBoC,GAAAA,EAAKC,MAAM,OAChC,GACC,IAEHhD,EAAAA,WAAgB,KACVE,EAAK+C,QACPlD,EAAe4C,SAASE,QAExBlC,EAAS,GACX,GACC,CAACT,EAAK+C,UAEHC,MAAAA,EAAkBxD,GAAcL,EAAQwB,OAAS,GAInD,OAAAM,EAAAgC,EAAA,CAAAC,SAAA,CAACC,EAAAC,EAAA,IAAepD,EACZqD,SACAA,GAAAF,EAACG,EACKD,IAAAA,EACJ/D,YACA+B,KAAMlB,EAAc,IAAII,KAAOJ,EAAc,IAAIkB,KACjDkC,SAAO,EACPC,YAAU,EAETrD,SAAcQ,EAAAA,OAASD,EAAgBrB,QAI7CoE,EAAY,CAAA,aAAYpE,EAAcqE,UAAW,MAAQ1D,EACxDkD,SAAA,CAACC,EAAAQ,EAAA,CACC5D,UACAZ,QAAS,CAAEqB,WAAUd,GACrBkE,MAAOnC,EACPoC,MAAOpE,EACPuB,aACA8C,SAAUlB,EACVmB,QAASf,IAAmBgB,EAAM,CAAA,QAAMC,EACxCC,QAAQC,YAETnB,KACEoB,EAAA,CACCC,IAAKxE,EACLyE,MAAO9D,EACP+D,SA5GYnC,IACXA,EAAAA,EAAGoC,OAAOF,MAAK,EA4GhBG,UAAWtC,EACXuC,YAAa,GAAG/E,EAAE,aAClBgF,WAAS,SAIjB,EAIER,MAAQA,KACN,MAAAxE,EAAEA,GAAMC,IAIV,OAAAqB,EAAAgC,EAAA,CAAAC,SAAA,CAAAC,EAACa,EAAM,MACNY,EAAK,CAAAC,KAAK,QAAQC,KAAK,WAAWC,MAAO,CAAEC,WAAY,GACrDrF,SAAEA,EAAA,kBAEP,EAIEqE,EAASiB,EAAOC,IAAGC,WAAA,CAAAC,YAAA,eAAVH,CAEd,CAAA,iBAEKb,EAAca,EAAOI,GAAMF,WAAA,CAAAC,YAAA,eAAbH,CAAa,CAAA,iJAAA,wDAAA,eAAA,cAAA,qBAY7BK,EAG2BC,EAAE,WACfA,EAAE,kBAIhBC,GAKEhE,EAAOyD,EAAOL,GAAKO,WAAA,CAAAC,YAAA,eAAZH,CAAY,CAAA,qFAAA,KAMdM,EAAE,iBAGPhE,EAAgB0D,EAAOC,IAAGC,WAAA,CAAAC,YAAA,eAAVH,CAIVzD,CAAAA,2CAAAA,UAAAA,MAAAA,GACE6B,GAAUA,EAAMoC,MAAMC,UAIvBpC,EAAe2B,EAAOU,GAAOR,WAAA,CAAAC,YAAA,eAAdH,CAAc,CAAA,4GAAA,uCAUtCW"}