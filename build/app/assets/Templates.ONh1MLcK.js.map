{"version":3,"file":"Templates.ONh1MLcK.js","sources":["../../../app/menus/NewTemplateMenu.tsx","../../../app/scenes/Settings/Templates.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MenuButton, useMenuState } from \"reakit/Menu\";\nimport Button from \"~/components/Button\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport CollectionIcon from \"~/components/Icons/CollectionIcon\";\nimport TeamLogo from \"~/components/TeamLogo\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { MenuItem } from \"~/types\";\nimport { newTemplatePath } from \"~/utils/routeHelpers\";\n\nfunction NewTemplateMenu() {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const { t } = useTranslation();\n  const team = useCurrentTeam();\n  const { collections, policies } = useStores();\n  const can = usePolicy(team);\n  React.useEffect(() => {\n    void collections.fetchPage({\n      limit: 100,\n    });\n  }, [collections]);\n\n  const workspaceItem: MenuItem | null = can.createTemplate\n    ? {\n        type: \"route\",\n        to: newTemplatePath(),\n        title: t(\"Save in workspace\"),\n        icon: <TeamLogo model={team} />,\n      }\n    : null;\n\n  const collectionItems = React.useMemo(\n    () =>\n      collections.orderedData.reduce<MenuItem[]>((filtered, collection) => {\n        const can = policies.abilities(collection.id);\n\n        if (can.createDocument) {\n          filtered.push({\n            type: \"route\",\n            to: newTemplatePath(collection.id),\n            title: collection.name,\n            icon: <CollectionIcon collection={collection} />,\n          });\n        }\n\n        return filtered;\n      }, []),\n    [collections.orderedData, policies]\n  );\n\n  const collectionItemsWithHeader: MenuItem[] = React.useMemo(\n    () =>\n      collectionItems.length\n        ? [\n            { type: \"heading\", title: t(\"Choose a collection\") },\n            ...collectionItems,\n          ]\n        : [],\n    [t, collectionItems]\n  );\n\n  const items = workspaceItem\n    ? collectionItemsWithHeader.length\n      ? [\n          workspaceItem,\n          { type: \"separator\" } as MenuItem,\n          ...collectionItemsWithHeader,\n        ]\n      : [workspaceItem]\n    : collectionItemsWithHeader;\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(props) => (\n          <Button icon={<PlusIcon />} {...props}>\n            {t(\"New template\")}â€¦\n          </Button>\n        )}\n      </MenuButton>\n      <ContextMenu aria-label={t(\"New template\")} {...menu}>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(NewTemplateMenu);\n","import { observer } from \"mobx-react\";\nimport { ShapesIcon } from \"outline-icons\";\nimport queryString from \"query-string\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Action } from \"~/components/Actions\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport Scene from \"~/components/Scene\";\nimport Tab from \"~/components/Tab\";\nimport Tabs from \"~/components/Tabs\";\nimport Text from \"~/components/Text\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport NewTemplateMenu from \"~/menus/NewTemplateMenu\";\nimport { settingsPath } from \"~/utils/routeHelpers\";\n\nfunction Templates() {\n  const { documents } = useStores();\n  const { t } = useTranslation();\n  const param = useQuery();\n  const { fetchTemplates, templates, templatesAlphabetical } = documents;\n  const sort = param.get(\"sort\") || \"recent\";\n\n  React.useEffect(() => {\n    void documents.fetchDrafts();\n  }, [documents]);\n\n  return (\n    <Scene\n      icon={<ShapesIcon />}\n      title={t(\"Templates\")}\n      actions={\n        <Action>\n          <NewTemplateMenu />\n        </Action>\n      }\n    >\n      <Heading>{t(\"Templates\")}</Heading>\n      <Text as=\"p\" type=\"secondary\">\n        <Trans>\n          You can create templates to help your team create consistent and\n          accurate documentation.\n        </Trans>\n      </Text>\n\n      <PaginatedDocumentList\n        heading={\n          <Tabs>\n            <Tab to={settingsPath(\"templates\")} exactQueryString>\n              {t(\"Recently updated\")}\n            </Tab>\n            <Tab\n              to={{\n                pathname: settingsPath(\"templates\"),\n                search: queryString.stringify({\n                  sort: \"alphabetical\",\n                }),\n              }}\n              exactQueryString\n            >\n              {t(\"Alphabetical\")}\n            </Tab>\n          </Tabs>\n        }\n        empty={<Empty>{t(\"There are no templates just yet.\")}</Empty>}\n        fetch={fetchTemplates}\n        documents={sort === \"alphabetical\" ? templatesAlphabetical : templates}\n        showCollection\n        showDraft\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Templates);\n"],"names":["observer","NewTemplateMenu","menu","useMenuState","modal","t","useTranslation","team","useCurrentTeam","collections","policies","useStores","can","usePolicy","React","fetchPage","limit","workspaceItem","createTemplate","type","to","newTemplatePath","title","icon","jsx","TeamLogo","model","collectionItems","useMemo","orderedData","reduce","filtered","collection","abilities","id","createDocument","push","name","CollectionIcon","collectionItemsWithHeader","length","items","jsxs","Fragment","children","MenuButton","props","Button","PlusIcon","ContextMenu","Template","Templates","documents","param","useQuery","fetchTemplates","templates","templatesAlphabetical","sort","get","fetchDrafts","Scene","ShapesIcon","actions","Action","Heading","Text","as","Trans","PaginatedDocumentList","heading","Tabs","Tab","settingsPath","exactQueryString","pathname","search","queryString","stringify","empty","Empty","fetch","showCollection","showDraft"],"mappings":"uwCAmGA,MAAeA,EAAAA,GAnFf,SAASC,kBACP,MAAMC,EAAOC,EAAa,CACxBC,OAAO,KAEHC,EAAEA,GAAMC,IACRC,EAAOC,KACPC,YAAEA,EAAAA,SAAaC,GAAaC,IAC5BC,EAAMC,EAAUN,GACtBO,EAAAA,WAAgB,KACTL,EAAYM,UAAU,CACzBC,MAAO,KACR,GACA,CAACP,IAEEQ,MAAAA,EAAiCL,EAAIM,eACvC,CACEC,KAAM,QACNC,GAAIC,IACJC,MAAOjB,EAAE,qBACTkB,KAAOC,EAAAC,EAAS,CAAAC,MAAOnB,KAEzB,KAEEoB,EAAkBb,EACtBc,SAAA,IACEnB,EAAYoB,YAAYC,QAAmB,CAACC,EAAUC,KACxCtB,EAASuB,UAAUD,EAAWE,IAElCC,gBACNJ,EAASK,KAAK,CACZjB,KAAM,QACNC,GAAIC,EAAgBW,EAAWE,IAC/BZ,MAAOU,EAAWK,KAClBd,KAAOC,EAAAc,EAAA,CAAeN,iBAInBD,IACN,KACL,CAACtB,EAAYoB,YAAanB,IAGtB6B,EAAwCzB,EAAMc,SAClD,IACED,EAAgBa,OACZ,CACE,CAAErB,KAAM,UAAWG,MAAOjB,EAAE,2BACzBsB,GAEL,IACN,CAACtB,EAAGsB,IAGAc,EAAQxB,EACVsB,EAA0BC,OACxB,CACEvB,EACA,CAAEE,KAAM,gBACLoB,GAEL,CAACtB,GACHsB,EAEAE,OAAiB,IAAjBA,EAAMD,OACD,KAKLE,EAAAC,EAAA,CAAAC,SAAA,CAACpB,EAAAqB,EAAA,IAAe3C,EACZ4C,SACAA,GAACJ,EAAAK,EAAO,CAAAxB,KAAOC,EAAAwB,EAAAA,SAAA,CAAW,MAAMF,EAC7BzC,SAAAA,CAAAA,EAAE,gBAAgB,WAIxB4C,EAAA,CAAY,aAAY5C,EAAE,mBAAqBH,EAC9C0C,SAACpB,EAAA0B,EAAA,IAAahD,EAAMuC,cAI5B,ICrBA,MAAezC,EAAAA,GA1Df,SAASmD,YACD,MAAAC,UAAEA,GAAczC,KAChBN,EAAEA,GAAMC,IACR+C,EAAQC,KACRC,eAAEA,EAAAA,UAAgBC,EAAAA,sBAAWC,GAA0BL,EACvDM,EAAOL,EAAMM,IAAI,SAAW,gBAElC7C,EAAAA,WAAgB,KACTsC,EAAUQ,gBACd,CAACR,MAGDS,EACC,CAAAtC,KAAOC,EAAAsC,EAAAA,WAAA,CAAa,GACpBxC,MAAOjB,EAAE,aACT0D,QACGvC,EAAAwC,EAAA,CACCpB,SAACpB,EAAAvB,EAAA,CAAe,KAIpB2C,SAAA,GAACqB,EAAA,CAAS5D,SAAEA,EAAA,eACXmB,EAAA0C,GAAKC,GAAG,IAAIhD,KAAK,YAChByB,SAAApB,EAAC4C,EAAK,CAAAxB,SAAA,iGAMPyB,EAAA,CACCC,QACG5B,EAAA6B,EACC,CAAA3B,SAAA,CAACpB,EAAAgD,EAAA,CAAIpD,GAAIqD,EAAa,aAAcC,kBAAgB,EACjDrE,SAAEA,EAAA,sBAELmB,EAACgD,GACCpD,GAAI,CACFuD,SAAUF,EAAa,aACvBG,OAAQC,EAAYC,UAAU,CAC5BpB,KAAM,kBAGVgB,kBAAgB,EAEfrE,SAAAA,EAAE,qBAIT0E,MAAOvD,EAACwD,GAAO3E,SAAEA,EAAA,sCACjB4E,MAAO1B,EACPH,UAAoB,iBAATM,EAA0BD,EAAwBD,EAC7D0B,gBAAc,EACdC,WAAS,MAIjB"}