{"version":3,"file":"language.6NyDJHi_.js","sources":["../../../app/utils/language.ts"],"sourcesContent":["import { i18n } from \"i18next\";\nimport { locales, unicodeCLDRtoBCP47 } from \"@shared/utils/date\";\nimport Desktop from \"./Desktop\";\n\n/**\n * Formats a number using the user's locale where possible.\n *\n * @param number The number to format\n * @param locale The locale to use for formatting (BCP47 format)\n * @returns The formatted number as a string\n */\nexport function formatNumber(number: number, locale: string) {\n  try {\n    return new Intl.NumberFormat(locale).format(number);\n  } catch (e) {\n    return number.toString();\n  }\n}\n\n/**\n * Detects the user's language based on the browser's language settings.\n *\n * @returns The user's language in CLDR format (en_US)\n */\nexport function detectLanguage() {\n  const [ln, r] = navigator.language.split(\"-\");\n  const region = (r || ln).toUpperCase();\n  return `${ln}_${region}` as keyof typeof locales;\n}\n\n/**\n * Changes the language of the app, and updates the spellchecker language\n * if running in the desktop shell.\n *\n * @param locale The locale to change to, in CLDR format (en_US)\n * @param instance The i18n instance to use\n */\nexport async function changeLanguage(\n  locale: string | null | undefined,\n  instance: i18n\n) {\n  // Languages are stored in en_US format in the database, however the\n  // frontend translation framework (i18next) expects en-US\n  const localeBCP = locale ? unicodeCLDRtoBCP47(locale) : undefined;\n\n  if (localeBCP && instance.languages?.[0] !== localeBCP) {\n    await instance.changeLanguage(localeBCP);\n    await Desktop.bridge?.setSpellCheckerLanguages([\"en-US\", localeBCP]);\n  }\n}\n"],"names":["formatNumber","number","locale","Intl","NumberFormat","format","e","toString","detectLanguage","ln","r","navigator","language","split","toUpperCase","changeLanguage","instance","localeBCP","unicodeCLDRtoBCP47","undefined","languages","Desktop","bridge","setSpellCheckerLanguages"],"mappings":"+CAWgBA,SAAAA,aAAaC,EAAgBC,GACvC,IACF,OAAO,IAAIC,KAAKC,aAAaF,GAAQG,OAAOJ,SACrCK,GACP,OAAOL,EAAOM,UAChB,CACF,CAOO,SAASC,iBACd,MAAOC,EAAIC,GAAKC,UAAUC,SAASC,MAAM,KAElC,MAAA,GAAGJ,MADMC,GAAKD,GAAIK,eAE3B,CASsBC,eAAAA,eACpBb,EACAc,GAIA,MAAMC,EAAYf,EAASgB,EAAmBhB,QAAUiB,EAEpDF,GAAaD,EAASI,YAAY,KAAOH,UACrCD,EAASD,eAAeE,SACxBI,EAAQC,QAAQC,yBAAyB,CAAC,QAASN,KAE7D"}