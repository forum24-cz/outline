{"version":3,"file":"graph.A9lZ3owi.js","sources":["../../../node_modules/lodash-es/union.js","../../../node_modules/dagre-d3-es/src/graphlib/graph.js"],"sourcesContent":["import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, 'directed')\n      ? opts.directed\n      : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, 'multigraph')\n      ? opts.multigraph\n      : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, 'compound')\n      ? opts.compound\n      : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = (e) => this.removeEdge(this._edgeObjs[e]);\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n"],"names":["union$1","baseRest","arrays","baseUniq","baseFlatten","isArrayLikeObject","GRAPH_NODE","Graph","constructor","opts","this","_isDirected","Object","prototype","hasOwnProperty","call","directed","_isMultigraph","multigraph","_isCompound","compound","_label","_defaultNodeLabelFn","_.constant","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isDirected","isMultigraph","isCompound","setGraph","label","graph","setDefaultNodeLabel","newDefault","_.isFunction","nodeCount","_nodeCount","nodes","_.keys","sources","self","_.filter","v","_.isEmpty","sinks","setNodes","vs","value","args","arguments","forEach","length","setNode","node","hasNode","removeNode","removeEdge","e","_removeFromParentsChildList","_.each","children","child","setParent","parent","Error","_.isUndefined","ancestor","predecessors","predsV","successors","sucsV","neighbors","preds","_.union","isLeaf","filterNodes","filter","copy","w","setEdge","edge","parents","findParent","setDefaultEdgeLabel","edgeCount","_edgeCount","edges","_.values","setPath","reduce","name","valueSpecified","arg0","edgeArgsToId","edgeObj","edgeArgsToObj","v_","w_","tmp","freeze","incrementOrInitEntry","edgeObjToId","hasEdge","decrementOrRemoveEntry","inEdges","u","inV","outEdges","outV","nodeEdges","concat","map","k"],"mappings":"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","x_google_ignoreList":[0,1]}