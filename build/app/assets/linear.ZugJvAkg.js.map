{"version":3,"file":"linear.ZugJvAkg.js","sources":["../../../node_modules/d3-array/src/ascending.js","../../../node_modules/d3-array/src/descending.js","../../../node_modules/d3-array/src/bisector.js","../../../node_modules/d3-array/src/bisect.js","../../../node_modules/d3-array/src/number.js","../../../node_modules/d3-array/src/ticks.js","../../../node_modules/d3-interpolate/src/numberArray.js","../../../node_modules/d3-interpolate/src/array.js","../../../node_modules/d3-interpolate/src/date.js","../../../node_modules/d3-interpolate/src/object.js","../../../node_modules/d3-interpolate/src/value.js","../../../node_modules/d3-interpolate/src/round.js","../../../node_modules/d3-format/src/formatDecimal.js","../../../node_modules/d3-format/src/exponent.js","../../../node_modules/d3-format/src/formatSpecifier.js","../../../node_modules/d3-format/src/formatPrefixAuto.js","../../../node_modules/d3-format/src/formatRounded.js","../../../node_modules/d3-format/src/formatTypes.js","../../../node_modules/d3-format/src/identity.js","../../../node_modules/d3-format/src/locale.js","../../../node_modules/d3-format/src/defaultLocale.js","../../../node_modules/d3-format/src/formatGroup.js","../../../node_modules/d3-format/src/formatNumerals.js","../../../node_modules/d3-format/src/formatTrim.js","../../../node_modules/d3-scale/src/number.js","../../../node_modules/d3-scale/src/continuous.js","../../../node_modules/d3-scale/src/constant.js","../../../node_modules/d3-scale/src/tickFormat.js","../../../node_modules/d3-format/src/precisionPrefix.js","../../../node_modules/d3-format/src/precisionRound.js","../../../node_modules/d3-format/src/precisionFixed.js","../../../node_modules/d3-scale/src/linear.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"names":["ascending","a","b","NaN","descending","bisector","f","compare1","compare2","delta","left","x","lo","hi","length","mid","d","zero","center","i","right","bisectRight","number","bisect","e10","Math","sqrt","e5","e2","tickIncrement","start","stop","count","step","max","power","floor","log","LN10","error","pow","tickStep","step0","abs","step1","numberArray","n","min","c","slice","t","genericArray","nb","na","Array","value","date","Date","setTime","object","k","interpolate","constant","color","rgb","string","isNumberArray","ArrayBuffer","isView","DataView","isArray","valueOf","toString","isNaN","interpolateRound","round","formatDecimalParts","p","toExponential","indexOf","coefficient","exponent","prefixExponent","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","width","comma","precision","trim","type","this","formatRounded","join","prototype","formatTypes","toFixed","formatDecimal","toLocaleString","replace","e","g","toPrecision","o","r","s","formatPrefixAuto","X","toUpperCase","identity$1","locale","format","formatPrefix","map","prefixes","formatLocale","group","grouping","thousands","identity","formatGroup","j","push","substring","reverse","call","Number","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatTrim","out","i1","i0","charCodeAt","Infinity","padding","defaultLocale","definition","unit","normalize","constants","bimap","domain","range","d0","d1","r0","r1","polymap","copy","source","target","clamp","unknown","transformer","transform","untransform","piecewise","output","input","interpolateValue","rescale","clamper","scale","invert","y","interpolateNumber","_","arguments","from","rangeRound","u","continuous","tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","ticks","isFinite","nice","prestep","maxIter","ceil","linear","initRange","apply"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]}