{"version":3,"mappings":"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","names":["hasOwnProperty","Object","prototype","assign$1","createAssigner","object","source","isPrototype","isArrayLike","copyObject","keys","key","call","assignValue","baseSlice","array","start","end","index","length","result","Array","compact","resIndex","value","arrayAggregator","setter","iteratee","accumulator","baseAggregator","collection","baseEach","difference$1","baseRest","values","isArrayLikeObject","baseDifference","comparator","includes","arrayIncludes","isCommon","valuesLength","arrayMap","baseUnary","arrayIncludesWith","cacheHas","SetCache","outer","computed","valuesIndex","push","baseFlatten","drop","n","guard","toInteger","dropRight","arrayEvery","predicate","baseEvery","every","func","isArray","isIterateeCall","baseIteratee","head","flatMap","map","groupBy$1","createAggregator","initializer","baseAssignValue","isString","isObjectLike","baseGetTag","nativeMax","Math","max","fromIndex","indexOf","baseIndexOf","nodeIsRegExp","nodeUtil","isRegExp","isRegExp$1","baseIsRegExp","pickBy","props","getAllKeysIn","prop","basePickBy","path","reject","arrayFilter","baseFilter","negate","TypeError","args","arguments","this","apply","baseSome","some","arraySome","uniq","baseUniq","isAstNode","obj","$type","isReference","$refText","isLinkingError","container","reference","message","AbstractAstReflection","constructor","subtypes","allSubtypes","isInstance","node","type","isSubtype","subtype","supertype","nested","existing","computeIsSubtype","getAllSubTypes","allTypes","getAllTypes","types","possibleSubType","isCompositeCstNode","content","isLeafCstNode","tokenType","isRootCstNode","fullText","StreamImpl","startFn","nextFn","iterator","state","next","Symbol","isEmpty","Boolean","done","count","toArray","toSet","Set","toMap","keyFn","valueFn","entryStream","element","Map","toString","join","concat","other","first","firstDone","DONE_RESULT","separator","addSeparator","searchElement","forEach","callbackfn","filter","nonNullable","e","reduce","initialValue","previousValue","reduceRight","recursiveReduce","find","findIndex","mapped","isIterable","flat","depth","stream","tail","skipCount","i","limit","maxSize","size","distinct","by","set","has","add","exclude","otherKeySet","item","ownKey","EMPTY_STREAM","freeze","collections","collIndex","arrIndex","TreeStreamImpl","root","children","options","super","iterators","includeRoot","pruned","pop","prune","Reduction","RangeComparison","streamCst","tokenToRange","token","character","startColumn","line","startLine","endColumn","endLine","toDocumentSegment","offset","range","inRange","to","comparison","compareRange","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","sum","a","b","product","min","DefaultNameRegexp","isCommentNode","cstNode","commentNames","name","ErrorWithLocation","Error","assertUnreachable","_","AbstractRule","AbstractType","Condition","ValueLiteral","AbstractElement","BooleanLiteral","Conjunction","Disjunction","InferredType","isInferredType","reflection","Interface","isInterface","Negation","ParameterReference","ParserRule","isParserRule","SimpleType","TerminalRule","isTerminalRule","Type","isType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","CrossReference","isCrossReference","EndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","RegexToken","RuleCall","isRuleCall","TerminalAlternatives","TerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","Wildcard","LangiumGrammarAstReflection","getReferenceType","refInfo","referenceId","property","getTypeMetaData","properties","defaultValue","getContainerOfType","typePredicate","$container","getDocument","rootNode","findRootNode","$document","streamContents","keyIndex","arrayIndex","startsWith","isAstNodeInRange","streamAllContents","streamAst","astNode","_a","nodeRange","$cstNode","streamReferences","copyDefaultValue","propertyType","cc","char","charCodeAt","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","idx","input","groupIdx","saveState","restoreState","newState","pattern","consumeChar","disjunction","flags","loc","begin","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","ASSERT_NEVER_REACH_HERE","quantifier","isBacktracking","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","classEscape","capturing","groupAst","number","parseInt","nextChar","howMuch","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","child","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","NEWLINE_REGEXP","regexpParser","visitor","TerminalRegExpVisitor","isStarting","endRegexpStack","multiline","endRegex","reset","regex","startRegexp","String","fromCharCode","escapedChar","escapeRegExp","RegExp","match","isMultilineComment","regexp","isWhitespace","replace","partialMatches","partial","partialRegExp","re","process","tmp","appendRaw","nbChars","substr","appendOptional","lastIndex","exec","getAllReachableRules","grammar","allTerminals","ruleNames","entryRule","getEntryRule","rules","ast.isParserRule","entry","topMostRules","getHiddenRules","ast.isTerminalRule","hidden","rule","ruleDfs","visitedSet","ast.isRuleCall","ast.isTerminalRuleCall","refRule","ref","findNodeForProperty","nodes","findNodesForPropertyInternal","nodeFeature","grammarSource","ast.isAssignment","feature","findNodeForKeyword","keyword","findNodesForKeywordInternal","ast.isKeyword","treeIterator","keywordNodes","childNode","findNameAssignment","startNode","ast.isInferredType","ast.isAction","findNameAssignmentInternal","cache","go","refType","childAssignment","get","toLowerCase","ast.isSimpleType","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","definition","getExplicitRuleType","inferredType","dataType","returnType","ast.isInterface","ast.isType","getTypeName","isReturnType","ast.isReturnType","actionType","getActionType","action","terminalRegex","terminalRule","s","u","abstractElementToRegex","flagText","entries","WILDCARD","ast.isTerminalAlternatives","isTerminalAlternatives","terminalAlternativesToRegex","alternatives","withCardinality","elements","cardinality","lookahead","isTerminalGroup","ast.isTerminalGroup","terminalGroupToRegex","isCharacterRange","ast.isCharacterRange","characterRangeToRegex","right","keywordToRegex","left","wrap","isNegatedToken","ast.isNegatedToken","negateTokenToRegex","terminal","isUntilToken","ast.isUntilToken","untilTokenToRegex","until","isRegexToken","ast.isRegexToken","lastSlash","lastIndexOf","regexFlags","isWildcard","ast.isWildcard","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","timer","Date","getTime","val","time","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","bar","tokenLabel","tokType","hasTokenLabel","LABEL","AbstractProduction","_definition","accept","prod","NonTerminal","assign","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","label","terminalType","serializedTerminal","terminalLabel","PATTERN","GAstVisitor","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","isOptionalProd","alreadyVisited","subProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","firstForTerminal","isSequenceProd","firstForSequence","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","isBranchingProd","firstForBranching","allAlternativesFirsts","innerProd","flatten","IN","ResyncFollowsWalker","topProd","follows","startWalking","followName","buildBetweenProdsFollowPrefix","inner","occurenceInParent","fullRest","t_in_topProd_follows","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","msgSuffix","code","addOptimizedIdxToResult","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","handleIgnoreCase","upperChar","lowerChar","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","analyzeTokenTypes","tokenTypes","tracer","defaults","useSticky","debug","safeMode","positionTracking","lineTerminatorCharacters","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","charCodeToOptimizedIdxMap","currType","Lexer","NA","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","emptyGroups","patternIdxToConfig","hasCustom","currPattern","regExpSource","addStickyFlag","addStartOfInput","isFunction","escapedRegExpString","wrappedRegExp","tokenTypeIdx","clazz","groupName","GROUP","SKIPPED","isUndefined","longerAltType","LONGER_ALT","PUSH_MODE","lineTerminatorCharCodes","getCharCodes","LINE_BREAKS","checkLineBreaksIssues","isCustomPattern","isShortPattern","acc","x","longerAlt","canLineTerminator","isCustom","short","canBeOptimized","charCodeToPatternIdxToConfig","currTokType","optimizedIdx","addToMapOfArrays","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","validatePatterns","validModesNames","errors","missingResult","findMissingPatterns","tokenTypesWithMissingPattern","LexerDefinitionErrorType","MISSING_PATTERN","valid","difference","invalidResult","findInvalidPatterns","tokenTypesWithInvalidPattern","INVALID_PATTERN","validTokenTypes","validateRegExpPattern","withRegExpPatterns","findEndOfInputAnchor","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","end_of_input","EOI_ANCHOR_FOUND","findStartOfInputAnchor","StartAnchorFinder","startAnchorVisitor","start_of_input","SOI_ANCHOR_FOUND","findUnsupportedFlags","invalidFlags","UNSUPPORTED_FLAGS_FOUND","findDuplicatePatterns","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findEmptyMatchRegExps","matchesEmptyString","EMPTY_MATCH_PATTERN","findInvalidGroupType","invalidTypes","INVALID_GROUP_TYPE_FOUND","findModesThatDoNotExist","validModes","invalidModes","PUSH_MODE_DOES_NOT_EXIST","findUnreachablePatterns","canBeTested","str","noMetaChar","testIdx","testTokenType","regExpArray","UNREACHABLE_PATTERN","performWarningRuntimeChecks","lexerDefinition","trackLines","warnings","hasAnyLineBreak","concreteTokenTypes","modes","terminatorCharCodes","currIssue","buildLineBreakIssueMessage","details","issue","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","warningDescriptor","NO_LINE_BREAKS_FLAGS","LineTerminatorOptimizedTester","text","len","c","charsOrCodes","numOrString","charCode","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","expandCategories","clone","categories","searching","CATEGORIES","newCategories","assignTokenDefaultProps","hasShortKeyProperty","hasCategoriesProperty","hasExtendingTokensTypesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignCategoriesMapProp","singleAssignCategoriesToksMap","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","startOffset","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","lineTerminatorsPattern","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","config","lexerDefinitionErrors","lexerDefinitionWarning","trackStartLines","trackEndLines","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","performRuntimeChecks","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","allModeNames","currModDef","currModName","currAnalyzeResult","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","clearRegExpParserCache","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","cloneEmptyGroups","clonedResult","groupKeys","currKey","currGroupValue","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","endOffset","tokenVector","tokenToAdd","PARENT","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","getExtraProductionArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","_first","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","remainingPathWith","nextDef","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","AlternativeGAST","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","validateGrammar","topLevels","duplicateErrors","validateDuplicateProductions","collectorVisitor","OccurrenceValidationCollector","allRuleProductions","allProductions","duplicates","groupBy","identifyProductionForDuplicates","currGroup","currDuplicates","firstProd","defError","DUPLICATE_PRODUCTIONS","param","parameter","termsNamespaceConflictErrors","checkTerminalAndNoneTerminalsNameSpace","tokenNames","currToken","currRuleName","CONFLICT_TOKENS_RULES_NAMESPACE","tooManyAltsErrors","curRule","validateTooManyAlts","orCollector","OrCollector","alternations","currOr","TOO_MANY_ALTS","duplicateRulesError","validateRuleDoesNotAlreadyExist","allRules","className","occurrences","DUPLICATE_RULE_NAME","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","errorsFromNextSteps","currRefRule","currSubDef","isFirstOptional","hasMore","rest","validateAmbiguousAlternationAlternatives","globalMaxLookahead","ors","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","checkAlternativesAmbiguities","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currErrors","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","altsPrefixAmbiguityErrors","checkPrefixAlternativesAmbiguities","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","isStrictPrefixOfPath","prefix","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","RepetitionCollector","resolveGrammar","actualOptions","topRulesTable","orgResolveGrammar","refResolver","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","validateEmptyOrAlternative","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","topLevelRules","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","buildLookaheadFuncForOr","laFuncBuilder","buildLookaheadForOptional","buildLookaheadFuncForOptionalProd","lookaheadBuilder","DslMethodsCollectorVisitor","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","defineProperty","enumerable","configurable","writable","defaultVisit","ctx","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","createBaseSemanticVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","validateMissingCstMethods","missingRuleNames","CstVisitorDefinitionError","MISSING_METHOD","methodName","errorMessages","currDefError","_RULE_NAMES","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","peek","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","definitionErrors","validationErrors","orgValidateGrammar","tokensMap","lookaheadValidationErrors","validateLookahead","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","CUSTOM_LOOKAHEAD_VALIDATION","allFollows","computeAllProdsFollows","topProductions","reSyncFollows","currRefsFollow","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","applyMixins","derivedCtor","baseCtors","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","Recoverable","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","LooksAhead","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","TreeBuilder","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","addTerminalToCst","tokenTypeName","ruleCstResult","preCstNode","addNoneTerminalToCst","ruleResult","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","createBaseVisitorConstructorWithDefaults","baseConstructor","withDefaultsProto","LexerAdapter","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","RecognizerEngine","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","BITS_FOR_METHOD_TYPE","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","invokeRuleWithTryCst","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","RecognizerApi","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","validateRuleIsOverridden","INVALID_RULE_OVERRIDE","BACKTRACK","orgState","getSerializedGastProductions","serializeGrammar","topRules","ErrorHandler","_errors","context","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","ContentAssist","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","GastRecorder","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","PerformanceTracer","userTraceInitPerf","traceIsNumber","EmbeddedActionsParser","configClone","buildATNKey","AbstractTransition","target","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","createATN","atn","decisionMap","decisionStates","ruleToStartState","ruleToStopState","states","createRuleStartAndStopATNStates","ruleLength","stop","ruleBlock","block","buildRuleHandle","production","tokenRef","ruleRef","currentRule","nonTerminal","addTransition","defineDecisionState","handle","makeAlts","optional","epsilon","starState","star","repetitionSep","sep","plusState","plus","repetitionMandatorySep","handles","makeBlock","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","blkStart","blkEnd","loop","loopback","loopEnd","decision","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","splice","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","dfas","initATNSimulator","decisionLength","decisionToDFA","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","computeStartState","atnState","numberOfTransitions","closure","performLookahead","s0","previousD","d","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","computeReachSet","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","hasConflictTerminatingPrediction","allConfigsInRuleStopStates","altSets","getConflictingAltSets","configToAlts","hasConflictingAltSet","hasStateAssociatedWithOneAlt","reportLookaheadAmbiguity","buildAmbiguityError","current","actualToken","possibleTokenTypes","uniqBy","tokenPath","mapKey","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","MIN_VALUE","MAX_VALUE","Number","candidate","Is","objectLiteral","one","two","three","four","uri","string","undefined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","languageId","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","parent","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","slice","leftIdx","rightIdx","ret","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","FullTextDocument$1","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","construct","addHiddenTokens","hiddenTokens","hiddenNode","addHiddenToken","tokenStart","tokenEnd","childStart","childEnd","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","unshift","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","services","_unorderedGroups","lexer","parser","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","callback","wrapOption","wrapMany","wrapAtLeastOne","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","LangiumParser","nodeBuilder","assignmentMap","linker","references","Linker","converter","ValueConverter","astReflection","shared","AstReflection","fragment","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","parse","lexerResult","clear","lexerErrors","parserErrors","err","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","resultKind","assignWithoutOverride","newItem","linkContentToContainer","$containerProperty","$containerIndex","assignMandatoryProperties","typeMetaData","genericNode","buildReference","existingValue","newValue","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","buildRules","parserContext","reachable","parserRules","buildElement","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","buildRuleCall","ruleCall","buildRuleCallPredicate","namedArgs","buildPredicate","ruleArgs","ruleTarget","getRule","getToken","buildAlternatives","methods","predicatedMethod","getGuardCondition","buildUnorderedGroup","orIdx","idFunc","lParser","groupState","trackedAlternatives","wrapped","delete","buildGroup","isEndOfFile","condition","isDisjunction","isConjunction","isNegation","isParameterReference","isBooleanLiteral","true","guardCondition","crossRef","assignTerminal","getRuleName","createLangiumParser","prepareLangiumParser","Grammar","DefaultTokenBuilder","buildTokens","reachableRules","terminalTokens","buildTerminalTokens","buildKeywordTokens","terminalToken","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","caseInsensitive","buildKeywordPattern","findLongerAlt","getCaseInsensitivePattern","longerAlts","DefaultValueConverter","getCrossReferenceTerminal","nameAssigment","runConverter","convertInt","convertString","convertID","getRuleType","_c","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","_ral","RAL","ral","install","default","stringArray","elem","events","Emitter","ral_1","require$$0","_disposable","dispose","None","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","invoke","callbacks","contexts","_options","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","cancellation","CancellationTokenSource_1","CancellationTokenSource","CancellationToken_1","CancellationToken","require$$1","events_1","require$$2","isCancellationRequested","onCancellationRequested","Cancelled","shortcutEvent","setTimeout","MutableToken","_isCancelled","cancel","_emitter","_token","lastTick","OperationCancelled","isOperationCancelled","async","interruptAndCheck","now","delayNextTick","Promise","resolve","setImmediate","Deferred","promise","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","LIB","isAtLineStart","textOffset","getWellformedEdit","spans","r","o","h","cwd","normalize","isAbsolute","relative","f","l","_makeLong","dirname","basename","extname","format","dir","base","ext","delimiter","win32","posix","exports","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w","joinPath","resolvePath","UriUtils","DocumentState","ValidationCategory","DocumentValidator","Disposable","equals","fromPath","toPath","fromParts","split","toParts","repeat","DefaultLangiumDocumentFactory","serviceRegistry","ServiceRegistry","textDocuments","workspace","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","fromModel","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","oldText","getServices","AsyncParser","textDoc","LanguageMetaData","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","LangiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","Changed","precomputedScopes","deleteDocument","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","unlink","getScope","getElement","refNode","refText","$refNode","isAstNodeDescription","refData","getLinkedNode","ComputedScopes","descr","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","findAssignment","nodeElem","nameNode","isChildNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","getAstNodePath","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onUpdate","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserialize","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","findNodesForProperty","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","register","singleton","fileExtensions","diagnosticData","ValidationRegistry","checksRecord","thisObj","category","wrapValidationException","addEntry","getChecks","checks","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerError","diagnostic","toDiagnosticSeverity","getSource","parserError","linkingError","info","containerType","toDiagnostic","validationItems","acceptor","getDiagnosticRange","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","DefaultConfigurationProvider","_ready","settings","workspaceConfig","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deleted","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","Linked","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyBuildPhase","onBuildPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","listeners","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","folders","workspaceFolders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexer","TokenBuilder","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","ChevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","parseJSDoc","opts","currentLine","currentCharacter","lines","lastCharacter","skipWhitespace","tagRegex","tagMatch","fullMatch","inlineTagMatches","matchAll","inlineTagRegex","buildInlineTokens","getLines","normalizeOptions","parseJSDocComment","startPosition","JSDocCommentImpl","parseJSDocElement","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","parseJSDocTag","parseJSDocText","appendEmptyLine","JSDocLineImpl","inlines","firstToken","lastToken","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOption","escaped","getTag","getAllTags","getTags","fillNewlines","trim","toMarkdown","renderTag","toMarkdownDefault","rendered","renderInlineTag","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","marker","JSDocDocumentationProvider","getDocumentation","isJSDoc","normalizedOptions","firstRegex","lastRegex","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","findCommentNode","getPreviousNode","multilineCommentRules","DefaultAsyncParser","syncParser","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","createGrammarConfig","nameRegexp","CompletionParser","createCompletionParser","References","serializer","Hydrator","JsonSerializer","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","Reflect","__requested__","cause","value2","value1","EmptyFileSystemProvider","EmptyFileSystem","minimalGrammarModule","minimalSharedGrammarModule","ast.LangiumGrammarAstReflection","loadGrammarFromJson","json","createMinimalGrammarServices","__defProp","__name","isArchitecture","Branch","isBranch","Commit","isCommit","GitGraph","isGitGraph","isInfo","Merge","isMerge","isPacket","isPacketBlock","isPie","isPieSection","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","MermaidAstReflection","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","InfoLanguageMetaData","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runCommonConverter","runCustomConverter","_cstNode","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","GitGraphTokenBuilder","_f","GitGraphModule","createGitGraphServices","InfoTokenBuilder","_g","InfoModule","createInfoServices","Info","PacketTokenBuilder","_h","PacketModule","createPacketServices","Packet","PieTokenBuilder","_i","PieValueConverter","_j","PieModule","createPieServices","Pie","ArchitectureTokenBuilder","_k","ArchitectureValueConverter","_l","ArchitectureModule","createArchitectureServices","Architecture","parsers","initializers","createInfoServices2","__vitePreload","import","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","diagramType","MermaidParseError","_m"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"sources":["../../../node_modules/lodash-es/assign.js","../../../node_modules/lodash-es/_baseSlice.js","../../../node_modules/lodash-es/compact.js","../../../node_modules/lodash-es/_arrayAggregator.js","../../../node_modules/lodash-es/_baseAggregator.js","../../../node_modules/lodash-es/difference.js","../../../node_modules/lodash-es/_baseDifference.js","../../../node_modules/lodash-es/drop.js","../../../node_modules/lodash-es/dropRight.js","../../../node_modules/lodash-es/_arrayEvery.js","../../../node_modules/lodash-es/_baseEvery.js","../../../node_modules/lodash-es/every.js","../../../node_modules/lodash-es/head.js","../../../node_modules/lodash-es/flatMap.js","../../../node_modules/lodash-es/groupBy.js","../../../node_modules/lodash-es/_createAggregator.js","../../../node_modules/lodash-es/isString.js","../../../node_modules/lodash-es/includes.js","../../../node_modules/lodash-es/indexOf.js","../../../node_modules/lodash-es/isRegExp.js","../../../node_modules/lodash-es/_baseIsRegExp.js","../../../node_modules/lodash-es/pickBy.js","../../../node_modules/lodash-es/reject.js","../../../node_modules/lodash-es/negate.js","../../../node_modules/lodash-es/_baseSome.js","../../../node_modules/lodash-es/some.js","../../../node_modules/lodash-es/uniq.js","../../../node_modules/langium/lib/syntax-tree.js","../../../node_modules/langium/lib/utils/stream.js","../../../node_modules/langium/lib/utils/cst-utils.js","../../../node_modules/langium/lib/utils/errors.js","../../../node_modules/langium/lib/languages/generated/ast.js","../../../node_modules/langium/lib/utils/ast-utils.js","../../../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","../../../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","../../../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","../../../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","../../../node_modules/langium/lib/utils/regexp-utils.js","../../../node_modules/langium/lib/utils/grammar-utils.js","../../../node_modules/@chevrotain/utils/lib/src/print.js","../../../node_modules/@chevrotain/utils/lib/src/timer.js","../../../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","../../../node_modules/@chevrotain/gast/lib/src/model.js","../../../node_modules/@chevrotain/gast/lib/src/visitor.js","../../../node_modules/@chevrotain/gast/lib/src/helpers.js","../../../node_modules/chevrotain/lib/src/parse/grammar/rest.js","../../../node_modules/chevrotain/lib/src/parse/grammar/first.js","../../../node_modules/chevrotain/lib/src/parse/constants.js","../../../node_modules/chevrotain/lib/src/parse/grammar/follow.js","../../../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","../../../node_modules/chevrotain/lib/src/scan/reg_exp.js","../../../node_modules/chevrotain/lib/src/scan/lexer.js","../../../node_modules/chevrotain/lib/src/scan/tokens.js","../../../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","../../../node_modules/chevrotain/lib/src/scan/lexer_public.js","../../../node_modules/chevrotain/lib/src/scan/tokens_public.js","../../../node_modules/chevrotain/lib/src/parse/errors_public.js","../../../node_modules/chevrotain/lib/src/parse/grammar/resolver.js","../../../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","../../../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","../../../node_modules/chevrotain/lib/src/parse/grammar/checks.js","../../../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","../../../node_modules/chevrotain/lib/src/parse/exceptions_public.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","../../../node_modules/chevrotain/lib/src/parse/grammar/keys.js","../../../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","../../../node_modules/chevrotain/lib/src/parse/cst/cst.js","../../../node_modules/chevrotain/lib/src/lang/lang_extensions.js","../../../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","../../../node_modules/chevrotain/lib/src/parse/parser/parser.js","../../../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","../../../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","../../../node_modules/chevrotain-allstar/lib/atn.js","../../../node_modules/chevrotain-allstar/lib/dfa.js","../../../node_modules/chevrotain-allstar/lib/all-star-lookahead.js","../../../node_modules/lodash-es/uniqBy.js","../../../node_modules/vscode-languageserver-types/lib/esm/main.js","../../../node_modules/langium/lib/parser/cst-node-builder.js","../../../node_modules/langium/lib/parser/langium-parser.js","../../../node_modules/langium/lib/parser/parser-builder-base.js","../../../node_modules/langium/lib/parser/langium-parser-builder.js","../../../node_modules/langium/lib/parser/token-builder.js","../../../node_modules/langium/lib/parser/value-converter.js","../../../node_modules/vscode-jsonrpc/lib/common/ral.js","../../../node_modules/vscode-jsonrpc/lib/common/is.js","../../../node_modules/vscode-jsonrpc/lib/common/events.js","../../../node_modules/vscode-jsonrpc/lib/common/cancellation.js","../../../node_modules/langium/lib/utils/promise-utils.js","../../../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","../../../node_modules/vscode-uri/lib/esm/index.mjs","../../../node_modules/langium/lib/utils/uri-utils.js","../../../node_modules/langium/lib/workspace/documents.js","../../../node_modules/langium/lib/validation/validation-registry.js","../../../node_modules/langium/lib/validation/document-validator.js","../../../node_modules/langium/lib/utils/disposable.js","../../../node_modules/langium/lib/references/linker.js","../../../node_modules/langium/lib/references/name-provider.js","../../../node_modules/langium/lib/references/references.js","../../../node_modules/langium/lib/utils/collections.js","../../../node_modules/langium/lib/references/scope-computation.js","../../../node_modules/langium/lib/references/scope.js","../../../node_modules/langium/lib/utils/caching.js","../../../node_modules/langium/lib/references/scope-provider.js","../../../node_modules/langium/lib/serializer/json-serializer.js","../../../node_modules/langium/lib/service-registry.js","../../../node_modules/langium/lib/workspace/ast-descriptions.js","../../../node_modules/langium/lib/workspace/ast-node-locator.js","../../../node_modules/langium/lib/workspace/configuration.js","../../../node_modules/langium/lib/workspace/document-builder.js","../../../node_modules/langium/lib/workspace/index-manager.js","../../../node_modules/langium/lib/workspace/workspace-manager.js","../../../node_modules/langium/lib/parser/lexer.js","../../../node_modules/langium/lib/documentation/jsdoc.js","../../../node_modules/langium/lib/documentation/documentation-provider.js","../../../node_modules/langium/lib/documentation/comment-provider.js","../../../node_modules/langium/lib/parser/async-parser.js","../../../node_modules/langium/lib/workspace/workspace-lock.js","../../../node_modules/langium/lib/serializer/hydrator.js","../../../node_modules/langium/lib/default-module.js","../../../node_modules/langium/lib/languages/grammar-config.js","../../../node_modules/langium/lib/parser/completion-parser-builder.js","../../../node_modules/langium/lib/dependency-injection.js","../../../node_modules/langium/lib/workspace/file-system-provider.js","../../../node_modules/langium/lib/utils/grammar-loader.js","../../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs","../../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs","../../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs","../../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs","../../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs","../../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs","../../../node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs"],"sourcesContent":["import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        const iterator = other[Symbol.iterator]();\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        const set = new Set();\n        return this.filter(e => {\n            const value = by ? by(e) : e;\n            if (set.has(value)) {\n                return false;\n            }\n            else {\n                set.add(value);\n                return true;\n            }\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn,\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character < range.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character > to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else {\n        return RangeComparison.OverlapFront;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.0.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return ['AbstractElement', 'AbstractRule', 'AbstractType', 'Action', 'Alternatives', 'ArrayLiteral', 'ArrayType', 'Assignment', 'BooleanLiteral', 'CharacterRange', 'Condition', 'Conjunction', 'CrossReference', 'Disjunction', 'EndOfFile', 'Grammar', 'GrammarImport', 'Group', 'InferredType', 'Interface', 'Keyword', 'NamedArgument', 'NegatedToken', 'Negation', 'NumberLiteral', 'Parameter', 'ParameterReference', 'ParserRule', 'ReferenceType', 'RegexToken', 'ReturnType', 'RuleCall', 'SimpleType', 'StringLiteral', 'TerminalAlternatives', 'TerminalGroup', 'TerminalRule', 'TerminalRuleCall', 'Type', 'TypeAttribute', 'TypeDefinition', 'UnionType', 'UnorderedGroup', 'UntilToken', 'ValueLiteral', 'Wildcard'];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case 'AbstractElement': {\n                return {\n                    name: 'AbstractElement',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'ArrayLiteral': {\n                return {\n                    name: 'ArrayLiteral',\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'ArrayType': {\n                return {\n                    name: 'ArrayType',\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case 'BooleanLiteral': {\n                return {\n                    name: 'BooleanLiteral',\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case 'Conjunction': {\n                return {\n                    name: 'Conjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Disjunction': {\n                return {\n                    name: 'Disjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Grammar': {\n                return {\n                    name: 'Grammar',\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'GrammarImport': {\n                return {\n                    name: 'GrammarImport',\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case 'InferredType': {\n                return {\n                    name: 'InferredType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'Interface': {\n                return {\n                    name: 'Interface',\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'NamedArgument': {\n                return {\n                    name: 'NamedArgument',\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Negation': {\n                return {\n                    name: 'Negation',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NumberLiteral': {\n                return {\n                    name: 'NumberLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Parameter': {\n                return {\n                    name: 'Parameter',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'ParameterReference': {\n                return {\n                    name: 'ParameterReference',\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case 'ParserRule': {\n                return {\n                    name: 'ParserRule',\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case 'ReferenceType': {\n                return {\n                    name: 'ReferenceType',\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case 'ReturnType': {\n                return {\n                    name: 'ReturnType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'SimpleType': {\n                return {\n                    name: 'SimpleType',\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case 'StringLiteral': {\n                return {\n                    name: 'StringLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'TerminalRule': {\n                return {\n                    name: 'TerminalRule',\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Type': {\n                return {\n                    name: 'Type',\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'TypeAttribute': {\n                return {\n                    name: 'TypeAttribute',\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'UnionType': {\n                return {\n                    name: 'UnionType',\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'Action': {\n                return {\n                    name: 'Action',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Alternatives': {\n                return {\n                    name: 'Alternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Assignment': {\n                return {\n                    name: 'Assignment',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'CharacterRange': {\n                return {\n                    name: 'CharacterRange',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'CrossReference': {\n                return {\n                    name: 'CrossReference',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'EndOfFile': {\n                return {\n                    name: 'EndOfFile',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Group': {\n                return {\n                    name: 'Group',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Keyword': {\n                return {\n                    name: 'Keyword',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NegatedToken': {\n                return {\n                    name: 'NegatedToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'RegexToken': {\n                return {\n                    name: 'RegexToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case 'RuleCall': {\n                return {\n                    name: 'RuleCall',\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'TerminalAlternatives': {\n                return {\n                    name: 'TerminalAlternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalGroup': {\n                return {\n                    name: 'TerminalGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalRuleCall': {\n                return {\n                    name: 'TerminalRuleCall',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'UnorderedGroup': {\n                return {\n                    name: 'UnorderedGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'UntilToken': {\n                return {\n                    name: 'UntilToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'Wildcard': {\n                return {\n                    name: 'Wildcard',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return regexp.test(' ');\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !terminalRegex(terminalRule).test(' ');\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        return this.nodeStack[this.nodeStack.length - 1];\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, false);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n    addHiddenTokens(hiddenTokens) {\n        for (const token of hiddenTokens) {\n            const hiddenNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            hiddenNode.root = this.rootNode;\n            this.addHiddenToken(this.rootNode, hiddenNode);\n        }\n    }\n    addHiddenToken(node, token) {\n        const { offset: tokenStart, end: tokenEnd } = token;\n        for (let i = 0; i < node.content.length; i++) {\n            const child = node.content[i];\n            const { offset: childStart, end: childEnd } = child;\n            if (isCompositeCstNode(child) && tokenStart > childStart && tokenEnd < childEnd) {\n                this.addHiddenToken(child, token);\n                return;\n            }\n            else if (tokenEnd <= childStart) {\n                node.content.splice(i, 0, token);\n                return;\n            }\n        }\n        // We know that we haven't found a suited position for the token\n        // So we simply add it to the end of the current node\n        node.content.push(token);\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getTypeName, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = rule.fragment ? undefined : isDataTypeRule(rule) ? DatatypeSymbol : getTypeName(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    parse(input) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const result = this.mainRule.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenTokens(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            if (!this.isRecording()) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (!this.isRecording() && result === undefined) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, feature, args) {\n        let cstNode;\n        if (!this.isRecording()) {\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const resultKind = result.$type;\n                const object = this.assignWithoutOverride(result, current);\n                if (resultKind) {\n                    object.$type = resultKind;\n                }\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            // This branch is used for left recursive grammar rules.\n            // Those don't call `construct` before another action.\n            // Therefore, we need to call it here.\n            if (!last.$cstNode && action.feature && action.operator) {\n                last = this.construct(false);\n                const feature = last.$cstNode.feature;\n                this.nodeBuilder.buildCompositeNode(feature);\n            }\n            const newItem = { $type };\n            this.stack.pop();\n            this.stack.push(newItem);\n            if (action.feature && action.operator) {\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n        }\n    }\n    construct(pop = true) {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        if (pop) {\n            this.stack.pop();\n        }\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input);\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy() }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const rules = new Map();\n    const parserContext = {\n        parser,\n        tokens,\n        rules,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        ctx.rules.set(rule.name, parserContext.parser.rule(rule, buildElement(ctx, rule.definition)));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule type: ${ruleCall.$type}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, terminal.rule.ref), crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.rules.get(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n            LINE_BREAKS: true\n        };\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u')) {\n            // Unicode regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        return {\n            name: keyword.value,\n            PATTERN: this.buildKeywordPattern(keyword, caseInsensitive),\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = Date.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = Date.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, cancellationToken) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (cancellationToken) {\n            return this.createAsync(uri, textDocument, cancellationToken);\n        }\n        else {\n            return this.create(uri, textDocument);\n        }\n    }\n    fromString(text, uri, cancellationToken) {\n        if (cancellationToken) {\n            return this.createAsync(uri, text, cancellationToken);\n        }\n        else {\n            return this.create(uri, text);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText());\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.references = [];\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            try {\n                await check.call(thisObj, node, accept, cancelToken);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    throw err;\n                }\n                console.error('An error occurred during validation:', err);\n                const message = err instanceof Error ? err.message : String(err);\n                if (err instanceof Error && err.stack) {\n                    console.error(err.stack);\n                }\n                accept('error', 'An error occurred during validation: ' + message, { node });\n            }\n        };\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        for (const lexerError of parseResult.lexerErrors) {\n            const diagnostic = {\n                severity: toDiagnosticSeverity('error'),\n                range: {\n                    start: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column - 1\n                    },\n                    end: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column + lexerError.length - 1\n                    }\n                },\n                message: lexerError.message,\n                data: diagnosticData(DocumentValidator.LexingError),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n        return validationItems;\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Error\n        case 'warning':\n            return 2; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Warning\n        case 'info':\n            return 3; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Information\n        case 'hint':\n            return 4; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Hint\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                }\n            }\n            catch (err) {\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${err}` });\n            }\n        }\n        // Add the reference to the document's array of references\n        document.references.push(ref);\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && getDocument(node).state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${err}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = getDocument(refInfo.container);\n        if (document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCanceled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    constructor(sharedServices) {\n        super(uri => uri.toString());\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n            const allUris = changed.concat(deleted);\n            for (const uri of allUris) {\n                this.clear(uri);\n            }\n        }));\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace changes, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    constructor(sharedServices) {\n        super();\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n            this.clear();\n        }));\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options = {}) {\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, options);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options = {}) {\n        const root = JSON.parse(content);\n        this.linkNode(root, root, options);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    register(language) {\n        if (!this.singleton && !this.map) {\n            // This is the first language to be registered; store it as singleton.\n            this.singleton = language;\n            return;\n        }\n        if (!this.map) {\n            this.map = {};\n            if (this.singleton) {\n                // Move the previous singleton instance to the new map.\n                for (const ext of this.singleton.LanguageMetaData.fileExtensions) {\n                    this.map[ext] = this.singleton;\n                }\n                this.singleton = undefined;\n            }\n        }\n        // Store the language services in the map.\n        for (const ext of language.LanguageMetaData.fileExtensions) {\n            if (this.map[ext] !== undefined && this.map[ext] !== language) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${language.LanguageMetaData.languageId}'.`);\n            }\n            this.map[ext] = language;\n        }\n    }\n    getServices(uri) {\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.map === undefined) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.map[ext];\n        if (!services) {\n            throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n        }\n        return services;\n    }\n    get all() {\n        if (this.singleton !== undefined) {\n            return [this.singleton];\n        }\n        if (this.map !== undefined) {\n            return Object.values(this.map);\n        }\n        return [];\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document = getDocument(node)) {\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: document.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            this.updateSectionConfiguration(section, change.settings[section]);\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect all documents that we should rebuild\n        const rebuildDocuments = this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray();\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(e => e.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n        }\n        await this.notifyBuildPhase(filtered, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        for (const listener of listeners) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer } from 'chevrotain';\nexport class DefaultLexer {\n    constructor(services) {\n        const tokens = services.parser.TokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full'\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text) {\n        var _a;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : []\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser. This implementation only wraps the sync parser in a promise.\n *\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = new CancellationTokenSource();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken: cancellationToken !== null && cancellationToken !== void 0 ? cancellationToken : CancellationToken.None\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            lexerErrors: result.lexerErrors.map(e => (Object.assign({}, e))),\n            parserErrors: result.parserErrors.map(e => (Object.assign({}, e))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        if (element) {\n            return element;\n        }\n        else {\n            throw new Error('Invalid grammar element id: ' + id);\n        }\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: () => new DefaultServiceRegistry(),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        get: (obj, prop) => _resolve(obj, prop, module, injector || proxy),\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)),\n        has: (_, prop) => prop in module,\n        ownKeys: () => [...Reflect.ownKeys(module), isProxy] // used by for..in\n    });\n    proxy[isProxy] = true;\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. See https://langium.org/docs/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [\"Architecture\", \"Branch\", \"Checkout\", \"CherryPicking\", \"Commit\", \"Common\", \"Direction\", \"Edge\", \"GitGraph\", \"Group\", \"Info\", \"Junction\", \"Merge\", \"Packet\", \"PacketBlock\", \"Pie\", \"PieSection\", \"Service\", \"Statement\"];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case \"Architecture\": {\n        return {\n          name: \"Architecture\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Branch\": {\n        return {\n          name: \"Branch\",\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case \"Checkout\": {\n        return {\n          name: \"Checkout\",\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case \"CherryPicking\": {\n        return {\n          name: \"CherryPicking\",\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case \"Commit\": {\n        return {\n          name: \"Commit\",\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Common\": {\n        return {\n          name: \"Common\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Edge\": {\n        return {\n          name: \"Edge\",\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"GitGraph\": {\n        return {\n          name: \"GitGraph\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Group\": {\n        return {\n          name: \"Group\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Info\": {\n        return {\n          name: \"Info\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Junction\": {\n        return {\n          name: \"Junction\",\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case \"Merge\": {\n        return {\n          name: \"Merge\",\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Packet\": {\n        return {\n          name: \"Packet\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PacketBlock\": {\n        return {\n          name: \"PacketBlock\",\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case \"Pie\": {\n        return {\n          name: \"Pie\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PieSection\": {\n        return {\n          name: \"PieSection\",\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case \"Service\": {\n        return {\n          name: \"Service\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Direction\": {\n        return {\n          name: \"Direction\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Info\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Packet\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Pie\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Architecture\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"fragment\":true,\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"LeftPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"RightPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Arrow\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"GitGraph\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-46DW6VJ7.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-W2GHVCYJ.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-BEWT4RHE.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-I3QFYML2.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-YCYPL57B.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n"],"file":"assets/mermaid-parser.core.pzFSGHE_.js"}