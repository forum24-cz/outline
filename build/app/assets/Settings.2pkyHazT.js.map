{"version":3,"file":"Settings.2pkyHazT.js","sources":["../../../plugins/umami/client/Settings.tsx"],"sourcesContent":["import find from \"lodash/find\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { toast } from \"sonner\";\nimport { IntegrationType, IntegrationService } from \"@shared/types\";\nimport Integration from \"~/models/Integration\";\nimport SettingRow from \"~/scenes/Settings/components/SettingRow\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport Input from \"~/components/Input\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport Icon from \"./Icon\";\n\ntype FormData = {\n  umamiDomain: string;\n  umamiScriptName: string;\n  umamiWebsiteId: string;\n};\n\nfunction Umami() {\n  const { integrations } = useStores();\n  const { t } = useTranslation();\n\n  const integration = find(integrations.orderedData, {\n    type: IntegrationType.Analytics,\n    service: IntegrationService.Umami,\n  }) as Integration<IntegrationType.Analytics> | undefined;\n\n  const {\n    register,\n    reset,\n    handleSubmit: formHandleSubmit,\n    formState,\n  } = useForm<FormData>({\n    mode: \"all\",\n    defaultValues: {\n      umamiDomain: integration?.settings.instanceUrl,\n      umamiScriptName: integration?.settings.scriptName,\n      umamiWebsiteId: integration?.settings.measurementId,\n    },\n  });\n\n  React.useEffect(() => {\n    void integrations.fetchPage({\n      type: IntegrationType.Analytics,\n    });\n  }, [integrations]);\n\n  React.useEffect(() => {\n    reset({\n      umamiWebsiteId: integration?.settings.measurementId,\n      umamiDomain: integration?.settings.instanceUrl,\n      umamiScriptName: integration?.settings.scriptName,\n    });\n  }, [integration, reset]);\n\n  const handleSubmit = React.useCallback(\n    async (data: FormData) => {\n      try {\n        if (data.umamiDomain && data.umamiScriptName && data.umamiWebsiteId) {\n          await integrations.save({\n            id: integration?.id,\n            type: IntegrationType.Analytics,\n            service: IntegrationService.Umami,\n            settings: {\n              measurementId: data.umamiWebsiteId,\n              instanceUrl: data.umamiDomain.replace(/\\/?$/, \"/\"),\n              scriptName: data.umamiScriptName,\n            } as Integration<IntegrationType.Analytics>[\"settings\"],\n          });\n        } else {\n          await integration?.delete();\n        }\n\n        toast.success(t(\"Settings saved\"));\n      } catch (err) {\n        toast.error(err.message);\n      }\n    },\n    [integrations, integration, t]\n  );\n\n  return (\n    <Scene title=\"Umami\" icon={<Icon />}>\n      <Heading>Umami</Heading>\n\n      <Text as=\"p\" type=\"secondary\">\n        <Trans>\n          Configure a Umami installation to send views and analytics from the\n          workspace to your own Umami instance.\n        </Trans>\n      </Text>\n      <form onSubmit={formHandleSubmit(handleSubmit)}>\n        <SettingRow\n          label={t(\"Instance URL\")}\n          name=\"umamiDomain\"\n          description={t(\n            \"The URL of your Umami instance. If you are using Umami Cloud it will begin with {{ url }}\",\n            {\n              url: \"https://cloud.umami.is/\",\n            }\n          )}\n          border={false}\n        >\n          <Input\n            required\n            placeholder=\"https://cloud.umami.is/\"\n            {...register(\"umamiDomain\")}\n          />\n        </SettingRow>\n        <SettingRow\n          label={t(\"Script name\")}\n          name=\"umamiScriptName\"\n          description={t(\n            \"The name of the script file that Umami uses to track analytics.\"\n          )}\n          border={false}\n        >\n          <Input\n            required\n            placeholder=\"script.js\"\n            {...register(\"umamiScriptName\")}\n          />\n        </SettingRow>\n        <SettingRow\n          label={t(\"Site ID\")}\n          name=\"umamiWebsiteId\"\n          description={t(\n            \"An ID that uniquely identifies the website in your Umami instance.\"\n          )}\n          border={false}\n        >\n          <Input\n            required\n            placeholder=\"xxx-xxx-xxx-xxx\"\n            {...register(\"umamiWebsiteId\")}\n          />\n        </SettingRow>\n\n        <Button type=\"submit\" disabled={formState.isSubmitting}>\n          {formState.isSubmitting ? `${t(\"Saving\")}â€¦` : t(\"Save\")}\n        </Button>\n      </form>\n    </Scene>\n  );\n}\n\nexport default observer(Umami);\n"],"names":["observer","Umami","integrations","useStores","t","useTranslation","integration","find","orderedData","type","IntegrationType","Analytics","service","IntegrationService","register","reset","handleSubmit","formHandleSubmit","formState","useForm","mode","defaultValues","umamiDomain","settings","instanceUrl","umamiScriptName","scriptName","umamiWebsiteId","measurementId","React","fetchPage","async","data","save","id","replace","delete","success","err","error","message","Scene","title","icon","jsx","Icon","children","Heading","Text","as","Trans","onSubmit","SettingRow","label","name","description","url","border","Input","required","placeholder","Button","disabled","isSubmitting"],"mappings":"6SAuJA,MAAeA,EAAAA,GAhIf,SAASC,QACD,MAAAC,aAAEA,GAAiBC,KACnBC,EAAEA,GAAMC,IAERC,EAAcC,EAAKL,EAAaM,YAAa,CACjDC,KAAMC,EAAgBC,UACtBC,QAASC,EAAmBZ,SAGxBa,SACJA,EAAAA,MACAC,EACAC,aAAcC,EAAAA,UACdC,GACEC,EAAkB,CACpBC,KAAM,MACNC,cAAe,CACbC,YAAahB,GAAaiB,SAASC,YACnCC,gBAAiBnB,GAAaiB,SAASG,WACvCC,eAAgBrB,GAAaiB,SAASK,iBAI1CC,EAAAA,WAAgB,KACT3B,EAAa4B,UAAU,CAC1BrB,KAAMC,EAAgBC,WACvB,GACA,CAACT,IAEJ2B,EAAAA,WAAgB,KACRd,EAAA,CACJY,eAAgBrB,GAAaiB,SAASK,cACtCN,YAAahB,GAAaiB,SAASC,YACnCC,gBAAiBnB,GAAaiB,SAASG,YACxC,GACA,CAACpB,EAAaS,IAEjB,MAAMC,EAAea,eACnBE,MAAOC,IACD,IACEA,EAAKV,aAAeU,EAAKP,iBAAmBO,EAAKL,qBAC7CzB,EAAa+B,KAAK,CACtBC,GAAI5B,GAAa4B,GACjBzB,KAAMC,EAAgBC,UACtBC,QAASC,EAAmBZ,MAC5BsB,SAAU,CACRK,cAAeI,EAAKL,eACpBH,YAAaQ,EAAKV,YAAYa,QAAQ,OAAQ,KAC9CT,WAAYM,EAAKP,yBAIfnB,GAAa8B,UAGfC,EAAAA,QAAQjC,EAAE,yBACTkC,GACDC,EAAAA,MAAMD,EAAIE,QAClB,IAEF,CAACtC,EAAcI,EAAaF,aAI3BqC,EAAM,CAAAC,MAAM,QAAQC,KAAMC,EAACC,MAC1BC,SAAA,CAACF,EAAAG,GAAQD,SAAK,UAEbF,EAAAI,GAAKC,GAAG,IAAIxC,KAAK,YAChBqC,SAAAF,EAACM,EAAK,CAAAJ,SAAA,kHAKP,OAAA,CAAKK,SAAUlC,EAAiBD,GAC/B8B,SAAA,CAACF,EAAAQ,EAAA,CACCC,MAAOjD,EAAE,gBACTkD,KAAK,cACLC,YAAanD,EACX,4FACA,CACEoD,IAAK,4BAGTC,QAAQ,EAERX,WAACY,EACC,CAAAC,UAAQ,EACRC,YAAY,6BACR9C,EAAS,mBAGhB8B,EAAAQ,EACC,CAAAC,MAAOjD,EAAE,eACTkD,KAAK,kBACLC,YAAanD,EACX,mEAEFqD,QAAQ,EAERX,SAACF,EAAAc,EACC,CAAAC,UAAQ,EACRC,YAAY,eACR9C,EAAS,uBAGhB8B,EAAAQ,EACC,CAAAC,MAAOjD,EAAE,WACTkD,KAAK,iBACLC,YAAanD,EACX,sEAEFqD,QAAQ,EAERX,SAACF,EAAAc,EACC,CAAAC,UAAQ,EACRC,YAAY,qBACR9C,EAAS,wBAIhB+C,EAAO,CAAApD,KAAK,SAASqD,SAAU5C,EAAU6C,aACvC7C,SAAAA,EAAU6C,aAAe,GAAG3D,EAAE,aAAeA,EAAE,eAK1D"}