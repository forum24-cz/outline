{"version":3,"file":"index.OBvLokf1.js","sources":["../../../app/scenes/Search/components/DocumentFilter.tsx","../../../app/scenes/Search/components/DocumentTypeFilter.tsx","../../../app/scenes/Search/components/RecentSearchListItem.tsx","../../../app/scenes/Search/components/RecentSearches.tsx","../../../app/scenes/Search/components/SearchInput.tsx","../../../app/scenes/Search/components/UserFilter.tsx","../../../app/scenes/Search/Search.tsx"],"sourcesContent":["import { CloseIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Document from \"~/models/Document\";\nimport { StyledButton } from \"~/components/FilterOptions\";\nimport Tooltip from \"~/components/Tooltip\";\n\ntype Props = {\n  /** The currently selected document */\n  document: Document;\n  /** Callback to remove the document filter */\n  onClick: React.MouseEventHandler;\n};\n\nexport function DocumentFilter(props: Props) {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <Tooltip content={t(\"Remove document filter\")}>\n        <StyledButton onClick={props.onClick} icon={<CloseIcon />} neutral>\n          {props.document.titleWithDefault}\n        </StyledButton>\n      </Tooltip>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { StatusFilter as TStatusFilter } from \"@shared/types\";\nimport FilterOptions from \"~/components/FilterOptions\";\n\ntype Props = {\n  /** The selected status filters */\n  statusFilter: TStatusFilter[];\n  /** Callback when a status filter is selected */\n  onSelect: (option: { statusFilter: TStatusFilter[] }) => void;\n};\n\nconst DocumentTypeFilter = ({ statusFilter, onSelect }: Props) => {\n  const { t } = useTranslation();\n  const options = React.useMemo(\n    () => [\n      {\n        key: TStatusFilter.Published,\n        label: t(\"Published\"),\n      },\n      {\n        key: TStatusFilter.Archived,\n        label: t(\"Archived\"),\n      },\n      {\n        key: TStatusFilter.Draft,\n        label: t(\"Drafts\"),\n      },\n    ],\n    [t]\n  );\n\n  const handleSelect = (key: TStatusFilter) => {\n    let modifiedStatusFilter;\n    if (statusFilter.includes(key)) {\n      modifiedStatusFilter = statusFilter.filter((status) => status !== key);\n    } else {\n      modifiedStatusFilter = [...statusFilter, key];\n    }\n\n    onSelect({ statusFilter: modifiedStatusFilter });\n  };\n\n  return (\n    <FilterOptions\n      options={options}\n      selectedKeys={statusFilter}\n      onSelect={handleSelect}\n      defaultLabel={t(\"Any status\")}\n    />\n  );\n};\n\nexport default DocumentTypeFilter;\n","import {\n  useFocusEffect,\n  useRovingTabIndex,\n} from \"@getoutline/react-roving-tabindex\";\nimport { CloseIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { s, hover } from \"@shared/styles\";\nimport type SearchQuery from \"~/models/SearchQuery\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Tooltip from \"~/components/Tooltip\";\nimport { searchPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  searchQuery: SearchQuery;\n};\n\nfunction RecentSearchListItem({ searchQuery }: Props) {\n  const { t } = useTranslation();\n\n  const ref = React.useRef<HTMLAnchorElement>(null);\n\n  const { focused, ...rovingTabIndex } = useRovingTabIndex(ref, false);\n  useFocusEffect(focused, ref);\n\n  return (\n    <RecentSearch\n      to={searchPath({ query: searchQuery.query })}\n      ref={ref}\n      {...rovingTabIndex}\n    >\n      {searchQuery.query}\n      <Tooltip content={t(\"Remove search\")}>\n        <RemoveButton\n          aria-label={t(\"Remove search\")}\n          onClick={async (ev) => {\n            ev.preventDefault();\n            await searchQuery.delete();\n          }}\n        >\n          <CloseIcon />\n        </RemoveButton>\n      </Tooltip>\n    </RecentSearch>\n  );\n}\n\nconst RemoveButton = styled(NudeButton)`\n  opacity: 0;\n  color: ${s(\"textTertiary\")};\n\n  &:focus,\n  &:${hover} {\n    opacity: 1;\n    color: ${s(\"text\")};\n  }\n`;\n\nconst RecentSearch = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  color: ${s(\"textSecondary\")};\n  cursor: var(--pointer);\n  padding: 1px 8px;\n  border-radius: 4px;\n  line-height: 24px;\n  font-size: 14px;\n  margin: 0 -8px;\n\n  &:focus-visible {\n    outline: none;\n  }\n\n  &:focus,\n  &:${hover} {\n    color: ${s(\"text\")};\n    background: ${s(\"backgroundSecondary\")};\n\n    ${RemoveButton} {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default RecentSearchListItem;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { s } from \"@shared/styles\";\nimport ArrowKeyNavigation from \"~/components/ArrowKeyNavigation\";\nimport { ConditionalFade } from \"~/components/Fade\";\nimport useStores from \"~/hooks/useStores\";\nimport RecentSearchListItem from \"./RecentSearchListItem\";\n\ntype Props = {\n  /** Callback when the Escape key is pressed while navigating the list */\n  onEscape?: (ev: React.KeyboardEvent<HTMLDivElement>) => void;\n};\n\nfunction RecentSearches(\n  { onEscape }: Props,\n  ref: React.RefObject<HTMLDivElement>\n) {\n  const { searches } = useStores();\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    void searches.fetchPage({\n      source: \"app\",\n    });\n  }, [searches]);\n\n  const content = searches.recent.length ? (\n    <>\n      <Heading>{t(\"Recent searches\")}</Heading>\n      <StyledArrowKeyNavigation\n        ref={ref}\n        onEscape={onEscape}\n        aria-label={t(\"Recent searches\")}\n        items={searches.recent}\n      >\n        {() =>\n          searches.recent.map((searchQuery) => (\n            <RecentSearchListItem\n              key={searchQuery.id}\n              searchQuery={searchQuery}\n            />\n          ))\n        }\n      </StyledArrowKeyNavigation>\n    </>\n  ) : null;\n\n  return (\n    <ConditionalFade animate={!searches.recent.length}>\n      {content}\n    </ConditionalFade>\n  );\n}\n\nconst Heading = styled.h2`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${s(\"textSecondary\")};\n  margin: 12px 0 0;\n`;\n\nconst StyledArrowKeyNavigation = styled(ArrowKeyNavigation)`\n  padding: 0;\n  margin-top: 8px;\n`;\n\nexport default observer(React.forwardRef(RecentSearches));\n","import { SearchIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { s } from \"@shared/styles\";\nimport Flex from \"~/components/Flex\";\n\ninterface Props extends React.HTMLAttributes<HTMLInputElement> {\n  name: string;\n  defaultValue: string;\n}\n\nfunction SearchInput(\n  { defaultValue, ...rest }: Props,\n  ref: React.RefObject<HTMLInputElement>\n) {\n  const theme = useTheme();\n  const focusInput = React.useCallback(() => {\n    ref.current?.focus();\n  }, [ref]);\n\n  React.useEffect(() => {\n    // ensure that focus is placed at end of input\n    const len = (defaultValue || \"\").length;\n    ref.current?.setSelectionRange(len, len);\n    const timeoutId = setTimeout(() => {\n      focusInput();\n    }, 100); // arbitrary number\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [ref, defaultValue, focusInput]);\n\n  return (\n    <Wrapper align=\"center\">\n      <StyledIcon size={46} color={theme.placeholder} onClick={focusInput} />\n      <StyledInput\n        {...rest}\n        defaultValue={defaultValue}\n        ref={ref}\n        spellCheck=\"false\"\n        type=\"search\"\n        autoFocus\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Flex)`\n  position: relative;\n  margin-bottom: 8px;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 10px 10px 10px 60px;\n  font-size: 30px;\n  font-weight: 400;\n  outline: none;\n  border: 0;\n  background: ${s(\"sidebarBackground\")};\n  border-radius: 4px;\n\n  color: ${s(\"text\")};\n\n  ::-webkit-search-cancel-button {\n    -webkit-appearance: none;\n  }\n  ::-webkit-input-placeholder {\n    color: ${s(\"placeholder\")};\n  }\n  :-moz-placeholder {\n    color: ${s(\"placeholder\")};\n  }\n  ::-moz-placeholder {\n    color: ${s(\"placeholder\")};\n  }\n  :-ms-input-placeholder {\n    color: ${s(\"placeholder\")};\n  }\n`;\n\nconst StyledIcon = styled(SearchIcon)`\n  position: absolute;\n  left: 8px;\n  opacity: 0.7;\n`;\n\nexport default React.forwardRef(SearchInput);\n","import { observer } from \"mobx-react\";\nimport { UserIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { Avatar, AvatarSize } from \"~/components/Avatar\";\nimport FilterOptions from \"~/components/FilterOptions\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  /** The currently selected user ID */\n  userId: string | undefined;\n  /** Callback to call when a user is selected */\n  onSelect: (key: string | undefined) => void;\n};\n\nconst fetchQueryOptions = { sort: \"name\", direction: \"ASC\" };\n\nfunction UserFilter(props: Props) {\n  const { onSelect, userId } = props;\n  const { t } = useTranslation();\n  const { users } = useStores();\n\n  const options = React.useMemo(() => {\n    const userOptions = users.all.map((user) => ({\n      key: user.id,\n      label: user.name,\n      icon: <StyledAvatar model={user} size={AvatarSize.Small} />,\n    }));\n    return [\n      {\n        key: \"\",\n        label: t(\"Any author\"),\n        icon: <UserIcon size={20} />,\n      },\n      ...userOptions,\n    ];\n  }, [users.all, t]);\n\n  return (\n    <FilterOptions\n      options={options}\n      selectedKeys={[userId]}\n      onSelect={onSelect}\n      defaultLabel={t(\"Any author\")}\n      fetchQuery={users.fetchPage}\n      fetchQueryOptions={fetchQueryOptions}\n      showFilter\n    />\n  );\n}\n\nconst StyledAvatar = styled(Avatar)`\n  margin: 2px;\n`;\n\nexport default observer(UserFilter);\n","import { observer } from \"mobx-react\";\nimport queryString from \"query-string\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport { Waypoint } from \"react-waypoint\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Pagination } from \"@shared/constants\";\nimport { hideScrollbars } from \"@shared/styles\";\nimport {\n  DateFilter as TDateFilter,\n  StatusFilter as TStatusFilter,\n} from \"@shared/types\";\nimport ArrowKeyNavigation from \"~/components/ArrowKeyNavigation\";\nimport DocumentListItem from \"~/components/DocumentListItem\";\nimport Fade from \"~/components/Fade\";\nimport Flex from \"~/components/Flex\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport RegisterKeyDown from \"~/components/RegisterKeyDown\";\nimport Scene from \"~/components/Scene\";\nimport Switch from \"~/components/Switch\";\nimport Text from \"~/components/Text\";\nimport env from \"~/env\";\nimport usePaginatedRequest from \"~/hooks/usePaginatedRequest\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport { SearchResult } from \"~/types\";\nimport { searchPath } from \"~/utils/routeHelpers\";\nimport { decodeURIComponentSafe } from \"~/utils/urls\";\nimport CollectionFilter from \"./components/CollectionFilter\";\nimport DateFilter from \"./components/DateFilter\";\nimport { DocumentFilter } from \"./components/DocumentFilter\";\nimport DocumentTypeFilter from \"./components/DocumentTypeFilter\";\nimport RecentSearches from \"./components/RecentSearches\";\nimport SearchInput from \"./components/SearchInput\";\nimport UserFilter from \"./components/UserFilter\";\n\nfunction Search() {\n  const { t } = useTranslation();\n  const { documents, searches } = useStores();\n\n  // routing\n  const params = useQuery();\n  const location = useLocation();\n  const history = useHistory();\n  const routeMatch = useRouteMatch<{ query: string }>();\n\n  // refs\n  const searchInputRef = React.useRef<HTMLInputElement | null>(null);\n  const resultListRef = React.useRef<HTMLDivElement | null>(null);\n  const recentSearchesRef = React.useRef<HTMLDivElement | null>(null);\n\n  // filters\n  const decodedQuery = decodeURIComponentSafe(\n    routeMatch.params.query ?? params.get(\"q\") ?? params.get(\"query\") ?? \"\"\n  ).trim();\n  const query = decodedQuery !== \"\" ? decodedQuery : undefined;\n  const collectionId = params.get(\"collectionId\") ?? \"\";\n  const userId = params.get(\"userId\") ?? \"\";\n  const documentId = params.get(\"documentId\") ?? undefined;\n  const dateFilter = (params.get(\"dateFilter\") as TDateFilter) ?? \"\";\n  const statusFilter = params.getAll(\"statusFilter\")?.length\n    ? (params.getAll(\"statusFilter\") as TStatusFilter[])\n    : [TStatusFilter.Published, TStatusFilter.Draft];\n  const titleFilter = params.get(\"titleFilter\") === \"true\";\n\n  const isSearchable = !!(query || collectionId || userId);\n\n  const document = documentId ? documents.get(documentId) : undefined;\n\n  const filterVisibility = {\n    document: !!document,\n    collection: !document,\n    user: !document || !!(document && query),\n    documentType: isSearchable,\n    date: isSearchable,\n    title: !!query && !document,\n  };\n\n  const filters = React.useMemo(\n    () => ({\n      query,\n      statusFilter,\n      collectionId,\n      userId,\n      dateFilter,\n      titleFilter,\n      documentId,\n    }),\n    [\n      query,\n      JSON.stringify(statusFilter),\n      collectionId,\n      userId,\n      dateFilter,\n      titleFilter,\n      documentId,\n    ]\n  );\n\n  const requestFn = React.useMemo(() => {\n    // Add to the searches store so this search can immediately appear in the recent searches list\n    // without a flash of loading.\n    if (query) {\n      searches.add({\n        id: uuidv4(),\n        query,\n        createdAt: new Date().toISOString(),\n      });\n    }\n\n    if (isSearchable) {\n      return async () =>\n        titleFilter\n          ? await documents.searchTitles(filters)\n          : await documents.search(filters);\n    }\n\n    return () => Promise.resolve([] as SearchResult[]);\n  }, [query, titleFilter, filters, searches, documents, isSearchable]);\n\n  const { data, next, end, error, loading } = usePaginatedRequest(requestFn, {\n    limit: Pagination.defaultLimit,\n  });\n\n  const updateLocation = (query: string) => {\n    history.replace({\n      pathname: location.pathname,\n      search: queryString.stringify(\n        { ...queryString.parse(location.search), q: query },\n        {\n          skipEmptyString: true,\n        }\n      ),\n    });\n  };\n\n  // All filters go through the query string so that searches are bookmarkable, which neccesitates\n  // some complexity as the query string is the source of truth for the filters.\n  const handleFilterChange = (search: {\n    collectionId?: string | undefined;\n    documentId?: string | undefined;\n    userId?: string | undefined;\n    dateFilter?: TDateFilter;\n    statusFilter?: TStatusFilter[];\n    titleFilter?: boolean | undefined;\n  }) => {\n    history.replace({\n      pathname: location.pathname,\n      search: queryString.stringify(\n        { ...queryString.parse(location.search), ...search },\n        {\n          skipEmptyString: true,\n        }\n      ),\n    });\n  };\n\n  const handleKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === \"Enter\") {\n      updateLocation(ev.currentTarget.value);\n      return;\n    }\n\n    if (ev.key === \"Escape\") {\n      ev.preventDefault();\n      return history.goBack();\n    }\n\n    if (ev.key === \"ArrowUp\") {\n      if (ev.currentTarget.value) {\n        const length = ev.currentTarget.value.length;\n        const selectionEnd = ev.currentTarget.selectionEnd || 0;\n        if (selectionEnd === 0) {\n          ev.currentTarget.selectionStart = 0;\n          ev.currentTarget.selectionEnd = length;\n          ev.preventDefault();\n        }\n      }\n    }\n\n    if (ev.key === \"ArrowDown\" && !ev.shiftKey) {\n      ev.preventDefault();\n\n      if (ev.currentTarget.value) {\n        const length = ev.currentTarget.value.length;\n        const selectionStart = ev.currentTarget.selectionStart || 0;\n        if (selectionStart < length) {\n          ev.currentTarget.selectionStart = length;\n          ev.currentTarget.selectionEnd = length;\n          return;\n        }\n      }\n\n      const firstItem = (resultListRef.current?.firstElementChild ??\n        recentSearchesRef.current?.firstElementChild) as HTMLAnchorElement;\n\n      firstItem?.focus();\n    }\n  };\n\n  const handleEscape = () => searchInputRef.current?.focus();\n  const showEmpty = !loading && query && data?.length === 0;\n\n  return (\n    <Scene textTitle={query ? `${query} – ${t(\"Search\")}` : t(\"Search\")}>\n      <RegisterKeyDown trigger=\"Escape\" handler={history.goBack} />\n      {loading && <LoadingIndicator />}\n      <ResultsWrapper column auto>\n        <form\n          method=\"GET\"\n          action={searchPath()}\n          onSubmit={(ev) => ev.preventDefault()}\n        >\n          <SearchInput\n            name=\"query\"\n            key={query ? \"search\" : \"recent\"}\n            ref={searchInputRef}\n            placeholder={`${\n              documentId\n                ? t(\"Search in document\")\n                : collectionId\n                ? t(\"Search in collection\")\n                : t(\"Search\")\n            }…`}\n            onKeyDown={handleKeyDown}\n            defaultValue={query ?? \"\"}\n          />\n\n          <Filters>\n            {filterVisibility.document && (\n              <DocumentFilter\n                document={document!}\n                onClick={() => {\n                  handleFilterChange({ documentId: undefined });\n                }}\n              />\n            )}\n            {filterVisibility.collection && (\n              <CollectionFilter\n                collectionId={collectionId}\n                onSelect={(collectionId) =>\n                  handleFilterChange({ collectionId })\n                }\n              />\n            )}\n            {filterVisibility.user && (\n              <UserFilter\n                userId={userId}\n                onSelect={(userId) => handleFilterChange({ userId })}\n              />\n            )}\n            {filterVisibility.documentType && (\n              <DocumentTypeFilter\n                statusFilter={statusFilter}\n                onSelect={({ statusFilter }) =>\n                  handleFilterChange({ statusFilter })\n                }\n              />\n            )}\n            {filterVisibility.date && (\n              <DateFilter\n                dateFilter={dateFilter}\n                onSelect={(dateFilter) => handleFilterChange({ dateFilter })}\n              />\n            )}\n            {filterVisibility.title && (\n              <SearchTitlesFilter\n                width={26}\n                height={14}\n                label={t(\"Search titles only\")}\n                onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n                  handleFilterChange({ titleFilter: ev.target.checked });\n                }}\n                checked={titleFilter}\n              />\n            )}\n          </Filters>\n        </form>\n        {isSearchable ? (\n          <>\n            {error ? (\n              <Fade>\n                <Centered column>\n                  <Text as=\"h1\">{t(\"Something went wrong\")}</Text>\n                  <Text as=\"p\" type=\"secondary\">\n                    {t(\n                      \"Please try again or contact support if the problem persists\"\n                    )}\n                    .\n                  </Text>\n                </Centered>\n              </Fade>\n            ) : showEmpty ? (\n              <Fade>\n                <Centered column>\n                  <Text as=\"p\" type=\"secondary\">\n                    {t(\"No documents found for your search filters.\")}\n                  </Text>\n                </Centered>\n              </Fade>\n            ) : null}\n            <ResultList column>\n              <StyledArrowKeyNavigation\n                ref={resultListRef}\n                onEscape={handleEscape}\n                aria-label={t(\"Search Results\")}\n                items={data ?? []}\n              >\n                {() =>\n                  data?.length && !error\n                    ? data.map((result) => (\n                        <DocumentListItem\n                          key={result.document.id}\n                          document={result.document}\n                          highlight={query}\n                          context={result.context}\n                          showCollection\n                          showTemplate\n                        />\n                      ))\n                    : null\n                }\n              </StyledArrowKeyNavigation>\n              <Waypoint\n                key={data?.length}\n                onEnter={end || loading ? undefined : next}\n                debug={env.ENVIRONMENT === \"development\"}\n              />\n            </ResultList>\n          </>\n        ) : documentId ? null : (\n          <RecentSearches ref={recentSearchesRef} onEscape={handleEscape} />\n        )}\n      </ResultsWrapper>\n    </Scene>\n  );\n}\n\nconst Centered = styled(Flex)`\n  text-align: center;\n  margin: 30vh auto 0;\n  max-width: 380px;\n  transform: translateY(-50%);\n`;\n\nconst ResultsWrapper = styled(Flex)`\n  ${breakpoint(\"tablet\")`\n    margin-top: 40px;\n  `};\n`;\n\nconst ResultList = styled(Flex)`\n  margin-bottom: 150px;\n`;\n\nconst StyledArrowKeyNavigation = styled(ArrowKeyNavigation)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Filters = styled(Flex)`\n  margin-bottom: 12px;\n  transition: opacity 100ms ease-in-out;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding: 8px 0;\n  height: 28px;\n  gap: 8px;\n\n  ${hideScrollbars()}\n\n  ${breakpoint(\"tablet\")`\n    padding: 0;\n  `};\n`;\n\nconst SearchTitlesFilter = styled(Switch)`\n  white-space: nowrap;\n  margin-left: 8px;\n  margin-top: 4px;\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nexport default observer(Search);\n"],"names":["DocumentFilter","props","t","useTranslation","jsx","children","Tooltip","content","StyledButton","onClick","icon","CloseIcon","neutral","document","titleWithDefault","DocumentTypeFilter","statusFilter","onSelect","options","React","useMemo","key","TStatusFilter","Published","label","Archived","Draft","FilterOptions","selectedKeys","modifiedStatusFilter","includes","filter","status","defaultLabel","RecentSearchListItem","searchQuery","ref","focused","rovingTabIndex","useRovingTabIndex","useFocusEffect","jsxs","RecentSearch","to","searchPath","query","RemoveButton","async","ev","preventDefault","delete","styled","NudeButton","withConfig","componentId","s","hover","Link","Heading","h2","StyledArrowKeyNavigation","ArrowKeyNavigation","RecentSearches$1","observer","RecentSearches","onEscape","searches","useStores","fetchPage","source","recent","length","Fragment","items","map","id","ConditionalFade","animate","Wrapper","Flex","StyledInput","input","StyledIcon","SearchIcon","SearchInput","defaultValue","rest","theme","useTheme","focusInput","current","focus","len","setSelectionRange","timeoutId","setTimeout","clearTimeout","align","size","color","placeholder","spellCheck","type","autoFocus","fetchQueryOptions","sort","direction","StyledAvatar","Avatar","UserFilter","userId","users","userOptions","all","user","name","model","AvatarSize","Small","UserIcon","fetchQuery","showFilter","Centered","ResultsWrapper","breakpoint","ResultList","Filters","hideScrollbars","SearchTitlesFilter","Switch","Search","documents","params","useQuery","location","useLocation","history","useHistory","routeMatch","useRouteMatch","searchInputRef","resultListRef","recentSearchesRef","decodedQuery","decodeURIComponentSafe","get","trim","undefined","collectionId","documentId","dateFilter","getAll","titleFilter","isSearchable","filterVisibility","collection","documentType","date","title","filters","JSON","stringify","requestFn","add","uuidv4","createdAt","Date","toISOString","searchTitles","search","Promise","resolve","data","next","end","error","loading","usePaginatedRequest","limit","Pagination","defaultLimit","handleFilterChange","replace","pathname","queryString","parse","skipEmptyString","handleEscape","showEmpty","Scene","textTitle","RegisterKeyDown","trigger","handler","goBack","LoadingIndicator","column","auto","method","action","onSubmit","onKeyDown","currentTarget","value","q","updateLocation","selectionEnd","selectionStart","shiftKey","firstItem","firstElementChild","CollectionFilter","DateFilter","width","height","onChange","target","checked","Fade","Text","as","result","DocumentListItem","highlight","context","showCollection","showTemplate","Waypoint","onEnter","debug","env","ENVIRONMENT"],"mappings":"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"}