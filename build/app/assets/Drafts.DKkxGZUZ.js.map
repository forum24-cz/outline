{"version":3,"file":"Drafts.DKkxGZUZ.js","sources":["../../../app/scenes/Drafts.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { DraftsIcon } from \"outline-icons\";\nimport queryString from \"query-string\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { DateFilter as TDateFilter } from \"@shared/types\";\nimport CollectionFilter from \"~/scenes/Search/components/CollectionFilter\";\nimport { Action } from \"~/components/Actions\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport Heading from \"~/components/Heading\";\nimport InputSearchPage from \"~/components/InputSearchPage\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport Scene from \"~/components/Scene\";\nimport Subheading from \"~/components/Subheading\";\nimport useStores from \"~/hooks/useStores\";\nimport NewDocumentMenu from \"~/menus/NewDocumentMenu\";\nimport DateFilter from \"./Search/components/DateFilter\";\n\nfunction Drafts() {\n  const { t } = useTranslation();\n  const { documents } = useStores();\n  const history = useHistory();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const collectionId = params.get(\"collectionId\") || undefined;\n  const dateFilter = (params.get(\"dateFilter\") || undefined) as TDateFilter;\n\n  const handleFilterChange = (search: {\n    dateFilter?: string | null | undefined;\n    collectionId?: string | null | undefined;\n  }) => {\n    history.replace({\n      pathname: location.pathname,\n      search: queryString.stringify(\n        { ...queryString.parse(location.search), ...search },\n        {\n          skipEmptyString: true,\n        }\n      ),\n    });\n  };\n\n  const isFiltered = collectionId || dateFilter;\n  const options = {\n    dateFilter,\n    collectionId,\n  };\n\n  return (\n    <Scene\n      icon={<DraftsIcon />}\n      title={t(\"Drafts\")}\n      left={<InputSearchPage source=\"drafts\" label={t(\"Search documents\")} />}\n      actions={\n        <Action>\n          <NewDocumentMenu />\n        </Action>\n      }\n    >\n      <Heading>{t(\"Drafts\")}</Heading>\n      <Subheading sticky>\n        {t(\"Documents\")}\n        <Filters>\n          <CollectionFilter\n            collectionId={collectionId}\n            onSelect={(collectionId) =>\n              handleFilterChange({\n                collectionId,\n              })\n            }\n          />\n          <DateFilter\n            dateFilter={dateFilter}\n            onSelect={(dateFilter) =>\n              handleFilterChange({\n                dateFilter,\n              })\n            }\n          />\n        </Filters>\n      </Subheading>\n\n      <PaginatedDocumentList\n        empty={\n          <Empty>\n            {isFiltered\n              ? t(\"No documents found for your filters.\")\n              : t(\"Youâ€™ve not got any drafts at the moment.\")}\n          </Empty>\n        }\n        fetch={documents.fetchDrafts}\n        documents={documents.drafts(options)}\n        options={options}\n        showParentDocuments\n        showCollection\n      />\n    </Scene>\n  );\n}\n\nconst Filters = styled(Flex)`\n  opacity: 0.85;\n  transition: opacity 100ms ease-in-out;\n  position: absolute;\n  right: -8px;\n  bottom: 0;\n  padding: 0 0 6px;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport default observer(Drafts);\n"],"names":["Filters","styled","Flex","withConfig","componentId","observer","Drafts","t","useTranslation","documents","useStores","history","useHistory","location","useLocation","params","URLSearchParams","search","collectionId","get","undefined","dateFilter","handleFilterChange","replace","pathname","queryString","stringify","parse","skipEmptyString","isFiltered","options","Scene","icon","jsx","DraftsIcon","title","left","InputSearchPage","source","label","actions","Action","children","NewDocumentMenu","Heading","jsxs","Subheading","sticky","CollectionFilter","onSelect","DateFilter","PaginatedDocumentList","empty","Empty","fetch","fetchDrafts","drafts","showParentDocuments","showCollection"],"mappings":"yxCAuGA,MAAMA,EAAUC,EAAOC,GAAKC,WAAA,CAAAC,YAAA,eAAZH,CAWf,CAAA,gIAEcI,EAAAA,GA/Ff,SAASC,SACD,MAAAC,EAAEA,GAAMC,KACRC,UAAEA,GAAcC,IAChBC,EAAUC,IACVC,EAAWC,IACXC,EAAS,IAAIC,gBAAgBH,EAASI,QACtCC,EAAeH,EAAOI,IAAI,sBAAmBC,EAC7CC,EAAcN,EAAOI,IAAI,oBAAiBC,EAE1CE,mBAAsBL,IAI1BN,EAAQY,QAAQ,CACdC,SAAUX,EAASW,SACnBP,OAAQQ,EAAYC,UAClB,IAAKD,EAAYE,MAAMd,EAASI,WAAYA,GAC5C,CACEW,iBAAiB,KAGtB,EAGGC,EAAaX,GAAgBG,EAC7BS,EAAU,CACdT,aACAH,gBAIA,SAACa,EACC,CAAAC,KAAOC,EAAAC,EAAAA,WAAA,CAAa,GACpBC,MAAO5B,EAAE,UACT6B,KAAOH,EAAAI,EAAA,CAAgBC,OAAO,SAASC,MAAOhC,EAAE,sBAChDiC,QACGP,EAAAQ,EACC,CAAAC,WAACC,EAAe,CAAA,KAIpBD,SAAA,GAACE,EAAA,CAASrC,SAAEA,EAAA,YACXsC,EAAAC,EAAW,CAAAC,QAAM,EACfxC,SAAAA,CAAAA,EAAE,eACFP,EACC,CAAA0C,SAAA,GAACM,EACC,CAAA9B,eACA+B,SAAW/B,GACTI,mBAAmB,CACjBJ,aAAAA,QAILgC,EACC,CAAA7B,aACA4B,SAAW5B,GACTC,mBAAmB,CACjBD,WAAAA,YAOTY,EAAAkB,EACC,CAAAC,MACGnB,EAAAoB,EAAA,CACExB,SACGtB,IAAE,uCACA,8CAGV+C,MAAO7C,EAAU8C,YACjB9C,UAAWA,EAAU+C,OAAO1B,GAC5BA,UACA2B,qBAAmB,EACnBC,gBAAc,MAItB"}