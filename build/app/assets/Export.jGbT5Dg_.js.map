{"version":3,"file":"Export.jGbT5Dg_.js","sources":["../../../app/scenes/Settings/Export.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { DownloadIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport FileOperation from \"~/models/FileOperation\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport ExportDialog from \"../../components/ExportDialog\";\nimport FileOperationListItem from \"./components/FileOperationListItem\";\n\nfunction Export() {\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n  const { fileOperations, dialogs } = useStores();\n\n  const handleOpenDialog = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      dialogs.openModal({\n        title: t(\"Export data\"),\n        content: <ExportDialog onSubmit={dialogs.closeAllModals} />,\n      });\n    },\n    [dialogs, t]\n  );\n\n  return (\n    <Scene title={t(\"Export\")} icon={<DownloadIcon />}>\n      <Heading>{t(\"Export\")}</Heading>\n      <Text as=\"p\" type=\"secondary\">\n        <Trans\n          defaults=\"A full export might take some time, consider exporting a single document or collection. You may leave this page once the export has started – if you have notifications enabled, we will email a link to <em>{{ userEmail }}</em> when it’s complete.\"\n          values={{\n            userEmail: user.email,\n          }}\n          components={{\n            em: <strong />,\n          }}\n        />\n      </Text>\n      <Button type=\"submit\" onClick={handleOpenDialog}>\n        {t(\"Export data\")}…\n      </Button>\n      <br />\n      <PaginatedList\n        items={fileOperations.exports}\n        fetch={fileOperations.fetchPage}\n        options={{\n          type: \"export\",\n        }}\n        heading={\n          <h2>\n            <Trans>Recent exports</Trans>\n          </h2>\n        }\n        renderItem={(item: FileOperation) => (\n          <FileOperationListItem key={item.id} fileOperation={item} />\n        )}\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Export);\n"],"names":["observer","Export","t","useTranslation","user","useCurrentUser","fileOperations","dialogs","useStores","handleOpenDialog","React","async","ev","preventDefault","openModal","title","content","jsx","ExportDialog","onSubmit","closeAllModals","jsxs","Scene","icon","DownloadIcon","children","Heading","Text","as","type","Trans","defaults","values","userEmail","email","components","em","Button","onClick","PaginatedList","items","exports","fetch","fetchPage","options","heading","renderItem","item","FileOperationListItem","fileOperation","id"],"mappings":"y9BAqEA,MAAeA,EAAAA,GAtDf,SAASC,SACD,MAAAC,EAAEA,GAAMC,IACRC,EAAOC,KACPC,eAAEA,EAAAA,QAAgBC,GAAYC,IAE9BC,EAAmBC,eACvBC,MAAOC,IACLA,EAAGC,iBAEHN,EAAQO,UAAU,CAChBC,MAAOb,EAAE,eACTc,QAAUC,EAAAC,EAAa,CAAAC,SAAUZ,EAAQa,kBAC1C,GAEH,CAACb,EAASL,IAIV,OAACmB,EAAAC,GAAMP,MAAOb,EAAE,UAAWqB,KAAON,EAAAO,EAAAA,aAAA,IAChCC,SAAA,GAACC,EAAA,CAASxB,SAAEA,EAAA,YACXe,EAAAU,EAAK,CAAAC,GAAG,IAAIC,KAAK,YAChBJ,SAACR,EAAAa,EAAA,CACCC,SAAS,wPACTC,OAAQ,CACNC,UAAW7B,EAAK8B,OAElBC,WAAY,CACVC,KAAK,SAAM,WAIhBC,EAAA,CAAOR,KAAK,SAASS,QAAS7B,EAC5BP,SAAAA,CAAAA,EAAE,eAAe,SAEnB,KAAE,IACHe,EAACsB,GACCC,MAAOlC,EAAemC,QACtBC,MAAOpC,EAAeqC,UACtBC,QAAS,CACPf,KAAM,UAERgB,QACE5B,EAAC,MACCQ,SAACR,EAAAa,EAAA,CAAML,8BAGXqB,WAAaC,GACV9B,EAAA+B,EAAA,CAAoCC,cAAeF,GAAxBA,EAAKG,QAK3C"}