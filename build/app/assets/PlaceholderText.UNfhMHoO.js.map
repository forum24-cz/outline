{"version":3,"file":"PlaceholderText.UNfhMHoO.js","sources":["../../../shared/random.ts","../../../app/components/PlaceholderText.tsx"],"sourcesContent":["const randomInteger = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nconst randomElement = <T>(arr: T[]): T => arr[randomInteger(0, arr.length - 1)];\n\nexport { randomInteger, randomElement };\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { randomInteger } from \"@shared/random\";\nimport { s } from \"@shared/styles\";\nimport Flex from \"~/components/Flex\";\nimport { pulsate } from \"~/styles/animations\";\n\nexport type Props = React.ComponentProps<typeof Flex> & {\n  header?: boolean;\n  width?: number;\n  height?: number;\n  minWidth?: number;\n  maxWidth?: number;\n  delay?: number;\n};\n\nfunction PlaceholderText({ minWidth, maxWidth, ...restProps }: Props) {\n  // We only want to compute the width once so we are storing it inside ref\n  const widthRef = React.useRef(randomInteger(minWidth || 75, maxWidth || 100));\n\n  return (\n    <Mask\n      width={`${widthRef.current / (restProps.header ? 2 : 1)}%`}\n      {...restProps}\n    />\n  );\n}\n\nconst Mask = styled(Flex)<{\n  width: number | string;\n  height?: number;\n  delay?: number;\n  header?: boolean;\n}>`\n  width: ${(props) =>\n    typeof props.width === \"number\" ? `${props.width}px` : props.width};\n  height: ${(props) =>\n    props.height ? props.height : props.header ? 24 : 18}px;\n  margin-bottom: 6px;\n  border-radius: 6px;\n  background-color: ${s(\"divider\")};\n  animation: ${pulsate} 2s infinite;\n  animation-delay: ${(props) => props.delay || 0}s;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\n// We don't want the component to re-render on any props change\n// So returning true from the custom comparison function to avoid re-render\nexport default React.memo(PlaceholderText, () => true);\n"],"names":["randomInteger","min","max","Math","floor","random","randomElement","arr","length","Mask","styled","Flex","withConfig","componentId","props","width","height","header","s","pulsate","delay","PlaceholderText$1","React","PlaceholderText","minWidth","maxWidth","restProps","widthRef","jsx","current"],"mappings":"4EAAA,MAAMA,cAAgBA,CAACC,EAAaC,IAClCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAEzCK,cAAoBC,GAAgBA,EAAIP,cAAc,EAAGO,EAAIC,OAAS,ICyB5E,MAAMC,EAAOC,EAAOC,GAAKC,WAAA,CAAAC,YAAA,eAAZH,CAMDI,CAAAA,SAAAA,WAAAA,2DAAAA,cAAAA,gCAAAA,qCAAAA,GACe,iBAAhBA,EAAMC,MAAqB,GAAGD,EAAMC,UAAYD,EAAMC,WAE7DD,EAAME,OAASF,EAAME,OAASF,EAAMG,OAAS,GAAK,IAGhCC,EAAE,WACTC,GACiBL,GAAAA,EAAMM,OAAS,IAS/CC,EAAeC,QAnCf,SAASC,iBAAgBC,SAAEA,EAAAA,SAAUC,KAAaC,IAE1CC,MAAAA,EAAWL,EAAatB,OAAAA,cAAcwB,GAAY,GAAIC,GAAY,MAExE,OACGG,EAAAnB,EAAA,CACCM,MAAUY,EAASE,SAAWH,EAAUT,OAAS,EAAI,GAA9C,OACHS,GAGV,IAyB2C,KAAM"}