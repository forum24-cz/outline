{"version":3,"file":"useTextStats.yvDOkpRe.js","sources":["../../../app/hooks/useTextStats.ts"],"sourcesContent":["import emojiRegex from \"emoji-regex\";\n\n/**\n * Hook to calculate text statistics\n * @param text The string to calculate statistics for\n * @param selectedText A substring of the text to calculate statistics for\n * @returns An object containing total and selected statistics\n */\nexport function useTextStats(text: string, selectedText: string = \"\") {\n  const numTotalWords = countWords(text);\n  const regex = emojiRegex();\n  const matches = Array.from(text.matchAll(regex));\n\n  return {\n    total: {\n      words: numTotalWords,\n      characters: text.length,\n      emoji: matches.length ?? 0,\n      readingTime: Math.max(1, Math.floor(numTotalWords / 200)),\n    },\n    selected: {\n      words: countWords(selectedText),\n      characters: selectedText.length,\n    },\n  };\n}\n\nfunction countWords(text: string): number {\n  const t = text.trim();\n\n  // Hyphenated words are counted as two words\n  return t ? t.replace(/-/g, \" \").split(/\\s+/g).length : 0;\n}\n"],"names":["useTextStats","text","selectedText","numTotalWords","countWords","regex","emojiRegex","matches","Array","from","matchAll","total","words","characters","length","emoji","readingTime","Math","max","floor","selected","t","trim","replace","split"],"mappings":"yCAQgBA,SAAAA,aAAaC,EAAcC,EAAuB,IAC1DC,MAAAA,EAAgBC,WAAWH,GAC3BI,EAAQC,IACRC,EAAUC,MAAMC,KAAKR,EAAKS,SAASL,IAElC,MAAA,CACLM,MAAO,CACLC,MAAOT,EACPU,WAAYZ,EAAKa,OACjBC,MAAOR,EAAQO,QAAU,EACzBE,YAAaC,KAAKC,IAAI,EAAGD,KAAKE,MAAMhB,EAAgB,OAEtDiB,SAAU,CACRR,MAAOR,WAAWF,GAClBW,WAAYX,EAAaY,QAG/B,CAEA,SAASV,WAAWH,GACZoB,MAAAA,EAAIpB,EAAKqB,OAGRD,OAAAA,EAAIA,EAAEE,QAAQ,KAAM,KAAKC,MAAM,QAAQV,OAAS,CACzD"}