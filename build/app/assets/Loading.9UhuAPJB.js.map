{"version":3,"mappings":"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","names":["ErrorOffline","t","useTranslation","CenteredContent","children","PageTitle","title","Heading","Empty","Branding","href","env","URL","Link","jsx","OutlineIcon","size","APP_NAME","styled","a","withConfig","componentId","s","breakpoint","depths","sidebar","DocumentTooLarge","code","reason","AuthenticationFailed","AuthorizationFailed","TooManyConnections","EditorUpdateError","Button","NudeButton","Centered","div","observer","ConnectionStatus","ui","useStores","codeToMessage","body","AuthorizationFailed_code","TooManyConnections_code","message","multiplayerErrorCode","undefined","multiplayerStatus","Tooltip","content","jsxs","placement","Fade","DisconnectedIcon","Container","Flex","getPosition","x","window","pageXOffset","y","pageYOffset","defaultOptions","throttle","StickyWrapper","EditorStyleHelper","tocWidth","transparentize","props","theme","background","toc","h3","ListItem","li","level","active","accent","text","List","ol","Contents","activeSlug","setActiveSlug","React","useState","scrollPosition","useWindowScrollPosition","options","opts","Object","assign","position","setPosition","useEffect","handleScroll","addEventListener","supportsPassiveListener","passive","cancel","removeEventListener","headings","useDocumentContext","activeId","length","id","key","heading","element","document","getElementById","decodeURIComponentSafe","bounding","getBoundingClientRect","top","headingAdjustment","reduce","memo","Infinity","filter","map","MultiplayerEditor","lazyWithRetry","__vitePreload","import","__VITE_PRELOAD__","CommentLink","Meta","DocumentMeta","rtl","TitleDocumentMeta","to","revision","rest","views","comments","match","useRouteMatch","sidebarContext","useLocationSidebarContext","team","useCurrentTeam","documentViews","useObserver","inDocument","totalViewers","onlyYou","userId","viewsLoadedOnMount","can","usePolicy","Wrapper","current","insightsPath","documentInsightsPath","commentsCount","unresolvedCommentsInDocumentCount","replace","getPreference","TeamPreference","Commenting","comment","Fragment","pathname","documentPath","state","onClick","toggleComments","CommentIcon","count","listViews","isDraft","isTemplate","url","e","o","exports","r","i","l","call","m","c","d","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","n","default","prototype","hasOwnProperty","p","keys","concat","indexOf","modifier","legacyModifier","whiteSpace","navigation","editing","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","isSupported","ContentEditable","_ContentEditable","disabled","onChange","onInput","onFocus","onBlur","onKeyDown","className","maxLength","autoFocus","placeholder","readOnly","dir","ref","contentRef","innerValue","setInnerValue","lastValue","useImperativeHandle","focus","innerText","focusAtStart","focusAtEnd","getComputedDirection","getComputedStyle","direction","wrappedEvent","callback","event","currentTarget","textContent","isPrintableKeyEvent","preventDefault","isVisible","useOnScreen","isIntersecting","setIntersecting","IntersectionObserver","entry","observe","unobserve","handlePaste","clipboardData","getData","execCommand","tabIndex","Content","contentEditable","onPaste","suppressContentEditableWarning","role","placeCaret","atStart","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","span","IconPicker","lazy","DocumentTitle","_DocumentTitle","documentId","icon","color","onChangeTitle","onChangeIcon","onSave","onGoToNextInput","externalRef","iconPickerIsOpen","handleOpen","setIconPickerClosed","useBoolean","editor","handleClick","restoreFocus","handleBlur","ev","parentElement","relatedTarget","handleKeyDown","nativeEvent","isComposing","isModKey","done","handleChange","input","test","getCurrentDateAsString","getCurrentTimeAsString","getCurrentDateTimeAsString","html","firstLine","split","join","trim","view","pasteParser","slice","isMarkdown","paste","parse","normalizePastedMarkdown","defaultSlice","__parseFromClipboard","selection","$from","firstChild","Slice","cut","nodeSize","openStart","openEnd","dispatch","tr","setSelection","Selection","doc","replaceSelection","handleClose","handleIconChange","chosenIcon","iconColor","fallbackIcon","Icon","Title","$iconPickerIsOpen","$containsIcon","DocumentValidation","maxTitleLength","mergeRefs","update","IconTitleWrapper","React.Suspense","fallback","StyledIconPicker","popoverPosition","onOpen","onClose","allowDelete","borderOnHover","extraArea","css","PopoverButton","light","extensions","withUIExtensions","withComments","richExtensions","Editor","DocumentEditor","titleRef","focusedComment","useFocusedComment","user","useCurrentUser","rejectOnEmpty","history","useHistory","params","useQuery","shareId","multiplayer","last","colorPalette","childRef","viewingResolved","isResolved","search","location","commentId","set","commentsExpanded","setTimeout","autosave","handleGoToNextInput","insertParagraph","insert","schema","nodes","paragraph","handleClickComment","handleDraftComment","createdById","Comment","createdAt","Date","reactions","add","handleRemoveComment","async","isNew","delete","setEditor","setEditorInitialized","updateState","updateDocState","handleRefChanged","useCallback","EditorComponent","childOffsetHeight","offsetHeight","editorStyle","padding","margin","paddingBottom","handleInit","handleDestroy","auto","column","titleWithDefault","path","matchDocumentHistory","documentHistoryPath","defaultValue","scrollTo","hash","focusedCommentId","onClickCommentMark","onCreateCommentMark","onDeleteCommentMark","onInit","onDestroy","Collaborators","limit","currentUserId","requestedUserIds","setRequestedUserIds","users","presence","documentPresence","documentPresenceArray","Array","from","values","presentIds","editingIds","isEditing","collaborators","useMemo","orderBy","all","includes","u","collaboratorIds","isSuspended","ids","uniq","sort","isEqual","fetchPage","popover","usePopoverState","gutter","renderAvatar","model","collaborator","isPresent","isObserving","observingUserId","isObservable","AvatarWithPresence","isCurrentUser","stopPropagation","setObservingUser","PopoverDisclosure","popoverProps","width","Math","min","AvatarSize","Large","height","Facepile","overflow","max","Popover","DocumentViews","isOpen","visible","activityEvents","useEditingFocus","useIdle","hasFocus","NewChildDocumentMenu","label","menu","useMenuState","modal","canCollection","collectionId","collections","items","createDocument","collection","collectionName","name","push","type","Trans","defaults","components","em","newDocumentPath","newNestedDocumentPath","MenuButton","ContextMenu","Template","HeadingWrapper","TableOfContentsMenu","unstable_preventOverflow","unstable_fixed","unstable_flip","minHeading","TableOfContentsIcon","neutral","TemplatesMenu","isCompact","onSelectTemplate","documents","templateToMenuItem","tmpl","TextHelper","replaceTemplateVariables","DocumentIcon","templates","publishedAt","collectionItems","isWorkspaceTemplate","workspaceTemplates","workspaceItems","ShapesIcon","disclosure","transition","stiffness","damping","Positioner","Banner","header","white","$color","draggableOnDesktop","ObservingBanner","AnimatePresence","initial","opacity","animate","exit","userName","PublicBreadcrumb","sharedTree","pathToDocument","traveler","previousPath","forEach","childNode","newPath","item","sharedDocumentPath","Breadcrumb","ShareButton","shares","share","getByDocumentId","sharedParent","getByDocumentParents","domain","useMobile","isPubliclyShared","GlobeIcon","scrollable","SharePopover","onRequestClose","hide","StyledHeader","Header","$hidden","Status","Action","slate","DocumentHeader","isPublishing","isSaving","savingIsDisabled","publishingIsDisabled","useTheme","resolvedTheme","isMobileMedia","isRevision","isEditingFocus","hasHeadings","useComponentSize","isMobile","isShare","isPersistedOnce","handleSave","handleToggle","tocVisible","context","useActionContext","activeDocumentId","isDeleted","isTemplateEditable","canToggleEmbeds","documentEmbeds","showContents","shortcut","altDisplay","editAction","noun","as","EditIcon","documentEditPath","appearanceAction","SunIcon","MoonIcon","setTheme","Theme","Dark","Light","ctrlKey","altKey","allowInInput","gap","hasSidebar","left","actions","DocumentBreadcrumb","Star","textSecondary","align","isArchived","Badge","separateEditMode","metaDisplay","action","navigateToTemplateSettings","hideIcon","createChildDocument","PlusIcon","updatedAt","restoreRevision","hideOnActionDisabled","publish","publishDocument","Separator","DocumentMenu","MoreIcon","onFindAndReplace","commands","openFindAndReplace","showToggleEmbeds","showDisplayOptions","KeyboardShortcutsButton","dialogs","handleOpenKeyboardShortcuts","openGuide","KeyboardShortcuts","KeyboardIcon","MeasuredContainer","As","rect","style","Days","days","differenceInDays","dateTime","Notices","ErrorBoundary","Notice","description","PlaceholderIcon","archivedAt","deletedAt","ArchiveIcon","updatedBy","Time","addSuffix","TrashIcon","permanentlyDeletedDescription","permanentlyDeletedAt","toISOString","template","InputIcon","DocumentLink","hover","ellipsis","ReferenceListItem","showCollection","anchor","isEmoji","determineIconType","IconType","Emoji","Document","PublicReferences","result","findChildren","node","Subheading","$active","References","useLocation","locationSidebarContext","fetchBacklinks","backlinks","getBacklinkedDocuments","getChildrenForDocument","showBacklinks","showChildDocuments","shouldFade","useRef","isBacklinksTab","Component","Tabs","Tab","isActive","backlinkedDocument","urlId","determineSidebarContext","currentContext","RevisionViewer","EditorContainer","dangerouslySetInnerHTML","__html","DocumentScene","constructor","super","arguments","this","isUploading","isEditorDirty","isEmpty","replaceDocument","editorRef","Node","fromJSON","ProsemirrorHelper","data","auth","AllSelection","replaceSelectionWith","templateId","fullWidth","cloneDeep","updateIsDirty","onSynced","restore","revisionId","response","client","post","success","onUndoRedo","shiftKey","redo","undo","onMove","abilities","move","openModal","DocumentMove","goToEdit","isBlurred","goToHistory","endsWith","onPublish","DocumentPublish","toJSON","tasks","getTasksSummary","isDirty","savedDocument","save","setActiveDocument","err","error","debounce","onFileUploadStart","onFileUploadStop","goBack","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","createdBy","hasEmptyTitle","render","tocPosition","embedsDisabled","tocPos","TocPosition","TOCPosition","Left","multiplayerEditor","canonicalUrl","updateDocumentPath","hasEmojiInTitle","favicon","emojiToUrl","showTitle","Redirect","RegisterKeyDown","trigger","handler","Background","LoadingIndicator","Prompt","when","Main","docFullWidth","PlaceholderDocument","RevisionContainer","PrintContentsContainer","onCreateLink","handleChangeTitle","handleChangeIcon","onCancel","canUpdate","canComment","ReferencesWrapper","ContentsContainer","parseDomain","origin","custom","Footer","observable","__decorateClass","withTranslation","withStores","withRouter","Loading"],"ignoreList":[9],"sources":["../../../app/scenes/Errors/ErrorOffline.tsx","../../../app/components/Branding.tsx","../../../shared/collaboration/CloseEvents.ts","../../../app/components/ConnectionStatus.tsx","../../../app/scenes/Document/components/Container.ts","../../../app/hooks/useWindowScrollPosition.ts","../../../app/scenes/Document/components/Contents.tsx","../../../app/scenes/Document/components/AsyncMultiplayerEditor.ts","../../../app/scenes/Document/components/DocumentMeta.tsx","../../../node_modules/is-printable-key-event/dist/index.js","../../../app/hooks/useOnScreen.ts","../../../app/components/ContentEditable.tsx","../../../app/scenes/Document/components/DocumentTitle.tsx","../../../app/scenes/Document/components/Editor.tsx","../../../app/components/Collaborators.tsx","../../../app/hooks/useEditingFocus.ts","../../../app/menus/NewChildDocumentMenu.tsx","../../../app/menus/TableOfContentsMenu.tsx","../../../app/menus/TemplatesMenu.tsx","../../../app/scenes/Document/components/ObservingBanner.tsx","../../../app/scenes/Document/components/PublicBreadcrumb.tsx","../../../app/scenes/Document/components/ShareButton.tsx","../../../app/scenes/Document/components/Header.tsx","../../../app/scenes/Document/components/KeyboardShortcutsButton.tsx","../../../app/scenes/Document/components/MeasuredContainer.tsx","../../../app/scenes/Document/components/Notices.tsx","../../../app/scenes/Document/components/ReferenceListItem.tsx","../../../app/scenes/Document/components/PublicReferences.tsx","../../../app/scenes/Document/components/References.tsx","../../../app/scenes/Document/components/RevisionViewer.tsx","../../../app/scenes/Document/components/Document.tsx","../../../app/utils/emoji.ts","../../../app/scenes/Document/components/Loading.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport PageTitle from \"~/components/PageTitle\";\n\nconst ErrorOffline = () => {\n  const { t } = useTranslation();\n  return (\n    <CenteredContent>\n      <PageTitle title={t(\"Offline\")} />\n      <Heading>{t(\"Offline\")}</Heading>\n      <Empty>{t(\"We were unable to load the document while offline.\")}</Empty>\n    </CenteredContent>\n  );\n};\n\nexport default ErrorOffline;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { depths, s } from \"@shared/styles\";\nimport env from \"~/env\";\nimport OutlineIcon from \"./Icons/OutlineIcon\";\n\ntype Props = {\n  href?: string;\n};\n\nfunction Branding({ href = env.URL }: Props) {\n  return (\n    <Link href={href}>\n      <OutlineIcon size={20} />\n      &nbsp;{env.APP_NAME}\n    </Link>\n  );\n}\n\nconst Link = styled.a`\n  justify-content: center;\n  padding-bottom: 16px;\n\n  font-weight: 600;\n  font-size: 14px;\n  text-decoration: none;\n  border-top-right-radius: 2px;\n  color: ${s(\"text\")};\n  display: flex;\n  align-items: center;\n\n  svg {\n    fill: ${s(\"text\")};\n  }\n\n  ${breakpoint(\"tablet\")`\n    z-index: ${depths.sidebar + 1};\n    background: ${s(\"sidebarBackground\")};\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    padding: 16px;\n\n    &:hover {\n      background: ${s(\"sidebarControlHoverBackground\")};\n    }\n  `};\n`;\n\nexport default Branding;\n","export const DocumentTooLarge = {\n  code: 1009,\n  reason: \"Document Too Large\",\n};\n\nexport const AuthenticationFailed = {\n  code: 4401,\n  reason: \"Authentication Failed\",\n};\n\nexport const AuthorizationFailed = {\n  code: 4403,\n  reason: \"Authorization Failed\",\n};\n\nexport const TooManyConnections = {\n  code: 4503,\n  reason: \"Too Many Connections\",\n};\n\nexport const EditorUpdateError = {\n  code: 5000,\n  reason: \"Editor Update Required\",\n};\n","import { observer } from \"mobx-react\";\nimport { DisconnectedIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport {\n  AuthenticationFailed,\n  AuthorizationFailed,\n  DocumentTooLarge,\n  TooManyConnections,\n} from \"@shared/collaboration/CloseEvents\";\nimport Fade from \"~/components/Fade\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useStores from \"~/hooks/useStores\";\n\nfunction ConnectionStatus() {\n  const { ui } = useStores();\n  const { t } = useTranslation();\n\n  const codeToMessage = {\n    [DocumentTooLarge.code]: {\n      title: t(\"Document is too large\"),\n      body: t(\n        \"This document has reached the maximum size and can no longer be edited\"\n      ),\n    },\n    [AuthenticationFailed.code]: {\n      title: t(\"Authentication failed\"),\n      body: t(\"Please try logging out and back in again\"),\n    },\n    [AuthorizationFailed.code]: {\n      title: t(\"Authorization failed\"),\n      body: t(\"You may have lost access to this document, try reloading\"),\n    },\n    [TooManyConnections.code]: {\n      title: t(\"Too many users connected to document\"),\n      body: t(\"Your edits will sync once other users leave the document\"),\n    },\n  };\n\n  const message = ui.multiplayerErrorCode\n    ? codeToMessage[ui.multiplayerErrorCode as keyof typeof codeToMessage]\n    : undefined;\n\n  return ui.multiplayerStatus === \"connecting\" ||\n    ui.multiplayerStatus === \"disconnected\" ? (\n    <Tooltip\n      content={\n        message ? (\n          <Centered>\n            <strong>{message.title}</strong>\n            <br />\n            {message.body}\n          </Centered>\n        ) : (\n          <Centered>\n            <strong>{t(\"Server connection lost\")}</strong>\n            <br />\n            {t(\"Edits you make will sync once you’re online\")}\n          </Centered>\n        )\n      }\n      placement=\"bottom\"\n    >\n      <Button>\n        <Fade>\n          <DisconnectedIcon />\n        </Fade>\n      </Button>\n    </Tooltip>\n  ) : null;\n}\n\nconst Button = styled(NudeButton)`\n  display: none;\n  position: fixed;\n  bottom: 0;\n  margin: 20px;\n  transform: translateX(-32px);\n\n  ${breakpoint(\"tablet\")`\n    display: block;\n  `};\n\n  @media print {\n    display: none;\n  }\n`;\n\nconst Centered = styled.div`\n  text-align: center;\n`;\n\nexport default observer(ConnectionStatus);\n","import styled from \"styled-components\";\nimport Flex from \"~/components/Flex\";\n\nconst Container = styled(Flex)`\n  position: relative;\n`;\n\nexport default Container;\n","// Based on https://github.com/rehooks/window-scroll-position which is no longer\n// maintained.\nimport throttle from \"lodash/throttle\";\nimport { useState, useEffect } from \"react\";\nimport { supportsPassiveListener } from \"@shared/utils/browser\";\n\nconst getPosition = () => ({\n  x: window.pageXOffset,\n  y: window.pageYOffset,\n});\n\nconst defaultOptions = {\n  throttle: 100,\n};\n\n/**\n * Hook to track the window's scroll position.\n *\n * @param options Configuration options\n * @param options.throttle Time in milliseconds to throttle the scroll event\n * @returns Object containing the current scroll position (x, y coordinates)\n */\nexport default function useWindowScrollPosition(options: {\n  throttle: number;\n}): {\n  x: number;\n  y: number;\n} {\n  const opts = Object.assign({}, defaultOptions, options);\n  const [position, setPosition] = useState(getPosition());\n\n  useEffect(() => {\n    const handleScroll = throttle(() => {\n      setPosition(getPosition());\n    }, opts.throttle);\n    window.addEventListener(\n      \"scroll\",\n      handleScroll,\n      supportsPassiveListener\n        ? {\n            passive: true,\n          }\n        : false\n    );\n    return () => {\n      handleScroll.cancel();\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [opts.throttle]);\n\n  return position;\n}\n","import { observer } from \"mobx-react\";\nimport { transparentize } from \"polished\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { EditorStyleHelper } from \"@shared/editor/styles/EditorStyleHelper\";\nimport { depths, s } from \"@shared/styles\";\nimport { useDocumentContext } from \"~/components/DocumentContext\";\nimport useWindowScrollPosition from \"~/hooks/useWindowScrollPosition\";\nimport { decodeURIComponentSafe } from \"~/utils/urls\";\n\nconst HEADING_OFFSET = 20;\n\nfunction Contents() {\n  const [activeSlug, setActiveSlug] = React.useState<string>();\n  const scrollPosition = useWindowScrollPosition({\n    throttle: 100,\n  });\n  const { headings } = useDocumentContext();\n\n  React.useEffect(() => {\n    let activeId = headings.length > 0 ? headings[0].id : undefined;\n\n    for (let key = 0; key < headings.length; key++) {\n      const heading = headings[key];\n      const element = window.document.getElementById(\n        decodeURIComponentSafe(heading.id)\n      );\n\n      if (element) {\n        const bounding = element.getBoundingClientRect();\n        if (bounding.top > HEADING_OFFSET) {\n          break;\n        }\n        activeId = heading.id;\n      }\n    }\n\n    setActiveSlug(activeId);\n  }, [scrollPosition, headings]);\n\n  // calculate the minimum heading level and adjust all the headings to make\n  // that the top-most. This prevents the contents from being weirdly indented\n  // if all of the headings in the document start at level 3, for example.\n  const minHeading = headings.reduce(\n    (memo, heading) => (heading.level < memo ? heading.level : memo),\n    Infinity\n  );\n  const headingAdjustment = minHeading - 1;\n  const { t } = useTranslation();\n\n  if (headings.length === 0) {\n    return <StickyWrapper />;\n  }\n\n  return (\n    <StickyWrapper>\n      <Heading>{t(\"Contents\")}</Heading>\n      <List>\n        {headings\n          .filter((heading) => heading.level < 4)\n          .map((heading) => (\n            <ListItem\n              key={heading.id}\n              level={heading.level - headingAdjustment}\n              active={activeSlug === heading.id}\n            >\n              <Link href={`#${heading.id}`}>{heading.title}</Link>\n            </ListItem>\n          ))}\n      </List>\n    </StickyWrapper>\n  );\n}\n\nconst StickyWrapper = styled.div`\n  display: none;\n\n  position: sticky;\n  top: 90px;\n  max-height: calc(100vh - 90px);\n  width: ${EditorStyleHelper.tocWidth}px;\n\n  padding: 0 16px;\n  overflow-y: auto;\n  border-radius: 8px;\n\n  background: ${s(\"background\")};\n\n  @supports (backdrop-filter: blur(20px)) {\n    backdrop-filter: blur(20px);\n    background: ${(props) => transparentize(0.2, props.theme.background)};\n  }\n\n  ${breakpoint(\"tablet\")`\n    display: block;\n    z-index: ${depths.toc};\n  `};\n`;\n\nconst Heading = styled.h3`\n  font-size: 13px;\n  font-weight: 600;\n  color: ${s(\"textTertiary\")};\n  letter-spacing: 0.03em;\n  margin-top: 10px;\n`;\n\nconst ListItem = styled.li<{ level: number; active?: boolean }>`\n  margin-left: ${(props) => (props.level - 1) * 10}px;\n  margin-bottom: 8px;\n  line-height: 1.3;\n  word-break: break-word;\n\n  a {\n    font-weight: ${(props) => (props.active ? \"600\" : \"inherit\")};\n    color: ${(props) => (props.active ? props.theme.accent : props.theme.text)};\n  }\n`;\n\nconst Link = styled.a`\n  color: ${s(\"text\")};\n  font-size: 14px;\n\n  &:hover {\n    color: ${s(\"accent\")};\n  }\n`;\n\nconst List = styled.ol`\n  padding: 0;\n  list-style: none;\n`;\n\nexport default observer(Contents);\n","import lazyWithRetry from \"~/utils/lazyWithRetry\";\n\nconst MultiplayerEditor = lazyWithRetry(() => import(\"./MultiplayerEditor\"));\n\nexport default MultiplayerEditor;\n","import { LocationDescriptor } from \"history\";\nimport { observer, useObserver } from \"mobx-react\";\nimport { CommentIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TeamPreference } from \"@shared/types\";\nimport Document from \"~/models/Document\";\nimport Revision from \"~/models/Revision\";\nimport DocumentMeta from \"~/components/DocumentMeta\";\nimport Fade from \"~/components/Fade\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport { useLocationSidebarContext } from \"~/hooks/useLocationSidebarContext\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { documentPath, documentInsightsPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  /* The document to display meta data for */\n  document: Document;\n  revision?: Revision;\n  to?: LocationDescriptor;\n  rtl?: boolean;\n};\n\nfunction TitleDocumentMeta({ to, document, revision, ...rest }: Props) {\n  const { views, comments, ui } = useStores();\n  const { t } = useTranslation();\n  const match = useRouteMatch();\n  const sidebarContext = useLocationSidebarContext();\n  const team = useCurrentTeam();\n  const documentViews = useObserver(() => views.inDocument(document.id));\n  const totalViewers = documentViews.length;\n  const onlyYou = totalViewers === 1 && documentViews[0].userId;\n  const viewsLoadedOnMount = React.useRef(totalViewers > 0);\n  const can = usePolicy(document);\n\n  const Wrapper = viewsLoadedOnMount.current ? React.Fragment : Fade;\n\n  const insightsPath = documentInsightsPath(document);\n  const commentsCount = comments.unresolvedCommentsInDocumentCount(document.id);\n\n  return (\n    <Meta document={document} revision={revision} to={to} replace {...rest}>\n      {team.getPreference(TeamPreference.Commenting) && can.comment && (\n        <>\n          &nbsp;•&nbsp;\n          <CommentLink\n            to={{\n              pathname: documentPath(document),\n              state: { sidebarContext },\n            }}\n            onClick={() => ui.toggleComments()}\n          >\n            <CommentIcon size={18} />\n            {commentsCount\n              ? t(\"{{ count }} comment\", { count: commentsCount })\n              : t(\"Comment\")}\n          </CommentLink>\n        </>\n      )}\n      {totalViewers &&\n      can.listViews &&\n      !document.isDraft &&\n      !document.isTemplate ? (\n        <Wrapper>\n          &nbsp;•&nbsp;\n          <Link\n            to={{\n              pathname:\n                match.url === insightsPath\n                  ? documentPath(document)\n                  : insightsPath,\n              state: { sidebarContext },\n            }}\n          >\n            {t(\"Viewed by\")}{\" \"}\n            {onlyYou\n              ? t(\"only you\")\n              : `${totalViewers} ${\n                  totalViewers === 1 ? t(\"person\") : t(\"people\")\n                }`}\n          </Link>\n        </Wrapper>\n      ) : null}\n    </Meta>\n  );\n}\n\nconst CommentLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const Meta = styled(DocumentMeta)<{ rtl?: boolean }>`\n  justify-content: ${(props) => (props.rtl ? \"flex-end\" : \"flex-start\")};\n  margin: -12px 0 2em 0;\n  font-size: 14px;\n  position: relative;\n  user-select: none;\n  z-index: 1;\n\n  a {\n    color: inherit;\n    cursor: var(--pointer);\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default observer(TitleDocumentMeta);\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","import * as React from \"react\";\n\nconst isSupported = \"IntersectionObserver\" in window;\n\n/**\n * Hook to return if a given ref is visible on screen.\n *\n * @returns boolean if the node is visible\n */\nexport default function useOnScreen(ref: React.RefObject<HTMLElement>) {\n  const [isIntersecting, setIntersecting] = React.useState(!isSupported);\n\n  React.useEffect(() => {\n    const element = ref.current;\n    let observer: IntersectionObserver | undefined;\n\n    if (isSupported) {\n      observer = new IntersectionObserver(([entry]) => {\n        // Update our state when observer callback fires\n        setIntersecting(entry.isIntersecting);\n      });\n    }\n\n    if (element) {\n      observer?.observe(element);\n    }\n    return () => {\n      if (element) {\n        observer?.unobserve(element);\n      }\n    };\n  }, [ref]);\n\n  return isIntersecting;\n}\n","import isPrintableKeyEvent from \"is-printable-key-event\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { s } from \"@shared/styles\";\nimport useOnScreen from \"~/hooks/useOnScreen\";\n\ntype Props = Omit<React.HTMLAttributes<HTMLSpanElement>, \"ref\" | \"onChange\"> & {\n  disabled?: boolean;\n  readOnly?: boolean;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  onChange?: (text: string) => void;\n  onFocus?: React.FocusEventHandler<HTMLSpanElement> | undefined;\n  onBlur?: React.FocusEventHandler<HTMLSpanElement> | undefined;\n  onInput?: React.FormEventHandler<HTMLSpanElement> | undefined;\n  onKeyDown?: React.KeyboardEventHandler<HTMLSpanElement> | undefined;\n  placeholder?: string;\n  maxLength?: number;\n  autoFocus?: boolean;\n  children?: React.ReactNode;\n  value: string;\n};\n\nexport type RefHandle = {\n  focus: () => void;\n  focusAtStart: () => void;\n  focusAtEnd: () => void;\n  getComputedDirection: () => string;\n};\n\n/**\n * Defines a content editable component with the same interface as a native\n * HTMLInputElement (or, as close as we can get).\n */\nconst ContentEditable = React.forwardRef(function _ContentEditable(\n  {\n    disabled,\n    onChange,\n    onInput,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    value,\n    children,\n    className,\n    maxLength,\n    autoFocus,\n    placeholder,\n    readOnly,\n    dir,\n    onClick,\n    ...rest\n  }: Props,\n  ref: React.RefObject<RefHandle>\n) {\n  const contentRef = React.useRef<HTMLSpanElement>(null);\n  const [innerValue, setInnerValue] = React.useState<string>(value);\n  const lastValue = React.useRef(value);\n\n  React.useImperativeHandle(ref, () => ({\n    focus: () => {\n      if (contentRef.current) {\n        contentRef.current.focus();\n        // looks unnecessary but required because of https://github.com/outline/outline/issues/5198\n        if (!contentRef.current.innerText) {\n          placeCaret(contentRef.current, true);\n        }\n      }\n    },\n    focusAtStart: () => {\n      if (contentRef.current) {\n        contentRef.current.focus();\n        placeCaret(contentRef.current, true);\n      }\n    },\n    focusAtEnd: () => {\n      if (contentRef.current) {\n        contentRef.current.focus();\n        placeCaret(contentRef.current, false);\n      }\n    },\n    getComputedDirection: () => {\n      if (contentRef.current) {\n        return window.getComputedStyle(contentRef.current).direction;\n      }\n      return \"ltr\";\n    },\n  }));\n\n  const wrappedEvent =\n    (\n      callback:\n        | React.FocusEventHandler<HTMLSpanElement>\n        | React.FormEventHandler<HTMLSpanElement>\n        | React.KeyboardEventHandler<HTMLSpanElement>\n        | undefined\n    ) =>\n    (event: any) => {\n      if (readOnly) {\n        return;\n      }\n\n      const text = event.currentTarget.textContent || \"\";\n\n      if (maxLength && isPrintableKeyEvent(event) && text.length >= maxLength) {\n        event?.preventDefault();\n        return;\n      }\n\n      if (text !== lastValue.current) {\n        lastValue.current = text;\n        onChange?.(text);\n      }\n\n      callback?.(event);\n    };\n\n  // This is to account for being within a React.Suspense boundary, in this\n  // case the component may be rendered with display: none. React 18 may solve\n  // this in the future by delaying useEffect hooks:\n  // https://github.com/facebook/react/issues/14536#issuecomment-861980492\n  const isVisible = useOnScreen(contentRef);\n\n  React.useEffect(() => {\n    if (autoFocus && isVisible && !disabled && !readOnly) {\n      contentRef.current?.focus();\n    }\n  }, [autoFocus, disabled, isVisible, readOnly, contentRef]);\n\n  React.useEffect(() => {\n    if (contentRef.current && value !== contentRef.current.textContent) {\n      setInnerValue(value);\n    }\n  }, [value, contentRef]);\n\n  // Ensure only plain text can be pasted into input when pasting from another\n  // rich text source. Note: If `onPaste` prop is passed then it takes\n  // priority over this behavior.\n  const handlePaste = React.useCallback(\n    (event: React.ClipboardEvent<HTMLSpanElement>) => {\n      event.preventDefault();\n      const text = event.clipboardData.getData(\"text/plain\");\n      window.document.execCommand(\"insertText\", false, text);\n    },\n    []\n  );\n\n  return (\n    <div className={className} dir={dir} onClick={onClick} tabIndex={-1}>\n      {children}\n      <Content\n        ref={contentRef}\n        contentEditable={!disabled && !readOnly}\n        onInput={wrappedEvent(onInput)}\n        onFocus={wrappedEvent(onFocus)}\n        onBlur={wrappedEvent(onBlur)}\n        onKeyDown={wrappedEvent(onKeyDown)}\n        onPaste={handlePaste}\n        data-placeholder={placeholder}\n        suppressContentEditableWarning\n        role=\"textbox\"\n        {...rest}\n      >\n        {innerValue}\n      </Content>\n    </div>\n  );\n});\n\nfunction placeCaret(element: HTMLElement, atStart: boolean) {\n  if (\n    typeof window.getSelection !== \"undefined\" &&\n    typeof document.createRange !== \"undefined\"\n  ) {\n    const range = document.createRange();\n    range.selectNodeContents(element);\n    range.collapse(atStart);\n    const sel = window.getSelection();\n    sel?.removeAllRanges();\n    sel?.addRange(range);\n  }\n}\n\nconst Content = styled.span`\n  background: ${s(\"background\")};\n  color: ${s(\"text\")};\n  -webkit-text-fill-color: ${s(\"text\")};\n  outline: none;\n  resize: none;\n  cursor: text;\n  word-break: anywhere;\n\n  &:empty {\n    display: inline-block;\n  }\n\n  &:empty::before {\n    display: inline-block;\n    color: ${s(\"placeholder\")};\n    -webkit-text-fill-color: ${s(\"placeholder\")};\n    content: attr(data-placeholder);\n    pointer-events: none;\n    height: 0;\n  }\n`;\n\nexport default ContentEditable;\n","import { observer } from \"mobx-react\";\nimport { Slice } from \"prosemirror-model\";\nimport { Selection } from \"prosemirror-state\";\nimport { __parseFromClipboard } from \"prosemirror-view\";\nimport * as React from \"react\";\nimport { mergeRefs } from \"react-merge-refs\";\nimport styled, { css } from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport Icon, { IconTitleWrapper } from \"@shared/components/Icon\";\nimport isMarkdown from \"@shared/editor/lib/isMarkdown\";\nimport normalizePastedMarkdown from \"@shared/editor/lib/markdown/normalize\";\nimport { extraArea, s } from \"@shared/styles\";\nimport { light } from \"@shared/styles/theme\";\nimport {\n  getCurrentDateAsString,\n  getCurrentDateTimeAsString,\n  getCurrentTimeAsString,\n} from \"@shared/utils/date\";\nimport { isModKey } from \"@shared/utils/keyboard\";\nimport { DocumentValidation } from \"@shared/validations\";\nimport ContentEditable, { RefHandle } from \"~/components/ContentEditable\";\nimport { useDocumentContext } from \"~/components/DocumentContext\";\nimport { PopoverButton } from \"~/components/IconPicker/components/PopoverButton\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport usePolicy from \"~/hooks/usePolicy\";\n\nconst IconPicker = React.lazy(() => import(\"~/components/IconPicker\"));\n\ntype Props = {\n  /** ID of the associated document */\n  documentId: string;\n  /** Title to display */\n  title: string;\n  /** Icon to display */\n  icon?: string | null;\n  /** Icon color */\n  color: string;\n  /** Placeholder to display when the document has no title */\n  placeholder?: string;\n  /** Should the title be editable, policies will also be considered separately */\n  readOnly?: boolean;\n  /** Callback called on any edits to text */\n  onChangeTitle?: (text: string) => void;\n  /** Callback called when the user selects an icon */\n  onChangeIcon?: (icon: string | null, color: string | null) => void;\n  /** Callback called when the user expects to move to the \"next\" input */\n  onGoToNextInput?: (insertParagraph?: boolean) => void;\n  /** Callback called when the user expects to save (CMD+S) */\n  onSave?: (options: { publish?: boolean; done?: boolean }) => void;\n  /** Callback called when focus leaves the input */\n  onBlur?: React.FocusEventHandler<HTMLSpanElement>;\n};\n\nconst lineHeight = \"1.25\";\nconst fontSize = \"2.25em\";\n\nconst DocumentTitle = React.forwardRef(function _DocumentTitle(\n  {\n    documentId,\n    title,\n    icon,\n    color,\n    readOnly,\n    onChangeTitle,\n    onChangeIcon,\n    onSave,\n    onGoToNextInput,\n    onBlur,\n    placeholder,\n  }: Props,\n  externalRef: React.RefObject<RefHandle>\n) {\n  const ref = React.useRef<RefHandle>(null);\n  const [iconPickerIsOpen, handleOpen, setIconPickerClosed] = useBoolean();\n  const { editor } = useDocumentContext();\n  const can = usePolicy(documentId);\n\n  const handleClick = React.useCallback(() => {\n    ref.current?.focus();\n  }, [ref]);\n\n  const restoreFocus = React.useCallback(() => {\n    ref.current?.focusAtEnd();\n  }, [ref]);\n\n  const handleBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLSpanElement>) => {\n      // Do nothing and simply return if the related target is the parent\n      // or a sibling of the current target element(the <span>\n      // containing document title)\n      if (\n        ev.currentTarget.parentElement === ev.relatedTarget ||\n        (ev.relatedTarget &&\n          ev.currentTarget.parentElement === ev.relatedTarget.parentElement)\n      ) {\n        return;\n      }\n      if (onBlur) {\n        onBlur(ev);\n      }\n    },\n    [onBlur]\n  );\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.nativeEvent.isComposing) {\n        return;\n      }\n      if (event.key === \"Enter\") {\n        event.preventDefault();\n\n        if (isModKey(event)) {\n          onSave?.({\n            done: true,\n          });\n          return;\n        }\n\n        onGoToNextInput?.(true);\n        return;\n      }\n\n      if (event.key === \"Tab\" || event.key === \"ArrowDown\") {\n        event.preventDefault();\n        onGoToNextInput?.();\n        return;\n      }\n\n      if (event.key === \"s\" && isModKey(event)) {\n        event.preventDefault();\n        onSave?.({});\n        return;\n      }\n    },\n    [onGoToNextInput, onSave]\n  );\n\n  const handleChange = React.useCallback(\n    (input: string) => {\n      let value = input;\n\n      if (/\\/date\\s$/.test(input)) {\n        value = getCurrentDateAsString();\n        ref?.current?.focusAtEnd();\n      } else if (/\\/time$/.test(input)) {\n        value = getCurrentTimeAsString();\n        ref?.current?.focusAtEnd();\n      } else if (/\\/datetime$/.test(input)) {\n        value = getCurrentDateTimeAsString();\n        ref?.current?.focusAtEnd();\n      }\n\n      onChangeTitle?.(value);\n    },\n    [ref, onChangeTitle]\n  );\n\n  // Custom paste handling so that if a multiple lines are pasted we\n  // only take the first line and insert the rest directly into the editor.\n  const handlePaste = React.useCallback(\n    (event: React.ClipboardEvent) => {\n      event.preventDefault();\n\n      const text = event.clipboardData.getData(\"text/plain\");\n      const html = event.clipboardData.getData(\"text/html\");\n      const [firstLine, ...rest] = text.split(`\\n`);\n      const content = rest.join(`\\n`).trim();\n\n      window.document.execCommand(\n        \"insertText\",\n        false,\n        firstLine.replace(/^#+\\s?/, \"\")\n      );\n\n      if (editor && content) {\n        const { view, pasteParser } = editor;\n        let slice;\n\n        if (isMarkdown(text)) {\n          const paste = pasteParser.parse(normalizePastedMarkdown(content));\n          if (paste) {\n            slice = paste.slice(0);\n          }\n        } else {\n          const defaultSlice = __parseFromClipboard(\n            view,\n            text,\n            html,\n            false,\n            view.state.selection.$from\n          );\n\n          // remove first node from slice\n          slice = defaultSlice.content.firstChild\n            ? new Slice(\n                defaultSlice.content.cut(\n                  defaultSlice.content.firstChild.nodeSize\n                ),\n                defaultSlice.openStart,\n                defaultSlice.openEnd\n              )\n            : defaultSlice;\n        }\n\n        if (slice) {\n          view.dispatch(\n            view.state.tr\n              .setSelection(Selection.atStart(view.state.doc))\n              .replaceSelection(slice)\n          );\n        }\n      }\n    },\n    [editor]\n  );\n\n  const handleClose = React.useCallback(() => {\n    setIconPickerClosed();\n    restoreFocus();\n  }, [setIconPickerClosed, restoreFocus]);\n\n  const handleIconChange = React.useCallback(\n    (chosenIcon: string | null, iconColor: string | null) => {\n      if (icon !== chosenIcon || color !== iconColor) {\n        onChangeIcon?.(chosenIcon, iconColor);\n      }\n    },\n    [icon, color, onChangeIcon]\n  );\n\n  const dir = ref.current?.getComputedDirection();\n\n  const fallbackIcon = icon ? (\n    <Icon value={icon} color={color} size={40} />\n  ) : null;\n\n  return (\n    <Title\n      onClick={handleClick}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onPaste={handlePaste}\n      onBlur={handleBlur}\n      placeholder={placeholder}\n      value={title}\n      $iconPickerIsOpen={iconPickerIsOpen}\n      $containsIcon={!!icon}\n      autoFocus={!title}\n      maxLength={DocumentValidation.maxTitleLength}\n      readOnly={readOnly}\n      dir=\"auto\"\n      ref={mergeRefs([ref, externalRef])}\n    >\n      {can.update && !readOnly ? (\n        <IconTitleWrapper dir={dir}>\n          <React.Suspense fallback={fallbackIcon}>\n            <StyledIconPicker\n              icon={icon ?? null}\n              color={color}\n              size={40}\n              popoverPosition=\"bottom-start\"\n              onChange={handleIconChange}\n              onOpen={handleOpen}\n              onClose={handleClose}\n              allowDelete\n              borderOnHover\n            />\n          </React.Suspense>\n        </IconTitleWrapper>\n      ) : icon ? (\n        <IconTitleWrapper dir={dir}>{fallbackIcon}</IconTitleWrapper>\n      ) : null}\n    </Title>\n  );\n});\n\ntype TitleProps = {\n  $containsIcon: boolean;\n  $iconPickerIsOpen: boolean;\n  readOnly?: boolean;\n};\n\n// Extra area prevents gap between icon and beginning of title\nconst StyledIconPicker = styled(IconPicker)`\n  ${extraArea(8)}\n`;\n\nconst Title = styled(ContentEditable)<TitleProps>`\n  position: relative;\n  line-height: ${lineHeight};\n  margin-top: 6vh;\n  margin-bottom: 0.5em;\n  margin-left: ${(props) =>\n    props.$containsIcon || props.$iconPickerIsOpen ? \"40px\" : \"0px\"};\n  font-size: ${fontSize};\n  font-weight: 600;\n  border: 0;\n  padding: 0;\n  cursor: ${(props) => (props.readOnly ? \"default\" : \"text\")};\n\n  > span {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${s(\"placeholder\")};\n    -webkit-text-fill-color: ${s(\"placeholder\")};\n    opacity: 1;\n  }\n\n  ${(props: TitleProps) =>\n    !props.readOnly &&\n    css`\n      &:focus-within,\n      &:focus {\n        margin-left: 40px;\n\n        ${PopoverButton} {\n          opacity: 1 !important;\n        }\n      }\n    `};\n\n  ${PopoverButton} {\n    opacity: ${(props: TitleProps) =>\n      props.$containsIcon ? \"1 !important\" : 0};\n  }\n\n  ${breakpoint(\"tablet\")`\n    margin-left: 0;\n\n    &:focus-within,\n    &:focus {\n      margin-left: 0;\n    }\n\n    &:hover {\n      ${PopoverButton} {\n        opacity: 0.5;\n\n        &:hover {\n          opacity: 1;\n        }\n      }\n    }`};\n\n  @media print {\n    color: ${light.text};\n    -webkit-text-fill-color: ${light.text};\n    background: none;\n  }\n`;\n\nexport default observer(DocumentTitle);\n","import last from \"lodash/last\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { mergeRefs } from \"react-merge-refs\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { richExtensions, withComments } from \"@shared/editor/nodes\";\nimport { TeamPreference } from \"@shared/types\";\nimport { colorPalette } from \"@shared/utils/collections\";\nimport Comment from \"~/models/Comment\";\nimport Document from \"~/models/Document\";\nimport { RefHandle } from \"~/components/ContentEditable\";\nimport { useDocumentContext } from \"~/components/DocumentContext\";\nimport Editor, { Props as EditorProps } from \"~/components/Editor\";\nimport Flex from \"~/components/Flex\";\nimport { withUIExtensions } from \"~/editor/extensions\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useFocusedComment from \"~/hooks/useFocusedComment\";\nimport { useLocationSidebarContext } from \"~/hooks/useLocationSidebarContext\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport {\n  documentHistoryPath,\n  documentPath,\n  matchDocumentHistory,\n} from \"~/utils/routeHelpers\";\nimport { decodeURIComponentSafe } from \"~/utils/urls\";\nimport MultiplayerEditor from \"./AsyncMultiplayerEditor\";\nimport DocumentMeta from \"./DocumentMeta\";\nimport DocumentTitle from \"./DocumentTitle\";\n\nconst extensions = withUIExtensions(withComments(richExtensions));\n\ntype Props = Omit<EditorProps, \"editorStyle\"> & {\n  onChangeTitle: (title: string) => void;\n  onChangeIcon: (icon: string | null, color: string | null) => void;\n  id: string;\n  document: Document;\n  isDraft: boolean;\n  multiplayer?: boolean;\n  onSave: (options: {\n    done?: boolean;\n    autosave?: boolean;\n    publish?: boolean;\n  }) => void;\n  children: React.ReactNode;\n};\n\n/**\n * The main document editor includes an editable title with metadata below it,\n * and support for commenting.\n */\nfunction DocumentEditor(props: Props, ref: React.RefObject<any>) {\n  const titleRef = React.useRef<RefHandle>(null);\n  const { t } = useTranslation();\n  const match = useRouteMatch();\n  const focusedComment = useFocusedComment();\n  const { ui, comments } = useStores();\n  const user = useCurrentUser({ rejectOnEmpty: false });\n  const team = useCurrentTeam({ rejectOnEmpty: false });\n  const history = useHistory();\n  const sidebarContext = useLocationSidebarContext();\n  const params = useQuery();\n  const {\n    document,\n    onChangeTitle,\n    onChangeIcon,\n    isDraft,\n    shareId,\n    readOnly,\n    children,\n    multiplayer,\n    ...rest\n  } = props;\n  const can = usePolicy(document);\n  const iconColor = document.color ?? (last(colorPalette) as string);\n  const childRef = React.useRef<HTMLDivElement>(null);\n  const focusAtStart = React.useCallback(() => {\n    if (ref.current) {\n      ref.current.focusAtStart();\n    }\n  }, [ref]);\n\n  React.useEffect(() => {\n    if (focusedComment) {\n      const viewingResolved = params.get(\"resolved\") === \"\";\n      if (\n        (focusedComment.isResolved && !viewingResolved) ||\n        (!focusedComment.isResolved && viewingResolved)\n      ) {\n        history.replace({\n          search: focusedComment.isResolved ? \"resolved=\" : \"\",\n          pathname: location.pathname,\n          state: {\n            commentId: focusedComment.id,\n            sidebarContext,\n          },\n        });\n      }\n      ui.set({ commentsExpanded: true });\n    }\n  }, [focusedComment, ui, document.id, history, params, sidebarContext]);\n\n  // Save document when blurring title, but delay so that if clicking on a\n  // button this is allowed to execute first.\n  const handleBlur = React.useCallback(() => {\n    setTimeout(() => props.onSave({ autosave: true }), 250);\n  }, [props]);\n\n  const handleGoToNextInput = React.useCallback(\n    (insertParagraph: boolean) => {\n      if (insertParagraph && ref.current) {\n        const { view } = ref.current;\n        const { dispatch, state } = view;\n        dispatch(state.tr.insert(0, state.schema.nodes.paragraph.create()));\n      }\n\n      focusAtStart();\n    },\n    [focusAtStart, ref]\n  );\n\n  const handleClickComment = React.useCallback(\n    (commentId: string) => {\n      history.replace({\n        pathname: window.location.pathname.replace(/\\/history$/, \"\"),\n        state: { commentId, sidebarContext },\n      });\n    },\n    [history, sidebarContext]\n  );\n\n  // Create a Comment model in local store when a comment mark is created, this\n  // acts as a local draft before submission.\n  const handleDraftComment = React.useCallback(\n    (commentId: string, createdById: string) => {\n      if (comments.get(commentId) || createdById !== user?.id) {\n        return;\n      }\n\n      const comment = new Comment(\n        {\n          documentId: props.id,\n          createdAt: new Date(),\n          createdById,\n          reactions: [],\n        },\n        comments\n      );\n      comment.id = commentId;\n      comments.add(comment);\n\n      history.replace({\n        pathname: window.location.pathname.replace(/\\/history$/, \"\"),\n        state: { commentId, sidebarContext },\n      });\n    },\n    [comments, user?.id, props.id, history, sidebarContext]\n  );\n\n  // Soft delete the Comment model when associated mark is totally removed.\n  const handleRemoveComment = React.useCallback(\n    async (commentId: string) => {\n      const comment = comments.get(commentId);\n      if (comment?.isNew) {\n        await comment?.delete();\n      }\n    },\n    [comments]\n  );\n\n  const {\n    setEditor,\n    setEditorInitialized,\n    updateState: updateDocState,\n  } = useDocumentContext();\n  const handleRefChanged = React.useCallback(setEditor, [setEditor]);\n  const EditorComponent = multiplayer ? MultiplayerEditor : Editor;\n\n  const childOffsetHeight = childRef.current?.offsetHeight || 0;\n  const editorStyle = React.useMemo(\n    () => ({\n      padding: \"0 32px\",\n      margin: \"0 -32px\",\n      paddingBottom: `calc(50vh - ${childOffsetHeight}px)`,\n    }),\n    [childOffsetHeight]\n  );\n\n  const handleInit = React.useCallback(\n    () => setEditorInitialized(true),\n    [setEditorInitialized]\n  );\n\n  const handleDestroy = React.useCallback(\n    () => setEditorInitialized(false),\n    [setEditorInitialized]\n  );\n\n  const direction = titleRef.current?.getComputedDirection();\n\n  return (\n    <Flex auto column>\n      <DocumentTitle\n        ref={titleRef}\n        readOnly={readOnly}\n        documentId={document.id}\n        title={\n          !document.title && readOnly\n            ? document.titleWithDefault\n            : document.title\n        }\n        icon={document.icon}\n        color={iconColor}\n        onChangeTitle={onChangeTitle}\n        onChangeIcon={onChangeIcon}\n        onGoToNextInput={handleGoToNextInput}\n        onBlur={handleBlur}\n        placeholder={t(\"Untitled\")}\n      />\n      {!shareId && (\n        <DocumentMeta\n          document={document}\n          to={{\n            pathname:\n              match.path === matchDocumentHistory\n                ? documentPath(document)\n                : documentHistoryPath(document),\n            state: { sidebarContext },\n          }}\n          rtl={direction === \"rtl\"}\n        />\n      )}\n      <EditorComponent\n        ref={mergeRefs([ref, handleRefChanged])}\n        autoFocus={!!document.title && !props.defaultValue}\n        placeholder={t(\"Type '/' to insert, or start writing…\")}\n        scrollTo={decodeURIComponentSafe(window.location.hash)}\n        readOnly={readOnly}\n        shareId={shareId}\n        userId={user?.id}\n        focusedCommentId={focusedComment?.id}\n        onClickCommentMark={handleClickComment}\n        onCreateCommentMark={\n          team?.getPreference(TeamPreference.Commenting) && can.comment\n            ? handleDraftComment\n            : undefined\n        }\n        onDeleteCommentMark={\n          team?.getPreference(TeamPreference.Commenting) && can.comment\n            ? handleRemoveComment\n            : undefined\n        }\n        onInit={handleInit}\n        onDestroy={handleDestroy}\n        onChange={updateDocState}\n        extensions={extensions}\n        editorStyle={editorStyle}\n        {...rest}\n      />\n      <div ref={childRef}>{children}</div>\n    </Flex>\n  );\n}\n\nexport default observer(React.forwardRef(DocumentEditor));\n","import filter from \"lodash/filter\";\nimport isEqual from \"lodash/isEqual\";\nimport orderBy from \"lodash/orderBy\";\nimport uniq from \"lodash/uniq\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { usePopoverState, PopoverDisclosure } from \"reakit/Popover\";\nimport Document from \"~/models/Document\";\nimport { AvatarSize, AvatarWithPresence } from \"~/components/Avatar\";\nimport DocumentViews from \"~/components/DocumentViews\";\nimport Facepile from \"~/components/Facepile\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Popover from \"~/components/Popover\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  /** The document to display live collaborators for */\n  document: Document;\n  /** The maximum number of collaborators to display, defaults to 6 */\n  limit?: number;\n};\n\n/**\n * Displays a list of live collaborators for a document, including their avatars\n * and presence status.\n */\nfunction Collaborators(props: Props) {\n  const { limit = 6 } = props;\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n  const currentUserId = user?.id;\n  const [requestedUserIds, setRequestedUserIds] = React.useState<string[]>([]);\n  const { users, presence, ui } = useStores();\n  const { document } = props;\n  const documentPresence = presence.get(document.id);\n  const documentPresenceArray = documentPresence\n    ? Array.from(documentPresence.values())\n    : [];\n\n  const presentIds = documentPresenceArray.map((p) => p.userId);\n  const editingIds = documentPresenceArray\n    .filter((p) => p.isEditing)\n    .map((p) => p.userId);\n\n  // ensure currently present via websocket are always ordered first\n  const collaborators = React.useMemo(\n    () =>\n      orderBy(\n        filter(\n          users.all,\n          (u) =>\n            (presentIds.includes(u.id) ||\n              document.collaboratorIds.includes(u.id)) &&\n            !u.isSuspended\n        ),\n        [(u) => presentIds.includes(u.id), \"id\"],\n        [\"asc\", \"asc\"]\n      ),\n    [document.collaboratorIds, users.all, presentIds]\n  );\n\n  // load any users we don't yet have in memory\n  React.useEffect(() => {\n    const ids = uniq([...document.collaboratorIds, ...presentIds])\n      .filter((userId) => !users.get(userId))\n      .sort();\n\n    if (!isEqual(requestedUserIds, ids) && ids.length > 0) {\n      setRequestedUserIds(ids);\n      void users.fetchPage({ ids, limit: 100 });\n    }\n  }, [document, users, presentIds, document.collaboratorIds, requestedUserIds]);\n\n  const popover = usePopoverState({\n    gutter: 0,\n    placement: \"bottom-end\",\n  });\n\n  const renderAvatar = React.useCallback(\n    ({ model: collaborator, ...rest }) => {\n      const isPresent = presentIds.includes(collaborator.id);\n      const isEditing = editingIds.includes(collaborator.id);\n      const isObserving = ui.observingUserId === collaborator.id;\n      const isObservable = collaborator.id !== currentUserId;\n\n      return (\n        <AvatarWithPresence\n          {...rest}\n          key={collaborator.id}\n          user={collaborator}\n          isPresent={isPresent}\n          isEditing={isEditing}\n          isObserving={isObserving}\n          isCurrentUser={currentUserId === collaborator.id}\n          onClick={\n            isObservable\n              ? (ev) => {\n                  if (isPresent) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    ui.setObservingUser(\n                      isObserving ? undefined : collaborator.id\n                    );\n                  }\n                }\n              : undefined\n          }\n        />\n      );\n    },\n    [presentIds, ui, currentUserId, editingIds]\n  );\n\n  return (\n    <>\n      <PopoverDisclosure {...popover}>\n        {(popoverProps) => (\n          <NudeButton\n            width={Math.min(collaborators.length, limit) * AvatarSize.Large}\n            height={AvatarSize.Large}\n            {...popoverProps}\n          >\n            <Facepile\n              size={AvatarSize.Large}\n              limit={limit}\n              overflow={Math.max(0, collaborators.length - limit)}\n              users={collaborators}\n              renderAvatar={renderAvatar}\n            />\n          </NudeButton>\n        )}\n      </PopoverDisclosure>\n      <Popover {...popover} width={300} aria-label={t(\"Viewers\")} tabIndex={0}>\n        <DocumentViews document={document} isOpen={popover.visible} />\n      </Popover>\n    </>\n  );\n}\n\nexport default observer(Collaborators);\n","import { useDocumentContext } from \"~/components/DocumentContext\";\nimport useIdle from \"./useIdle\";\n\nconst activityEvents = [\n  \"click\",\n  \"mousemove\",\n  \"DOMMouseScroll\",\n  \"mousewheel\",\n  \"mousedown\",\n  \"touchstart\",\n  \"touchmove\",\n  \"focus\",\n];\n\nexport default function useEditingFocus() {\n  const { editor } = useDocumentContext();\n  const isIdle = useIdle(3000, activityEvents);\n  return isIdle && !!editor?.view.hasFocus();\n}\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { useMenuState, MenuButton, MenuButtonHTMLProps } from \"reakit/Menu\";\nimport Document from \"~/models/Document\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { MenuItem } from \"~/types\";\nimport { newDocumentPath, newNestedDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  label?: (props: MenuButtonHTMLProps) => React.ReactNode;\n  document: Document;\n};\n\nfunction NewChildDocumentMenu({ document, label }: Props) {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const { t } = useTranslation();\n  const canCollection = usePolicy(document.collectionId);\n  const { collections } = useStores();\n\n  const items: MenuItem[] = [];\n\n  if (canCollection.createDocument) {\n    const collection = document.collectionId\n      ? collections.get(document.collectionId)\n      : undefined;\n    const collectionName = collection ? collection.name : t(\"collection\");\n    items.push({\n      type: \"route\",\n      title: (\n        <span>\n          <Trans\n            defaults=\"New document in <em>{{ collectionName }}</em>\"\n            values={{\n              collectionName,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        </span>\n      ),\n      to: newDocumentPath(document.collectionId),\n    });\n  }\n\n  items.push({\n    type: \"route\",\n    title: (\n      <span>\n        <Trans\n          defaults=\"New document in <em>{{ collectionName }}</em>\"\n          values={{\n            collectionName: document.title,\n          }}\n          components={{\n            em: <strong />,\n          }}\n        />\n      </span>\n    ),\n    to: newNestedDocumentPath(document.id),\n  });\n\n  return (\n    <>\n      <MenuButton {...menu}>{label}</MenuButton>\n      <ContextMenu {...menu} aria-label={t(\"New child document\")}>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(NewChildDocumentMenu);\n","import { observer } from \"mobx-react\";\nimport { TableOfContentsIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MenuButton, useMenuState } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport Button from \"~/components/Button\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport { useDocumentContext } from \"~/components/DocumentContext\";\nimport { MenuItem } from \"~/types\";\n\nfunction TableOfContentsMenu() {\n  const { headings } = useDocumentContext();\n  const menu = useMenuState({\n    modal: true,\n    unstable_preventOverflow: true,\n    unstable_fixed: true,\n    unstable_flip: true,\n  });\n  const { t } = useTranslation();\n  const minHeading = headings.reduce(\n    (memo, heading) => (heading.level < memo ? heading.level : memo),\n    Infinity\n  );\n\n  const items: MenuItem[] = React.useMemo(() => {\n    const i = [\n      {\n        type: \"heading\",\n        title: t(\"Contents\"),\n      },\n      ...headings.map((heading) => ({\n        type: \"link\",\n        href: `#${heading.id}`,\n        title: <HeadingWrapper>{t(heading.title)}</HeadingWrapper>,\n        level: heading.level - minHeading,\n      })),\n    ] as MenuItem[];\n\n    if (i.length === 1) {\n      i.push({\n        type: \"link\",\n        href: \"#\",\n        title: (\n          <HeadingWrapper>\n            {t(\"Headings you add to the document will appear here\")}\n          </HeadingWrapper>\n        ),\n        disabled: true,\n      });\n    }\n\n    return i;\n  }, [t, headings, minHeading]);\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(props) => (\n          <Button\n            {...props}\n            icon={<TableOfContentsIcon />}\n            borderOnHover\n            neutral\n          />\n        )}\n      </MenuButton>\n      <ContextMenu {...menu} aria-label={t(\"Table of contents\")}>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nconst HeadingWrapper = styled.div`\n  max-width: 100%;\n  white-space: normal;\n  overflow-wrap: anywhere;\n`;\n\nexport default observer(TableOfContentsMenu);\n","import { observer } from \"mobx-react\";\nimport { DocumentIcon, ShapesIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MenuButton, useMenuState } from \"reakit/Menu\";\nimport Icon from \"@shared/components/Icon\";\nimport { TextHelper } from \"@shared/utils/TextHelper\";\nimport Document from \"~/models/Document\";\nimport Button from \"~/components/Button\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport { MenuItem } from \"~/types\";\n\ntype Props = {\n  /** The document to which the templates will be applied */\n  document: Document;\n  /** Whether to render the button as a compact icon */\n  isCompact?: boolean;\n  /** Callback to handle when a template is selected */\n  onSelectTemplate: (template: Document) => void;\n};\n\nfunction TemplatesMenu({ isCompact, onSelectTemplate, document }: Props) {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const user = useCurrentUser();\n  const { documents } = useStores();\n  const { t } = useTranslation();\n\n  const templateToMenuItem = React.useCallback(\n    (tmpl: Document): MenuItem => ({\n      type: \"button\",\n      title: TextHelper.replaceTemplateVariables(tmpl.titleWithDefault, user),\n      icon: tmpl.icon ? (\n        <Icon value={tmpl.icon} color={tmpl.color ?? undefined} />\n      ) : (\n        <DocumentIcon />\n      ),\n      onClick: () => onSelectTemplate(tmpl),\n    }),\n    [user, onSelectTemplate]\n  );\n\n  const templates = documents.templates.filter((tmpl) => tmpl.publishedAt);\n\n  const collectionItems = templates\n    .filter(\n      (tmpl) =>\n        !tmpl.isWorkspaceTemplate && tmpl.collectionId === document.collectionId\n    )\n    .map(templateToMenuItem);\n\n  const workspaceTemplates = templates\n    .filter((tmpl) => tmpl.isWorkspaceTemplate)\n    .map(templateToMenuItem);\n\n  const workspaceItems: MenuItem[] = React.useMemo(\n    () =>\n      workspaceTemplates.length\n        ? [{ type: \"heading\", title: t(\"Workspace\") }, ...workspaceTemplates]\n        : [],\n    [t, workspaceTemplates]\n  );\n\n  const items = collectionItems\n    ? workspaceItems.length\n      ? [\n          ...collectionItems,\n          { type: \"separator\" } as MenuItem,\n          ...workspaceItems,\n        ]\n      : collectionItems\n    : workspaceItems;\n\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(props) => (\n          <Button\n            {...props}\n            icon={isCompact ? <ShapesIcon /> : undefined}\n            disclosure={!isCompact}\n            neutral\n          >\n            {isCompact ? undefined : t(\"Templates\")}\n          </Button>\n        )}\n      </MenuButton>\n      <ContextMenu {...menu} aria-label={t(\"Templates\")}>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(TemplatesMenu);\n","import { m, AnimatePresence } from \"framer-motion\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { depths } from \"@shared/styles\";\nimport useStores from \"~/hooks/useStores\";\nimport { draggableOnDesktop } from \"~/styles\";\n\nconst transition = {\n  type: \"spring\",\n  stiffness: 500,\n  damping: 30,\n};\n\n/**\n * A small banner that is displayed at the top of the screen when the user is\n * observing another user while editing a document\n */\nfunction ObservingBanner() {\n  const { ui, users } = useStores();\n  const { t } = useTranslation();\n  const user = ui.observingUserId ? users.get(ui.observingUserId) : undefined;\n\n  return (\n    <Positioner>\n      <AnimatePresence>\n        {user && (\n          <Banner\n            $color={user.color}\n            transition={transition}\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: -5 }}\n            exit={{ opacity: 0, y: -30 }}\n          >\n            {t(\"Observing {{ userName }}\", { userName: user.name })}\n          </Banner>\n        )}\n      </AnimatePresence>\n    </Positioner>\n  );\n}\n\nconst Positioner = styled.div`\n  position: fixed;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nconst Banner = styled(m.div)<{ $color: string }>`\n  padding: 6px 6px 1px;\n  font-size: 13px;\n  font-weight: 500;\n  z-index: ${depths.header + 1};\n  color: ${(props) => props.theme.white};\n  background: ${(props) => props.$color};\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  ${draggableOnDesktop()}\n`;\n\nexport default observer(ObservingBanner);\n","import * as React from \"react\";\nimport Icon from \"@shared/components/Icon\";\nimport { NavigationNode } from \"@shared/types\";\nimport Breadcrumb from \"~/components/Breadcrumb\";\nimport { MenuInternalLink } from \"~/types\";\nimport { sharedDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  children?: React.ReactNode;\n  documentId: string;\n  shareId: string;\n  sharedTree: NavigationNode | undefined;\n};\n\nfunction pathToDocument(\n  sharedTree: NavigationNode | undefined,\n  documentId: string\n) {\n  let path: NavigationNode[] = [];\n\n  const traveler = (\n    nodes: NavigationNode[],\n    previousPath: NavigationNode[]\n  ) => {\n    nodes.forEach((childNode) => {\n      const newPath = [...previousPath, childNode];\n\n      if (childNode.id === documentId) {\n        path = newPath;\n        return;\n      }\n\n      return traveler(childNode.children, newPath);\n    });\n  };\n\n  if (sharedTree) {\n    traveler([sharedTree], []);\n  }\n\n  return path;\n}\n\nconst PublicBreadcrumb: React.FC<Props> = ({\n  documentId,\n  shareId,\n  sharedTree,\n  children,\n}: Props) => {\n  const items: MenuInternalLink[] = React.useMemo(\n    () =>\n      pathToDocument(sharedTree, documentId)\n        .slice(0, -1)\n        .map((item) => ({\n          ...item,\n          icon: item.icon ? (\n            <Icon value={item.icon} color={item.color} />\n          ) : undefined,\n          title: item.title,\n          type: \"route\",\n          to: sharedDocumentPath(shareId, item.url),\n        })),\n    [sharedTree, shareId, documentId]\n  );\n\n  return <Breadcrumb items={items}>{children}</Breadcrumb>;\n};\n\nexport default PublicBreadcrumb;\n","import { observer } from \"mobx-react\";\nimport { GlobeIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { usePopoverState, PopoverDisclosure } from \"reakit/Popover\";\nimport Document from \"~/models/Document\";\nimport Button from \"~/components/Button\";\nimport Popover from \"~/components/Popover\";\nimport SharePopover from \"~/components/Sharing/Document\";\nimport useMobile from \"~/hooks/useMobile\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  /** Document being shared */\n  document: Document;\n};\n\nfunction ShareButton({ document }: Props) {\n  const { t } = useTranslation();\n  const { shares } = useStores();\n  const share = shares.getByDocumentId(document.id);\n  const sharedParent = shares.getByDocumentParents(document.id);\n  const domain = share?.domain || sharedParent?.domain;\n\n  const popover = usePopoverState({\n    gutter: 0,\n    placement: \"bottom-end\",\n    unstable_fixed: true,\n  });\n\n  const isMobile = useMobile();\n  if (isMobile) {\n    return null;\n  }\n\n  const icon = document.isPubliclyShared ? <GlobeIcon /> : undefined;\n\n  return (\n    <>\n      <PopoverDisclosure {...popover}>\n        {(props) => (\n          <Button icon={icon} neutral {...props}>\n            {t(\"Share\")} {domain && <>&middot; {domain}</>}\n          </Button>\n        )}\n      </PopoverDisclosure>\n\n      <Popover\n        {...popover}\n        aria-label={t(\"Share\")}\n        width={400}\n        scrollable={false}\n      >\n        <SharePopover\n          document={document}\n          onRequestClose={popover.hide}\n          visible={popover.visible}\n        />\n      </Popover>\n    </>\n  );\n}\n\nexport default observer(ShareButton);\n","import { observer } from \"mobx-react\";\nimport {\n  TableOfContentsIcon,\n  EditIcon,\n  PlusIcon,\n  MoonIcon,\n  MoreIcon,\n  SunIcon,\n} from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled, { useTheme } from \"styled-components\";\nimport Icon from \"@shared/components/Icon\";\nimport { useComponentSize } from \"@shared/hooks/useComponentSize\";\nimport { NavigationNode } from \"@shared/types\";\nimport { altDisplay, metaDisplay } from \"@shared/utils/keyboard\";\nimport { Theme } from \"~/stores/UiStore\";\nimport Document from \"~/models/Document\";\nimport Revision from \"~/models/Revision\";\nimport { Action, Separator } from \"~/components/Actions\";\nimport Badge from \"~/components/Badge\";\nimport Button from \"~/components/Button\";\nimport Collaborators from \"~/components/Collaborators\";\nimport DocumentBreadcrumb from \"~/components/DocumentBreadcrumb\";\nimport { useDocumentContext } from \"~/components/DocumentContext\";\nimport Flex from \"~/components/Flex\";\nimport Header from \"~/components/Header\";\nimport Star from \"~/components/Star\";\nimport Tooltip from \"~/components/Tooltip\";\nimport { publishDocument } from \"~/actions/definitions/documents\";\nimport { navigateToTemplateSettings } from \"~/actions/definitions/navigation\";\nimport { restoreRevision } from \"~/actions/definitions/revisions\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useEditingFocus from \"~/hooks/useEditingFocus\";\nimport useKeyDown from \"~/hooks/useKeyDown\";\nimport { useLocationSidebarContext } from \"~/hooks/useLocationSidebarContext\";\nimport useMobile from \"~/hooks/useMobile\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport DocumentMenu from \"~/menus/DocumentMenu\";\nimport NewChildDocumentMenu from \"~/menus/NewChildDocumentMenu\";\nimport TableOfContentsMenu from \"~/menus/TableOfContentsMenu\";\nimport TemplatesMenu from \"~/menus/TemplatesMenu\";\nimport { documentEditPath } from \"~/utils/routeHelpers\";\nimport ObservingBanner from \"./ObservingBanner\";\nimport PublicBreadcrumb from \"./PublicBreadcrumb\";\nimport ShareButton from \"./ShareButton\";\n\ntype Props = {\n  document: Document;\n  revision: Revision | undefined;\n  sharedTree: NavigationNode | undefined;\n  shareId: string | null | undefined;\n  isDraft: boolean;\n  isEditing: boolean;\n  isSaving: boolean;\n  isPublishing: boolean;\n  publishingIsDisabled: boolean;\n  savingIsDisabled: boolean;\n  onSelectTemplate: (template: Document) => void;\n  onSave: (options: {\n    done?: boolean;\n    publish?: boolean;\n    autosave?: boolean;\n  }) => void;\n};\n\nfunction DocumentHeader({\n  document,\n  revision,\n  shareId,\n  isEditing,\n  isDraft,\n  isPublishing,\n  isSaving,\n  savingIsDisabled,\n  publishingIsDisabled,\n  sharedTree,\n  onSelectTemplate,\n  onSave,\n}: Props) {\n  const { t } = useTranslation();\n  const { ui } = useStores();\n  const theme = useTheme();\n  const team = useCurrentTeam({ rejectOnEmpty: false });\n  const user = useCurrentUser({ rejectOnEmpty: false });\n  const { resolvedTheme } = ui;\n  const isMobileMedia = useMobile();\n  const isRevision = !!revision;\n  const isEditingFocus = useEditingFocus();\n  const { hasHeadings, editor } = useDocumentContext();\n  const sidebarContext = useLocationSidebarContext();\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const size = useComponentSize(ref);\n  const isMobile = isMobileMedia || size.width < 700;\n  const isShare = !!shareId;\n\n  // We cache this value for as long as the component is mounted so that if you\n  // apply a template there is still the option to replace it until the user\n  // navigates away from the doc\n  const [isNew] = React.useState(document.isPersistedOnce);\n\n  const handleSave = React.useCallback(() => {\n    onSave({\n      done: true,\n    });\n  }, [onSave]);\n\n  const handleToggle = React.useCallback(() => {\n    // Public shares, by default, show ToC on load.\n    if (isShare && ui.tocVisible === undefined) {\n      ui.set({ tocVisible: false });\n    } else {\n      ui.set({ tocVisible: !ui.tocVisible });\n    }\n  }, [ui, isShare]);\n\n  const context = useActionContext({\n    activeDocumentId: document?.id,\n  });\n\n  const can = usePolicy(document);\n  const { isDeleted, isTemplate } = document;\n  const isTemplateEditable = can.update && isTemplate;\n  const canToggleEmbeds = team?.documentEmbeds;\n  const showContents =\n    (ui.tocVisible === true && !document.isTemplate) ||\n    (isShare && ui.tocVisible !== false);\n\n  const toc = (\n    <Tooltip\n      content={\n        showContents\n          ? t(\"Hide contents\")\n          : hasHeadings\n          ? t(\"Show contents\")\n          : `${t(\"Show contents\")} (${t(\"available when headings are added\")})`\n      }\n      shortcut={`Ctrl+${altDisplay}+h`}\n      placement=\"bottom\"\n    >\n      <Button\n        onClick={handleToggle}\n        icon={<TableOfContentsIcon />}\n        borderOnHover\n        neutral\n      />\n    </Tooltip>\n  );\n  const editAction = (\n    <Action>\n      <Tooltip\n        content={t(\"Edit {{noun}}\", {\n          noun: document.noun,\n        })}\n        shortcut=\"e\"\n        placement=\"bottom\"\n      >\n        <Button\n          as={Link}\n          icon={<EditIcon />}\n          to={{\n            pathname: documentEditPath(document),\n            state: { sidebarContext },\n          }}\n          neutral\n        >\n          {isMobile ? null : t(\"Edit\")}\n        </Button>\n      </Tooltip>\n    </Action>\n  );\n  const appearanceAction = (\n    <Action>\n      <Tooltip\n        content={\n          resolvedTheme === \"light\" ? t(\"Switch to dark\") : t(\"Switch to light\")\n        }\n        placement=\"bottom\"\n      >\n        <Button\n          icon={resolvedTheme === \"light\" ? <SunIcon /> : <MoonIcon />}\n          onClick={() =>\n            ui.setTheme(resolvedTheme === \"light\" ? Theme.Dark : Theme.Light)\n          }\n          neutral\n          borderOnHover\n        />\n      </Tooltip>\n    </Action>\n  );\n\n  useKeyDown(\n    (event) => event.ctrlKey && event.altKey && event.key === \"˙\",\n    handleToggle,\n    {\n      allowInInput: true,\n    }\n  );\n\n  if (shareId) {\n    return (\n      <StyledHeader\n        ref={ref}\n        $hidden={isEditingFocus}\n        title={\n          <Flex gap={4}>\n            {document.icon && (\n              <Icon value={document.icon} color={document.color ?? undefined} />\n            )}\n            {document.title}\n          </Flex>\n        }\n        hasSidebar={sharedTree && sharedTree.children?.length > 0}\n        left={\n          isMobile ? (\n            hasHeadings ? (\n              <TableOfContentsMenu />\n            ) : null\n          ) : (\n            <PublicBreadcrumb\n              documentId={document.id}\n              shareId={shareId}\n              sharedTree={sharedTree}\n            >\n              {hasHeadings ? toc : null}\n            </PublicBreadcrumb>\n          )\n        }\n        actions={\n          <>\n            {appearanceAction}\n            {can.update && !isEditing ? editAction : <div />}\n          </>\n        }\n      />\n    );\n  }\n\n  return (\n    <>\n      <StyledHeader\n        ref={ref}\n        $hidden={isEditingFocus}\n        hasSidebar\n        left={\n          isMobile ? (\n            <TableOfContentsMenu />\n          ) : (\n            <DocumentBreadcrumb document={document}>\n              {document.isTemplate ? null : (\n                <>\n                  {toc} <Star document={document} color={theme.textSecondary} />\n                </>\n              )}\n            </DocumentBreadcrumb>\n          )\n        }\n        title={\n          <Flex gap={4} align=\"center\">\n            {document.icon && (\n              <Icon value={document.icon} color={document.color ?? undefined} />\n            )}\n            {document.title}\n            {document.isArchived && <Badge>{t(\"Archived\")}</Badge>}\n          </Flex>\n        }\n        actions={({ isCompact }) => (\n          <>\n            <ObservingBanner />\n\n            {!isPublishing && isSaving && user?.separateEditMode && (\n              <Status>{t(\"Saving\")}…</Status>\n            )}\n            {!isDeleted && !isRevision && can.listViews && (\n              <Collaborators\n                document={document}\n                limit={isCompact ? 3 : undefined}\n              />\n            )}\n            {(isEditing || !user?.separateEditMode) &&\n              !isTemplate &&\n              isNew &&\n              can.update && (\n                <Action>\n                  <TemplatesMenu\n                    isCompact={isCompact}\n                    document={document}\n                    onSelectTemplate={onSelectTemplate}\n                  />\n                </Action>\n              )}\n            {!isEditing && !isRevision && !isTemplate && can.update && (\n              <Action>\n                <ShareButton document={document} />\n              </Action>\n            )}\n            {(isEditing || isTemplateEditable) && (\n              <Action>\n                <Tooltip\n                  content={t(\"Save\")}\n                  shortcut={`${metaDisplay}+enter`}\n                  placement=\"bottom\"\n                >\n                  <Button\n                    context={context}\n                    action={isTemplate ? navigateToTemplateSettings : undefined}\n                    onClick={isTemplate ? undefined : handleSave}\n                    disabled={savingIsDisabled}\n                    neutral={isDraft}\n                    hideIcon\n                  >\n                    {isDraft ? t(\"Save draft\") : t(\"Done editing\")}\n                  </Button>\n                </Tooltip>\n              </Action>\n            )}\n            {can.update &&\n              !isEditing &&\n              user?.separateEditMode &&\n              !isRevision &&\n              editAction}\n            {can.update &&\n              can.createChildDocument &&\n              !isRevision &&\n              !isCompact &&\n              !isMobile && (\n                <Action>\n                  <NewChildDocumentMenu\n                    document={document}\n                    label={(props) => (\n                      <Tooltip\n                        content={t(\"New document\")}\n                        shortcut=\"n\"\n                        placement=\"bottom\"\n                      >\n                        <Button icon={<PlusIcon />} {...props} neutral>\n                          {t(\"New doc\")}\n                        </Button>\n                      </Tooltip>\n                    )}\n                  />\n                </Action>\n              )}\n            {revision && revision.createdAt !== document.updatedAt && (\n              <Action>\n                <Tooltip content={t(\"Restore version\")} placement=\"bottom\">\n                  <Button\n                    action={restoreRevision}\n                    context={context}\n                    neutral\n                    hideOnActionDisabled\n                  >\n                    {t(\"Restore\")}\n                  </Button>\n                </Tooltip>\n              </Action>\n            )}\n            {can.publish && (\n              <Action>\n                <Button\n                  action={publishDocument}\n                  context={context}\n                  disabled={publishingIsDisabled}\n                  hideOnActionDisabled\n                  hideIcon\n                >\n                  {document.collectionId || document.isWorkspaceTemplate\n                    ? t(\"Publish\")\n                    : `${t(\"Publish\")}…`}\n                </Button>\n              </Action>\n            )}\n            {!isDeleted && <Separator />}\n            <Action>\n              <DocumentMenu\n                document={document}\n                isRevision={isRevision}\n                label={(props) => (\n                  <Button\n                    icon={<MoreIcon />}\n                    {...props}\n                    borderOnHover\n                    neutral\n                  />\n                )}\n                onFindAndReplace={editor?.commands.openFindAndReplace}\n                showToggleEmbeds={canToggleEmbeds}\n                showDisplayOptions\n              />\n            </Action>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nconst StyledHeader = styled(Header)<{ $hidden: boolean }>`\n  transition: opacity 500ms ease-in-out;\n  ${(props) => props.$hidden && \"opacity: 0;\"}\n`;\n\nconst Status = styled(Action)`\n  padding-left: 0;\n  padding-right: 4px;\n  color: ${(props) => props.theme.slate};\n`;\n\nexport default observer(DocumentHeader);\n","import { observer } from \"mobx-react\";\nimport { KeyboardIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport KeyboardShortcuts from \"~/scenes/KeyboardShortcuts\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useEditingFocus from \"~/hooks/useEditingFocus\";\nimport useStores from \"~/hooks/useStores\";\n\nfunction KeyboardShortcutsButton() {\n  const { t } = useTranslation();\n  const { dialogs } = useStores();\n  const isEditingFocus = useEditingFocus();\n\n  const handleOpenKeyboardShortcuts = () => {\n    dialogs.openGuide({\n      title: t(\"Keyboard shortcuts\"),\n      content: <KeyboardShortcuts />,\n    });\n  };\n\n  return (\n    <Tooltip content={t(\"Keyboard shortcuts\")} shortcut=\"?\">\n      <Button onClick={handleOpenKeyboardShortcuts} $hidden={isEditingFocus}>\n        <KeyboardIcon />\n      </Button>\n    </Tooltip>\n  );\n}\n\nconst Button = styled(NudeButton)<{ $hidden: boolean }>`\n  display: none;\n  position: fixed;\n  bottom: 0;\n  margin: 20px;\n  transition: opacity 500ms ease-in-out;\n  ${(props) => props.$hidden && \"opacity: 0;\"}\n\n  ${breakpoint(\"tablet\")`\n    display: block;\n  `};\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default observer(KeyboardShortcutsButton);\n","import * as React from \"react\";\nimport { useComponentSize } from \"@shared/hooks/useComponentSize\";\n\nexport const MeasuredContainer = <T extends React.ElementType>({\n  as: As,\n  name,\n  children,\n  ...rest\n}: {\n  as: T;\n  name: string;\n  children?: React.ReactNode;\n} & React.ComponentProps<T>) => {\n  const ref = React.useRef<HTMLElement>(null);\n  const rect = useComponentSize(ref.current);\n\n  return (\n    <As\n      {...rest}\n      ref={ref}\n      style={{\n        [`--${name}-width`]: `${rect.width}px`,\n        [`--${name}-height`]: `${rect.height}px`,\n      }}\n    >\n      {children}\n    </As>\n  );\n};\n","import { differenceInDays } from \"date-fns\";\nimport { TrashIcon, ArchiveIcon, ShapesIcon, InputIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Document from \"~/models/Document\";\nimport ErrorBoundary from \"~/components/ErrorBoundary\";\nimport Notice from \"~/components/Notice\";\nimport Time from \"~/components/Time\";\n\ntype Props = {\n  document: Document;\n  readOnly: boolean;\n};\n\nfunction Days(props: { dateTime: string }) {\n  const { t } = useTranslation();\n  const days = differenceInDays(new Date(props.dateTime), new Date());\n\n  return (\n    <>\n      {t(`{{ count }} days`, {\n        count: days,\n      })}\n    </>\n  );\n}\n\nexport default function Notices({ document, readOnly }: Props) {\n  const { t } = useTranslation();\n\n  function permanentlyDeletedDescription() {\n    if (!document.permanentlyDeletedAt) {\n      return;\n    }\n\n    // if the permanently deleted date is in the past, show the current date\n    // to avoid showing a negative number of days. The cleanup task will\n    // permanently delete the document at the next run.\n    const permanentlyDeletedAt =\n      new Date(document.permanentlyDeletedAt) < new Date()\n        ? new Date().toISOString()\n        : document.permanentlyDeletedAt;\n\n    return document.template ? (\n      <Trans>\n        This template will be permanently deleted in{\" \"}\n        <Days dateTime={permanentlyDeletedAt} /> unless restored.\n      </Trans>\n    ) : (\n      <Trans>\n        This document will be permanently deleted in{\" \"}\n        <Days dateTime={permanentlyDeletedAt} /> unless restored.\n      </Trans>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      {document.isTemplate && !readOnly && (\n        <Notice\n          icon={<ShapesIcon />}\n          description={\n            <Trans>\n              Highlight some text and use the <PlaceholderIcon /> control to add\n              placeholders that can be filled out when creating new documents\n            </Trans>\n          }\n        >\n          {t(\"You’re editing a template\")}\n        </Notice>\n      )}\n      {document.archivedAt && !document.deletedAt && (\n        <Notice icon={<ArchiveIcon />}>\n          {t(\"Archived by {{userName}}\", {\n            userName: document.updatedBy?.name ?? t(\"Unknown\"),\n          })}\n          &nbsp;\n          <Time dateTime={document.updatedAt} addSuffix />\n        </Notice>\n      )}\n      {document.deletedAt && (\n        <Notice\n          icon={<TrashIcon />}\n          description={permanentlyDeletedDescription()}\n        >\n          {t(\"Deleted by {{userName}}\", {\n            userName: document.updatedBy?.name ?? t(\"Unknown\"),\n          })}\n          &nbsp;\n          <Time dateTime={document.deletedAt} addSuffix />\n        </Notice>\n      )}\n    </ErrorBoundary>\n  );\n}\n\nconst PlaceholderIcon = styled(InputIcon)`\n  position: relative;\n  top: 6px;\n  margin-top: -6px;\n`;\n","import { observer } from \"mobx-react\";\nimport { DocumentIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Icon from \"@shared/components/Icon\";\nimport { s, hover, ellipsis } from \"@shared/styles\";\nimport { IconType, NavigationNode } from \"@shared/types\";\nimport { determineIconType } from \"@shared/utils/icon\";\nimport Document from \"~/models/Document\";\nimport Flex from \"~/components/Flex\";\nimport { SidebarContextType } from \"~/components/Sidebar/components/SidebarContext\";\nimport { sharedDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  shareId?: string;\n  document: Document | NavigationNode;\n  anchor?: string;\n  showCollection?: boolean;\n  sidebarContext?: SidebarContextType;\n};\n\nconst DocumentLink = styled(Link)`\n  display: block;\n  margin: 2px -8px;\n  padding: 6px 8px;\n  border-radius: 8px;\n  max-height: 50vh;\n  min-width: 100%;\n  overflow: hidden;\n  position: relative;\n  cursor: var(--pointer);\n\n  &:${hover},\n  &:active,\n  &:focus {\n    background: ${s(\"listItemHoverBackground\")};\n  }\n`;\n\nconst Content = styled(Flex)`\n  color: ${s(\"textSecondary\")};\n  margin-left: -4px;\n`;\n\nconst Title = styled.div`\n  ${ellipsis()}\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.25;\n  padding-top: 3px;\n  color: ${s(\"text\")};\n  font-family: ${s(\"fontFamily\")};\n`;\n\nfunction ReferenceListItem({\n  document,\n  showCollection,\n  anchor,\n  shareId,\n  sidebarContext,\n  ...rest\n}: Props) {\n  const { icon, color } = document;\n  const isEmoji = determineIconType(icon) === IconType.Emoji;\n  const title =\n    document instanceof Document ? document.titleWithDefault : document.title;\n\n  return (\n    <DocumentLink\n      to={{\n        pathname: shareId\n          ? sharedDocumentPath(shareId, document.url)\n          : document.url,\n        hash: anchor ? `d-${anchor}` : undefined,\n        state: {\n          title: document.title,\n          sidebarContext,\n        },\n      }}\n      {...rest}\n    >\n      <Content gap={4} dir=\"auto\">\n        {icon ? (\n          <Icon value={icon} color={color ?? undefined} />\n        ) : (\n          <DocumentIcon />\n        )}\n        <Title>{isEmoji ? title.replace(icon!, \"\") : title}</Title>\n      </Content>\n    </DocumentLink>\n  );\n}\n\nexport default observer(ReferenceListItem);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { NavigationNode } from \"@shared/types\";\nimport Subheading from \"~/components/Subheading\";\nimport ReferenceListItem from \"./ReferenceListItem\";\n\ntype Props = {\n  shareId: string;\n  documentId: string;\n  sharedTree?: NavigationNode;\n};\n\nfunction PublicReferences(props: Props) {\n  const { t } = useTranslation();\n  const { shareId, documentId, sharedTree } = props;\n\n  // The sharedTree is the entire document tree starting at the shared document\n  // we must filter down the tree to only the part with the document we're\n  // currently viewing\n  const children = React.useMemo(() => {\n    let result: NavigationNode[];\n\n    function findChildren(node?: NavigationNode) {\n      if (!node) {\n        return;\n      }\n\n      if (node.id === documentId) {\n        result = node.children;\n      } else {\n        node.children.forEach((node) => {\n          if (result) {\n            return;\n          }\n\n          findChildren(node);\n        });\n      }\n\n      return result;\n    }\n\n    return findChildren(sharedTree) || [];\n  }, [documentId, sharedTree]);\n\n  if (!children.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <Subheading>{t(\"Documents\")}</Subheading>\n      {children.map((node) => (\n        <ReferenceListItem key={node.id} document={node} shareId={shareId} />\n      ))}\n    </>\n  );\n}\n\nexport default observer(PublicReferences);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Document from \"~/models/Document\";\nimport Fade from \"~/components/Fade\";\nimport { determineSidebarContext } from \"~/components/Sidebar/components/SidebarContext\";\nimport Tab from \"~/components/Tab\";\nimport Tabs from \"~/components/Tabs\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport { useLocationSidebarContext } from \"~/hooks/useLocationSidebarContext\";\nimport useStores from \"~/hooks/useStores\";\nimport ReferenceListItem from \"./ReferenceListItem\";\n\ntype Props = {\n  document: Document;\n};\n\nfunction References({ document }: Props) {\n  const { collections, documents } = useStores();\n  const user = useCurrentUser();\n  const location = useLocation();\n  const locationSidebarContext = useLocationSidebarContext();\n\n  React.useEffect(() => {\n    void documents.fetchBacklinks(document.id);\n  }, [documents, document.id]);\n\n  const backlinks = documents.getBacklinkedDocuments(document.id);\n  const collection = document.collectionId\n    ? collections.get(document.collectionId)\n    : undefined;\n  const children = collection\n    ? collection.getChildrenForDocument(document.id)\n    : [];\n  const showBacklinks = !!backlinks.length;\n  const showChildDocuments = !!children.length;\n  const shouldFade = React.useRef(!showBacklinks && !showChildDocuments);\n  const isBacklinksTab = location.hash === \"#backlinks\" || !showChildDocuments;\n  const height = Math.max(backlinks.length, children.length) * 40;\n  const Component = shouldFade.current ? Fade : React.Fragment;\n\n  return showBacklinks || showChildDocuments ? (\n    <Component>\n      <Tabs>\n        {showChildDocuments && (\n          <Tab\n            to={{\n              hash: \"#children\",\n              state: { sidebarContext: locationSidebarContext },\n            }}\n            isActive={() => !isBacklinksTab}\n          >\n            <Trans>Documents</Trans>\n          </Tab>\n        )}\n        {showBacklinks && (\n          <Tab\n            to={{\n              hash: \"#backlinks\",\n              state: { sidebarContext: locationSidebarContext },\n            }}\n            isActive={() => isBacklinksTab}\n          >\n            <Trans>Backlinks</Trans>\n          </Tab>\n        )}\n      </Tabs>\n      <Content style={{ height }}>\n        {showBacklinks && (\n          <List $active={isBacklinksTab}>\n            {backlinks.map((backlinkedDocument) => (\n              <ReferenceListItem\n                anchor={document.urlId}\n                key={backlinkedDocument.id}\n                document={backlinkedDocument}\n                showCollection={\n                  backlinkedDocument.collectionId !== document.collectionId\n                }\n                sidebarContext={determineSidebarContext({\n                  document: backlinkedDocument,\n                  user,\n                  currentContext: locationSidebarContext,\n                })}\n              />\n            ))}\n          </List>\n        )}\n        {showChildDocuments && (\n          <List $active={!isBacklinksTab}>\n            {children.map((node) => {\n              // If we have the document in the store already then use it to get the extra\n              // contextual info, otherwise the collection node will do (only has title and id)\n              const document = documents.get(node.id);\n              return (\n                <ReferenceListItem\n                  key={node.id}\n                  document={document || node}\n                  showCollection={false}\n                  sidebarContext={locationSidebarContext}\n                />\n              );\n            })}\n          </List>\n        )}\n      </Content>\n    </Component>\n  ) : null;\n}\n\nconst Content = styled.div`\n  position: relative;\n`;\n\nconst List = styled.div<{ $active: boolean }>`\n  visibility: ${({ $active }) => ($active ? \"visible\" : \"hidden\")};\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default observer(References);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport EditorContainer from \"@shared/editor/components/Styles\";\nimport { colorPalette } from \"@shared/utils/collections\";\nimport Document from \"~/models/Document\";\nimport Revision from \"~/models/Revision\";\nimport { Props as EditorProps } from \"~/components/Editor\";\nimport Flex from \"~/components/Flex\";\nimport { documentPath } from \"~/utils/routeHelpers\";\nimport { Meta as DocumentMeta } from \"./DocumentMeta\";\nimport DocumentTitle from \"./DocumentTitle\";\n\ntype Props = Omit<EditorProps, \"extensions\"> & {\n  /** The ID of the revision */\n  id: string;\n  /** The current document */\n  document: Document;\n  /** The revision to display */\n  revision: Revision;\n  children?: React.ReactNode;\n};\n\n/**\n * Displays revision HTML pre-rendered on the server.\n */\nfunction RevisionViewer(props: Props) {\n  const { document, children, revision } = props;\n\n  return (\n    <Flex auto column>\n      <DocumentTitle\n        documentId={revision.documentId}\n        title={revision.title}\n        icon={revision.icon}\n        color={revision.color ?? colorPalette[0]}\n        readOnly\n      />\n      <DocumentMeta\n        document={document}\n        revision={revision}\n        to={documentPath(document)}\n        rtl={revision.rtl}\n      />\n      <EditorContainer\n        dangerouslySetInnerHTML={{ __html: revision.html }}\n        dir={revision.dir}\n        rtl={revision.rtl}\n      />\n      {children}\n    </Flex>\n  );\n}\n\nexport default observer(RevisionViewer);\n","import cloneDeep from \"lodash/cloneDeep\";\nimport debounce from \"lodash/debounce\";\nimport isEqual from \"lodash/isEqual\";\nimport { action, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { Node } from \"prosemirror-model\";\nimport { AllSelection } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  Prompt,\n  RouteComponentProps,\n  StaticContext,\n  withRouter,\n  Redirect,\n} from \"react-router\";\nimport { toast } from \"sonner\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { EditorStyleHelper } from \"@shared/editor/styles/EditorStyleHelper\";\nimport { s } from \"@shared/styles\";\nimport {\n  IconType,\n  NavigationNode,\n  TOCPosition,\n  TeamPreference,\n} from \"@shared/types\";\nimport { ProsemirrorHelper } from \"@shared/utils/ProsemirrorHelper\";\nimport { TextHelper } from \"@shared/utils/TextHelper\";\nimport { parseDomain } from \"@shared/utils/domains\";\nimport { determineIconType } from \"@shared/utils/icon\";\nimport { isModKey } from \"@shared/utils/keyboard\";\nimport RootStore from \"~/stores/RootStore\";\nimport Document from \"~/models/Document\";\nimport Revision from \"~/models/Revision\";\nimport DocumentMove from \"~/scenes/DocumentMove\";\nimport DocumentPublish from \"~/scenes/DocumentPublish\";\nimport Branding from \"~/components/Branding\";\nimport ConnectionStatus from \"~/components/ConnectionStatus\";\nimport ErrorBoundary from \"~/components/ErrorBoundary\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport PageTitle from \"~/components/PageTitle\";\nimport PlaceholderDocument from \"~/components/PlaceholderDocument\";\nimport RegisterKeyDown from \"~/components/RegisterKeyDown\";\nimport { SidebarContextType } from \"~/components/Sidebar/components/SidebarContext\";\nimport withStores from \"~/components/withStores\";\nimport type { Editor as TEditor } from \"~/editor\";\nimport { Properties } from \"~/types\";\nimport { client } from \"~/utils/ApiClient\";\nimport { emojiToUrl } from \"~/utils/emoji\";\n\nimport {\n  documentHistoryPath,\n  documentEditPath,\n  updateDocumentPath,\n} from \"~/utils/routeHelpers\";\nimport Container from \"./Container\";\nimport Contents from \"./Contents\";\nimport Editor from \"./Editor\";\nimport Header from \"./Header\";\nimport KeyboardShortcutsButton from \"./KeyboardShortcutsButton\";\nimport { MeasuredContainer } from \"./MeasuredContainer\";\nimport Notices from \"./Notices\";\nimport PublicReferences from \"./PublicReferences\";\nimport References from \"./References\";\nimport RevisionViewer from \"./RevisionViewer\";\n\nconst AUTOSAVE_DELAY = 3000;\n\ntype Params = {\n  documentSlug: string;\n  revisionId?: string;\n  shareId?: string;\n};\n\ntype LocationState = {\n  title?: string;\n  restore?: boolean;\n  revisionId?: string;\n  sidebarContext?: SidebarContextType;\n};\n\ntype Props = WithTranslation &\n  RootStore &\n  RouteComponentProps<Params, StaticContext, LocationState> & {\n    sharedTree?: NavigationNode;\n    abilities: Record<string, boolean>;\n    document: Document;\n    revision?: Revision;\n    readOnly: boolean;\n    shareId?: string;\n    tocPosition?: TOCPosition | false;\n    onCreateLink?: (\n      params: Properties<Document>,\n      nested?: boolean\n    ) => Promise<string>;\n  };\n\n@observer\nclass DocumentScene extends React.Component<Props> {\n  @observable\n  editor = React.createRef<TEditor>();\n\n  @observable\n  isUploading = false;\n\n  @observable\n  isSaving = false;\n\n  @observable\n  isPublishing = false;\n\n  @observable\n  isEditorDirty = false;\n\n  @observable\n  isEmpty = true;\n\n  @observable\n  title: string = this.props.document.title;\n\n  componentDidMount() {\n    this.updateIsDirty();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.readOnly && !this.props.readOnly) {\n      this.updateIsDirty();\n    }\n  }\n\n  componentWillUnmount() {\n    if (\n      this.isEmpty &&\n      this.props.document.createdBy?.id === this.props.auth.user?.id &&\n      this.props.document.isDraft &&\n      this.props.document.isActive &&\n      this.props.document.hasEmptyTitle &&\n      this.props.document.isPersistedOnce\n    ) {\n      void this.props.document.delete();\n    } else if (this.props.document.isDirty()) {\n      void this.props.document.save(undefined, {\n        autosave: true,\n      });\n    }\n  }\n\n  replaceDocument = (template: Document | Revision) => {\n    const editorRef = this.editor.current;\n\n    if (!editorRef) {\n      return;\n    }\n\n    const { view, schema } = editorRef;\n    const doc = Node.fromJSON(\n      schema,\n      ProsemirrorHelper.replaceTemplateVariables(\n        template.data,\n        this.props.auth.user!\n      )\n    );\n\n    if (doc) {\n      view.dispatch(\n        view.state.tr\n          .setSelection(new AllSelection(view.state.doc))\n          .replaceSelectionWith(doc)\n      );\n    }\n\n    this.isEditorDirty = true;\n\n    if (template instanceof Document) {\n      this.props.document.templateId = template.id;\n      this.props.document.fullWidth = template.fullWidth;\n    }\n\n    if (!this.title) {\n      const title = TextHelper.replaceTemplateVariables(\n        template.title,\n        this.props.auth.user!\n      );\n      this.title = title;\n      this.props.document.title = title;\n    }\n    if (template.icon) {\n      this.props.document.icon = template.icon;\n    }\n    if (template.color) {\n      this.props.document.color = template.color;\n    }\n\n    this.props.document.data = cloneDeep(template.data);\n    this.updateIsDirty();\n\n    return this.onSave({\n      autosave: true,\n      publish: false,\n      done: false,\n    });\n  };\n\n  onSynced = async () => {\n    const { history, location, t } = this.props;\n    const restore = location.state?.restore;\n    const revisionId = location.state?.revisionId;\n    const editorRef = this.editor.current;\n\n    if (!editorRef || !restore) {\n      return;\n    }\n\n    const response = await client.post(\"/revisions.info\", {\n      id: revisionId,\n    });\n\n    if (response) {\n      await this.replaceDocument(response.data);\n      toast.success(t(\"Document restored\"));\n      history.replace(this.props.document.url, history.location.state);\n    }\n  };\n\n  onUndoRedo = (event: KeyboardEvent) => {\n    if (isModKey(event)) {\n      event.preventDefault();\n\n      if (event.shiftKey) {\n        if (!this.props.readOnly) {\n          this.editor.current?.commands.redo();\n        }\n      } else {\n        if (!this.props.readOnly) {\n          this.editor.current?.commands.undo();\n        }\n      }\n    }\n  };\n\n  onMove = (ev: React.MouseEvent | KeyboardEvent) => {\n    ev.preventDefault();\n    const { document, dialogs, t, abilities } = this.props;\n    if (abilities.move) {\n      dialogs.openModal({\n        title: t(\"Move document\"),\n        content: <DocumentMove document={document} />,\n      });\n    }\n  };\n\n  goToEdit = (ev: KeyboardEvent) => {\n    if (this.props.readOnly) {\n      ev.preventDefault();\n      const { document, abilities } = this.props;\n\n      if (abilities.update) {\n        this.props.history.push({\n          pathname: documentEditPath(document),\n          state: { sidebarContext: this.props.location.state?.sidebarContext },\n        });\n      }\n    } else if (this.editor.current?.isBlurred) {\n      ev.preventDefault();\n      this.editor.current?.focus();\n    }\n  };\n\n  goToHistory = (ev: KeyboardEvent) => {\n    if (!this.props.readOnly) {\n      return;\n    }\n    if (ev.ctrlKey) {\n      return;\n    }\n    ev.preventDefault();\n    const { document, location } = this.props;\n\n    if (location.pathname.endsWith(\"history\")) {\n      this.props.history.push({\n        pathname: document.url,\n        state: { sidebarContext: this.props.location.state?.sidebarContext },\n      });\n    } else {\n      this.props.history.push({\n        pathname: documentHistoryPath(document),\n        state: { sidebarContext: this.props.location.state?.sidebarContext },\n      });\n    }\n  };\n\n  onPublish = (ev: React.MouseEvent | KeyboardEvent) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    const { document, dialogs, t } = this.props;\n    if (document.publishedAt) {\n      return;\n    }\n\n    if (document?.collectionId) {\n      void this.onSave({\n        publish: true,\n        done: true,\n      });\n    } else {\n      dialogs.openModal({\n        title: t(\"Publish document\"),\n        content: <DocumentPublish document={document} />,\n      });\n    }\n  };\n\n  onSave = async (\n    options: {\n      done?: boolean;\n      publish?: boolean;\n      autosave?: boolean;\n    } = {}\n  ) => {\n    const { document } = this.props;\n    // prevent saves when we are already saving\n    if (document.isSaving) {\n      return;\n    }\n\n    // get the latest version of the editor text value\n    const doc = this.editor.current?.view.state.doc;\n    if (!doc) {\n      return;\n    }\n\n    // prevent save before anything has been written (single hash is empty doc)\n    if (ProsemirrorHelper.isEmpty(doc) && document.title.trim() === \"\") {\n      return;\n    }\n\n    document.data = doc.toJSON();\n    document.tasks = ProsemirrorHelper.getTasksSummary(doc);\n\n    // prevent autosave if nothing has changed\n    if (options.autosave && !this.isEditorDirty && !document.isDirty()) {\n      return;\n    }\n\n    this.isSaving = true;\n    this.isPublishing = !!options.publish;\n\n    try {\n      const savedDocument = await document.save(undefined, options);\n      this.isEditorDirty = false;\n\n      if (options.done) {\n        this.props.history.push({\n          pathname: savedDocument.url,\n          state: { sidebarContext: this.props.location.state?.sidebarContext },\n        });\n        this.props.ui.setActiveDocument(savedDocument);\n      } else if (document.isNew) {\n        this.props.history.push({\n          pathname: documentEditPath(savedDocument),\n          state: { sidebarContext: this.props.location.state?.sidebarContext },\n        });\n        this.props.ui.setActiveDocument(savedDocument);\n      }\n    } catch (err) {\n      toast.error(err.message);\n    } finally {\n      this.isSaving = false;\n      this.isPublishing = false;\n    }\n  };\n\n  autosave = debounce(\n    () =>\n      this.onSave({\n        done: false,\n        autosave: true,\n      }),\n    AUTOSAVE_DELAY\n  );\n\n  updateIsDirty = action(() => {\n    const { document } = this.props;\n    const doc = this.editor.current?.view.state.doc;\n\n    this.isEditorDirty = !isEqual(doc?.toJSON(), document.data);\n    this.isEmpty = (!doc || ProsemirrorHelper.isEmpty(doc)) && !this.title;\n  });\n\n  updateIsDirtyDebounced = debounce(this.updateIsDirty, 500);\n\n  onFileUploadStart = action(() => {\n    this.isUploading = true;\n  });\n\n  onFileUploadStop = action(() => {\n    this.isUploading = false;\n  });\n\n  handleChangeTitle = action((value: string) => {\n    this.title = value;\n    this.props.document.title = value;\n    this.updateIsDirty();\n    void this.autosave();\n  });\n\n  handleChangeIcon = action((icon: string | null, color: string | null) => {\n    this.props.document.icon = icon;\n    this.props.document.color = color;\n    void this.onSave();\n  });\n\n  goBack = () => {\n    if (!this.props.readOnly) {\n      this.props.history.push({\n        pathname: this.props.document.url,\n        state: { sidebarContext: this.props.location.state?.sidebarContext },\n      });\n    }\n  };\n\n  render() {\n    const {\n      document,\n      revision,\n      readOnly,\n      abilities,\n      auth,\n      ui,\n      shareId,\n      tocPosition,\n      t,\n    } = this.props;\n    const { team, user } = auth;\n    const isShare = !!shareId;\n    const embedsDisabled =\n      (team && team.documentEmbeds === false) || document.embedsDisabled;\n\n    const tocPos =\n      tocPosition ??\n      ((team?.getPreference(TeamPreference.TocPosition) as TOCPosition) ||\n        TOCPosition.Left);\n    const showContents =\n      tocPos &&\n      (isShare\n        ? ui.tocVisible !== false\n        : !document.isTemplate && ui.tocVisible === true);\n    const multiplayerEditor =\n      !document.isArchived && !document.isDeleted && !revision && !isShare;\n\n    const canonicalUrl = shareId\n      ? this.props.match.url\n      : updateDocumentPath(this.props.match.url, document);\n\n    const hasEmojiInTitle = determineIconType(document.icon) === IconType.Emoji;\n    const title = hasEmojiInTitle\n      ? document.titleWithDefault.replace(document.icon!, \"\")\n      : document.titleWithDefault;\n    const favicon = hasEmojiInTitle ? emojiToUrl(document.icon!) : undefined;\n\n    return (\n      <ErrorBoundary showTitle>\n        {this.props.location.pathname !== canonicalUrl && (\n          <Redirect\n            to={{\n              pathname: canonicalUrl,\n              state: this.props.location.state,\n              hash: this.props.location.hash,\n            }}\n          />\n        )}\n        <RegisterKeyDown trigger=\"m\" handler={this.onMove} />\n        <RegisterKeyDown trigger=\"z\" handler={this.onUndoRedo} />\n        <RegisterKeyDown trigger=\"e\" handler={this.goToEdit} />\n        <RegisterKeyDown trigger=\"Escape\" handler={this.goBack} />\n        <RegisterKeyDown trigger=\"h\" handler={this.goToHistory} />\n        <RegisterKeyDown\n          trigger=\"p\"\n          options={{\n            allowInInput: true,\n          }}\n          handler={(event) => {\n            if (isModKey(event) && event.shiftKey) {\n              this.onPublish(event);\n            }\n          }}\n        />\n        <MeasuredContainer\n          as={Background}\n          name=\"container\"\n          key={revision ? revision.id : document.id}\n          column\n          auto\n        >\n          <PageTitle title={title} favicon={favicon} />\n          {(this.isUploading || this.isSaving) && <LoadingIndicator />}\n          <Container column>\n            {!readOnly && (\n              <Prompt\n                when={this.isUploading && !this.isEditorDirty}\n                message={t(\n                  `Images are still uploading.\\nAre you sure you want to discard them?`\n                )}\n              />\n            )}\n            <Header\n              document={document}\n              revision={revision}\n              shareId={shareId}\n              isDraft={document.isDraft}\n              isEditing={!readOnly && !!user?.separateEditMode}\n              isSaving={this.isSaving}\n              isPublishing={this.isPublishing}\n              publishingIsDisabled={\n                document.isSaving || this.isPublishing || this.isEmpty\n              }\n              savingIsDisabled={document.isSaving || this.isEmpty}\n              sharedTree={this.props.sharedTree}\n              onSelectTemplate={this.replaceDocument}\n              onSave={this.onSave}\n            />\n            <Main fullWidth={document.fullWidth} tocPosition={tocPos}>\n              <React.Suspense\n                fallback={\n                  <EditorContainer\n                    docFullWidth={document.fullWidth}\n                    showContents={showContents}\n                    tocPosition={tocPos}\n                  >\n                    <PlaceholderDocument />\n                  </EditorContainer>\n                }\n              >\n                {revision ? (\n                  <RevisionContainer docFullWidth={document.fullWidth}>\n                    <RevisionViewer\n                      document={document}\n                      revision={revision}\n                      id={revision.id}\n                    />\n                  </RevisionContainer>\n                ) : (\n                  <>\n                    <MeasuredContainer\n                      name=\"document\"\n                      as={EditorContainer}\n                      docFullWidth={document.fullWidth}\n                      showContents={showContents}\n                      tocPosition={tocPos}\n                    >\n                      <Notices document={document} readOnly={readOnly} />\n\n                      {showContents && (\n                        <PrintContentsContainer>\n                          <Contents />\n                        </PrintContentsContainer>\n                      )}\n                      <Editor\n                        id={document.id}\n                        key={embedsDisabled ? \"disabled\" : \"enabled\"}\n                        ref={this.editor}\n                        multiplayer={multiplayerEditor}\n                        shareId={shareId}\n                        isDraft={document.isDraft}\n                        template={document.isTemplate}\n                        document={document}\n                        value={readOnly ? document.data : undefined}\n                        defaultValue={document.data}\n                        embedsDisabled={embedsDisabled}\n                        onSynced={this.onSynced}\n                        onFileUploadStart={this.onFileUploadStart}\n                        onFileUploadStop={this.onFileUploadStop}\n                        onCreateLink={this.props.onCreateLink}\n                        onChangeTitle={this.handleChangeTitle}\n                        onChangeIcon={this.handleChangeIcon}\n                        onSave={this.onSave}\n                        onPublish={this.onPublish}\n                        onCancel={this.goBack}\n                        readOnly={readOnly}\n                        canUpdate={abilities.update}\n                        canComment={abilities.comment}\n                        autoFocus={document.createdAt === document.updatedAt}\n                      >\n                        {shareId ? (\n                          <ReferencesWrapper>\n                            <PublicReferences\n                              shareId={shareId}\n                              documentId={document.id}\n                              sharedTree={this.props.sharedTree}\n                            />\n                          </ReferencesWrapper>\n                        ) : !revision ? (\n                          <ReferencesWrapper>\n                            <References document={document} />\n                          </ReferencesWrapper>\n                        ) : null}\n                      </Editor>\n                    </MeasuredContainer>\n                    {showContents && (\n                      <ContentsContainer\n                        docFullWidth={document.fullWidth}\n                        position={tocPos}\n                      >\n                        <Contents />\n                      </ContentsContainer>\n                    )}\n                  </>\n                )}\n              </React.Suspense>\n            </Main>\n            {isShare &&\n              !parseDomain(window.location.origin).custom &&\n              !auth.user && (\n                <Branding href=\"//www.getoutline.com?ref=sharelink\" />\n              )}\n          </Container>\n          {!isShare && (\n            <Footer>\n              <KeyboardShortcutsButton />\n              <ConnectionStatus />\n            </Footer>\n          )}\n        </MeasuredContainer>\n      </ErrorBoundary>\n    );\n  }\n}\n\ntype MainProps = {\n  fullWidth: boolean;\n  tocPosition: TOCPosition | false;\n};\n\nconst Main = styled.div<MainProps>`\n  margin-top: 4px;\n\n  ${breakpoint(\"tablet\")`\n    display: grid;\n    grid-template-columns: ${({ fullWidth, tocPosition }: MainProps) =>\n      fullWidth\n        ? tocPosition === TOCPosition.Left\n          ? `${EditorStyleHelper.tocWidth}px minmax(0, 1fr)`\n          : `minmax(0, 1fr) ${EditorStyleHelper.tocWidth}px`\n        : `1fr minmax(0, ${`calc(46em + 88px)`}) 1fr`};\n  `};\n\n  ${breakpoint(\"desktopLarge\")`\n    grid-template-columns: ${({ fullWidth, tocPosition }: MainProps) =>\n      fullWidth\n        ? tocPosition === TOCPosition.Left\n          ? `${EditorStyleHelper.tocWidth}px minmax(0, 1fr)`\n          : `minmax(0, 1fr) ${EditorStyleHelper.tocWidth}px`\n        : `1fr minmax(0, ${`calc(52em + 88px)`}) 1fr`};\n  `};\n`;\n\ntype ContentsContainerProps = {\n  docFullWidth: boolean;\n  position: TOCPosition | false;\n};\n\nconst ContentsContainer = styled.div<ContentsContainerProps>`\n  ${breakpoint(\"tablet\")`\n    margin-top: calc(44px + 6vh);\n\n    grid-row: 1;\n    grid-column: ${({ docFullWidth, position }: ContentsContainerProps) =>\n      position === TOCPosition.Left ? 1 : docFullWidth ? 2 : 3};\n    justify-self: ${({ position }: ContentsContainerProps) =>\n      position === TOCPosition.Left ? \"end\" : \"start\"};\n  `};\n\n  @media print {\n    display: none;\n  }\n`;\n\nconst PrintContentsContainer = styled.div`\n  display: none;\n  margin: 0 -12px;\n\n  @media print {\n    display: block;\n  }\n`;\n\ntype EditorContainerProps = {\n  docFullWidth: boolean;\n  showContents: boolean;\n  tocPosition: TOCPosition | false;\n};\n\nconst EditorContainer = styled.div<EditorContainerProps>`\n  // Adds space to the gutter to make room for icon & heading annotations\n  padding: 0 44px;\n\n  ${breakpoint(\"tablet\")`\n    grid-row: 1;\n\n    // Decides the editor column position & span\n    grid-column: ${({\n      docFullWidth,\n      showContents,\n      tocPosition,\n    }: EditorContainerProps) =>\n      docFullWidth\n        ? showContents\n          ? tocPosition === TOCPosition.Left\n            ? 2\n            : 1\n          : \"1 / -1\"\n        : 2};\n  `};\n`;\n\ntype RevisionContainerProps = {\n  docFullWidth: boolean;\n};\n\nconst RevisionContainer = styled.div<RevisionContainerProps>`\n  // Adds space to the gutter to make room for icon\n  padding: 0 40px;\n\n  ${breakpoint(\"tablet\")`\n    grid-row: 1;\n    grid-column: ${({ docFullWidth }: RevisionContainerProps) =>\n      docFullWidth ? \"1 / -1\" : 2};\n  `}\n`;\n\nconst Footer = styled.div`\n  position: absolute;\n  width: 100%;\n  text-align: right;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Background = styled(Container)`\n  position: relative;\n  background: ${s(\"background\")};\n`;\n\nconst ReferencesWrapper = styled.div`\n  margin-top: 16px;\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default withTranslation()(withStores(withRouter(DocumentScene)));\n","export function emojiToUrl(text: string) {\n  return `data:image/svg+xml;data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${text}</text></svg>`;\n}\n","import { Location } from \"history\";\nimport * as React from \"react\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport PageTitle from \"~/components/PageTitle\";\nimport PlaceholderDocument from \"~/components/PlaceholderDocument\";\nimport Container from \"./Container\";\n\ntype Props = {\n  location: Location<{ title?: string }>;\n};\n\nexport default function Loading({ location }: Props) {\n  return (\n    <Container column auto>\n      {location.state?.title && <PageTitle title={location.state.title} />}\n      <CenteredContent>\n        <PlaceholderDocument />\n      </CenteredContent>\n    </Container>\n  );\n}\n"],"file":"assets/Loading.9UhuAPJB.js"}