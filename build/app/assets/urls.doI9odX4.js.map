{"version":3,"file":"urls.doI9odX4.js","sources":["../../../app/components/ButtonLarge.ts","../../../app/scenes/Login/urls.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport Button, { Inner } from \"./Button\";\n\nconst ButtonLarge = styled(Button)`\n  height: 40px;\n\n  ${Inner} {\n    padding: 4px 16px;\n  }\n`;\n\nexport default ButtonLarge;\n","import { Client } from \"@shared/types\";\nimport { parseDomain } from \"@shared/utils/domains\";\nimport env from \"~/env\";\nimport Desktop from \"~/utils/Desktop\";\n\n/**\n * If we're on a custom domain or a subdomain then the auth must point to the\n * apex (env.URL) for authentication so that the state cookie can be set and read.\n * We pass the host into the auth URL so that the server can redirect on error\n * and keep the user on the same page.\n *\n * @param authUrl The URL to redirect to after authentication\n */\nexport function getRedirectUrl(authUrl: string) {\n  const { custom, teamSubdomain, host } = parseDomain(window.location.origin);\n  const url = new URL(env.URL);\n  url.pathname = authUrl;\n\n  if (custom || teamSubdomain) {\n    url.searchParams.set(\"host\", host);\n  }\n  if (Desktop.isElectron()) {\n    url.searchParams.set(\"client\", Client.Desktop);\n  }\n\n  return url.toString();\n}\n\n/**\n * Redirect to a subdomain, adding it to the custom hosts list on desktop first.\n *\n * @param subdomain The subdomain to navigate to\n */\nexport async function navigateToSubdomain(subdomain: string) {\n  const normalizedSubdomain = subdomain\n    .toLowerCase()\n    .trim()\n    .replace(/^https?:\\/\\//, \"\");\n  const host = `https://${normalizedSubdomain}.getoutline.com`;\n  await Desktop.bridge?.addCustomHost(host);\n  window.location.href = host;\n}\n"],"names":["ButtonLarge","styled","Button","withConfig","componentId","Inner","getRedirectUrl","authUrl","custom","teamSubdomain","host","parseDomain","window","location","origin","url","URL","env","pathname","searchParams","set","Desktop","isElectron","Client","toString","async","navigateToSubdomain","subdomain","normalizedSubdomain","toLowerCase","trim","replace","bridge","addCustomHost","href"],"mappings":"qFAGA,MAAMA,EAAcC,EAAOC,GAAOC,WAAA,CAAAC,YAAA,eAAdH,CAAc,CAAA,eAAA,uBAG9BI,GCOG,SAASC,eAAeC,GACvB,MAAAC,OAAEA,EAAAA,cAAQC,EAAAA,KAAeC,GAASC,EAAYC,OAAOC,SAASC,QAC9DC,EAAM,IAAIC,IAAIC,EAAID,KAUxB,OATAD,EAAIG,SAAWX,GAEXC,GAAUC,IACRU,EAAAA,aAAaC,IAAI,OAAQV,GAE3BW,EAAQC,cACVP,EAAII,aAAaC,IAAI,SAAUG,EAAOF,SAGjCN,EAAIS,UACb,CAOAC,eAAsBC,oBAAoBC,GAClCC,MAIAlB,EAAO,WAJeiB,EACzBE,cACAC,OACAC,QAAQ,eAAgB,2BAErBV,EAAQW,QAAQC,cAAcvB,IACpCE,OAAOC,SAASqB,KAAOxB,CACzB"}