{"version":3,"file":"Highlight.XZk1WX3z.js","sources":["../../../node_modules/string-replace-to-array/string-replace-to-array.js","../../../app/components/Highlight.tsx"],"sourcesContent":["// Inspiration: https://github.com/facebook/react/issues/3386\n\nfunction replace (string, regexpOrSubstr, newValueOrFn, globalOffset) {\n\tif (typeof string !== 'string') throw new Error('First param must be a string')\n\tif (typeof regexpOrSubstr !== 'string' && !(regexpOrSubstr instanceof RegExp)) throw new Error('Second param must be a string pattern or a regular expression')\n\n\tvar fn = (typeof regexpOrSubstr === 'string') ? replaceUsingString : replaceUsingRegexp\n\n\treturn fn(string, regexpOrSubstr, newValueOrFn, globalOffset)\n}\n\nfunction replaceUsingString (string, patternString, newValueOrFn, globalOffset) {\n\tvar index = string.indexOf(patternString)\n\n\tif (index >= 0) {\n\t\tvar arr = []\n\t\tvar endIndex = index + patternString.length\n\n\t\tif (index > 0) {\n\t\t\tarr.push(string.substring(0, index))\n\t\t}\n\n\t\tarr.push(\n\t\t\t(typeof newValueOrFn === 'function') ?\n\t\t\t\tnewValueOrFn(\n\t\t\t\t\tstring.substring(index, endIndex),\n\t\t\t\t\tindex + globalOffset,\n\t\t\t\t\tstring\n\t\t\t\t) :\n\t\t\t\tnewValueOrFn\n\t\t)\n\n\t\tif (endIndex < string.length) {\n\t\t\tarr.push(string.substring(endIndex))\n\t\t}\n\n\t\treturn arr\n\t} else {\n\t\treturn [string]\n\t}\n}\n\nfunction replaceUsingRegexp (string, regexp, newValueOrFn, globalOffset) {\n\tvar output = []\n\n\tvar replacerIsFn = (typeof newValueOrFn === 'function')\n\n\tvar storedLastIndex = regexp.lastIndex\n\tregexp.lastIndex = 0\n\n\tvar result\n\tvar lastIndex = 0\n\twhile (result = regexp.exec(string)) {\n\t\tvar index = result.index\n\n\t\tif (result[0] === '') {\n\t\t\t// When the regexp is an empty string\n\t\t\t// we still want to advance our cursor to the next item.\n\t\t\t// This is the behavior of String.replace.\n\t\t\tregexp.lastIndex++\n\t\t}\n\n\t\tif (index !== lastIndex) {\n\t\t\toutput.push(string.substring(lastIndex, index))\n\t\t}\n\n\t\tvar match = result[0]\n\t\tlastIndex = index + match.length\n\t\t\n\t\tvar out = replacerIsFn ?\n\t\t\tnewValueOrFn.apply(this, result.concat(index + globalOffset, result.input)) :\n\t\t\tnewValueOrFn\n\t\toutput.push(out)\n\n\t\tif (!regexp.global) {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (lastIndex < string.length) {\n\t\toutput.push(string.substring(lastIndex))\n\t}\n\n\tregexp.lastIndex = storedLastIndex\n\treturn output\n}\n\nmodule.exports = function stringReplaceToArray (stringOrArray, regexpOrSubstr, newSubStrOrFn) {\n\tif (typeof stringOrArray === 'string') {\n\t\treturn replace(stringOrArray, regexpOrSubstr, newSubStrOrFn, 0)\n\t} else if (!Array.isArray(stringOrArray) || !stringOrArray[0]) {\n\t\tthrow new TypeError('First argument must be an array or non-empty string')\n\t} else {\n\t\tvar len = stringOrArray.length\n\t\tvar output = []\n\t\tvar globalOffset = 0\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\tvar arrayItem = stringOrArray[i]\n\t\t\tif (typeof arrayItem === 'string') {\n\t\t\t\toutput.push.apply(output, replace(arrayItem, regexpOrSubstr, newSubStrOrFn, globalOffset))\n\t\t\t\tglobalOffset += arrayItem.length\n\t\t\t} else {\n\t\t\t\toutput.push(arrayItem)\n\t\t\t}\n\t\t}\n\t\treturn output\n\t}\n}","import escapeRegExp from \"lodash/escapeRegExp\";\nimport * as React from \"react\";\nimport replace from \"string-replace-to-array\";\nimport styled from \"styled-components\";\nimport { s } from \"@shared/styles\";\n\ntype Props = React.HTMLAttributes<HTMLSpanElement> & {\n  highlight: (string | null | undefined) | RegExp;\n  processResult?: (tag: string) => string;\n  text: string | undefined;\n  caseSensitive?: boolean;\n};\n\nfunction Highlight({\n  highlight,\n  processResult,\n  caseSensitive,\n  text = \"\",\n  ...rest\n}: Props) {\n  let regex;\n  let index = 0;\n\n  if (highlight instanceof RegExp) {\n    regex = highlight;\n  } else {\n    regex = new RegExp(\n      escapeRegExp(highlight || \"\"),\n      caseSensitive ? \"g\" : \"gi\"\n    );\n  }\n\n  return (\n    <span {...rest}>\n      {highlight\n        ? replace(text, regex, (tag: string) => (\n            <Mark key={index++}>\n              {processResult ? processResult(tag) : tag}\n            </Mark>\n          ))\n        : text}\n    </span>\n  );\n}\n\nexport const Mark = styled.mark`\n  color: ${s(\"text\")};\n  background: transparent;\n  font-weight: 600;\n`;\n\nexport default Highlight;\n"],"names":["replace","string","regexpOrSubstr","newValueOrFn","globalOffset","Error","RegExp","replaceUsingString","replaceUsingRegexp","patternString","index","indexOf","arr","endIndex","length","push","substring","regexp","result","output","replacerIsFn","storedLastIndex","lastIndex","exec","out","apply","this","concat","input","global","stringReplaceToArray","stringOrArray","newSubStrOrFn","Array","isArray","len","i","arrayItem","TypeError","Highlight","highlight","processResult","caseSensitive","text","rest","regex","escapeRegExp","jsx","tag","Mark","styled","mark","withConfig","componentId","s"],"mappings":"iEAEA,SAASA,QAASC,EAAQC,EAAgBC,EAAcC,GACvD,GAAsB,iBAAXH,EAA2B,MAAA,IAAII,MAAM,gCAC5C,GAA0B,iBAAnBH,KAAiCA,aAA0BI,QAAS,MAAM,IAAID,MAAM,iEAI/F,OAFoC,iBAAnBH,EAA+BK,mBAAqBC,oBAE3DP,EAAQC,EAAgBC,EAAcC,EACjD,CAEA,SAASG,mBAAoBN,EAAQQ,EAAeN,EAAcC,GAC7D,IAAAM,EAAQT,EAAOU,QAAQF,GAE3B,GAAIC,GAAS,EAAG,CACf,IAAIE,EAAM,GACNC,EAAWH,EAAQD,EAAcK,OAoB9B,OAlBHJ,EAAQ,GACXE,EAAIG,KAAKd,EAAOe,UAAU,EAAGN,IAG1BE,EAAAG,KACsB,mBAAjBZ,EACPA,EACCF,EAAOe,UAAUN,EAAOG,GACxBH,EAAQN,EACRH,GAEDE,GAGEU,EAAWZ,EAAOa,QACrBF,EAAIG,KAAKd,EAAOe,UAAUH,IAGpBD,CACT,CACE,MAAO,CAACX,EAEV,CAEA,SAASO,mBAAoBP,EAAQgB,EAAQd,EAAcC,GAC1D,IAOIc,EAPAC,EAAS,GAETC,EAAwC,mBAAjBjB,EAEvBkB,EAAkBJ,EAAOK,UAC7BL,EAAOK,UAAY,EAInB,IADA,IAAIA,EAAY,EACTJ,EAASD,EAAOM,KAAKtB,IAAS,CACpC,IAAIS,EAAQQ,EAAOR,MAED,KAAdQ,EAAO,IAIHD,EAAAK,YAGJZ,IAAUY,GACbH,EAAOJ,KAAKd,EAAOe,UAAUM,EAAWZ,IAIzCY,EAAYZ,EADAQ,EAAO,GACOJ,OAE1B,IAAIU,EAAMJ,EACTjB,EAAasB,MAAMC,KAAMR,EAAOS,OAAOjB,EAAQN,EAAcc,EAAOU,QACpEzB,EAGG,GAFJgB,EAAOJ,KAAKS,IAEPP,EAAOY,OACX,KAED,CAOM,OALHP,EAAYrB,EAAOa,QACtBK,EAAOJ,KAAKd,EAAOe,UAAUM,IAG9BL,EAAOK,UAAYD,EACZF,CACR,YAEiB,SAASW,sBAAsBC,EAAe7B,EAAgB8B,GAC1E,GAAyB,iBAAlBD,EACV,OAAO/B,QAAQ+B,EAAe7B,EAAgB8B,EAAe,GAC/D,GAAaC,MAAMC,QAAQH,IAAmBA,EAAc,GAEpD,CAIN,IAHA,IAAII,EAAMJ,EAAcjB,OACpBK,EAAS,GACTf,EAAe,EACVgC,EAAI,EAAGA,EAAID,IAAOC,EAAG,CACzB,IAAAC,EAAYN,EAAcK,GACL,iBAAdC,GACHlB,EAAAJ,KAAKU,MAAMN,EAAQnB,QAAQqC,EAAWnC,EAAgB8B,EAAe5B,IAC5EA,GAAgBiC,EAAUvB,QAE1BK,EAAOJ,KAAKsB,EAEb,CACM,OAAAlB,CACP,CAfM,MAAA,IAAImB,UAAU,sDAgBtB,IC9FA,SAASC,WAAUC,UACjBA,EAAAA,cACAC,EAAAA,cACAC,EAAAA,KACAC,EAAO,MACJC,IAECC,IAAAA,EACAnC,EAAQ,EAYV,OATQ8B,EADNA,aAAqBlC,OACfkC,EAEA,IAAIlC,OACVwC,EAAaN,GAAa,IAC1BE,EAAgB,IAAM,MAKxBK,EAAC,WAASH,EACPJ,WACGxC,EAAQ2C,EAAME,GAAQG,KACnBC,EACER,CAAAA,SAAAA,EAAgBA,EAAcO,GAAOA,GAD7BtC,OAIbiC,GAGV,CAEaM,MAAAA,EAAOC,EAAOC,KAAIC,WAAA,CAAAC,YAAA,gBAAXH,CAAW,CAAA,SAAA,4CACpBI,EAAE","x_google_ignoreList":[0]}