{"version":3,"file":"DateFilter.aGYKA58Z.js","sources":["../../../app/scenes/Search/components/CollectionFilter.tsx","../../../app/scenes/Search/components/DateFilter.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { CollectionIcon as SVGCollectionIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport FilterOptions from \"~/components/FilterOptions\";\nimport CollectionIcon from \"~/components/Icons/CollectionIcon\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  /** The currently selected collection ID */\n  collectionId: string | undefined;\n  /** Callback to call when a collection is selected */\n  onSelect: (key: string | undefined) => void;\n};\n\nfunction CollectionFilter(props: Props) {\n  const { t } = useTranslation();\n  const { collections } = useStores();\n  const { onSelect, collectionId } = props;\n  const options = React.useMemo(() => {\n    const collectionOptions = collections.orderedData.map((collection) => ({\n      key: collection.id,\n      label: collection.name,\n      icon: <CollectionIcon collection={collection} size={24} />,\n    }));\n    return [\n      {\n        key: \"\",\n        label: t(\"Any collection\"),\n        icon: <SVGCollectionIcon size={24} />,\n      },\n      ...collectionOptions,\n    ];\n  }, [collections.orderedData, t]);\n\n  return (\n    <FilterOptions\n      options={options}\n      selectedKeys={[collectionId]}\n      onSelect={onSelect}\n      defaultLabel={t(\"Any collection\")}\n      showFilter\n    />\n  );\n}\n\nexport default observer(CollectionFilter);\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { DateFilter as TDateFilter } from \"@shared/types\";\nimport FilterOptions from \"~/components/FilterOptions\";\n\ntype Props = {\n  /** The selected date filter */\n  dateFilter?: string | null;\n  /** Callback when a date filter is selected */\n  onSelect: (key: TDateFilter) => void;\n};\n\nconst DateFilter = ({ dateFilter, onSelect }: Props) => {\n  const { t } = useTranslation();\n  const options = React.useMemo(\n    () => [\n      {\n        key: \"\",\n        label: t(\"All time\"),\n      },\n      {\n        key: \"day\",\n        label: t(\"Past day\"),\n      },\n      {\n        key: \"week\",\n        label: t(\"Past week\"),\n      },\n      {\n        key: \"month\",\n        label: t(\"Past month\"),\n      },\n      {\n        key: \"year\",\n        label: t(\"Past year\"),\n      },\n    ],\n    [t]\n  );\n\n  return (\n    <FilterOptions\n      options={options}\n      selectedKeys={[dateFilter]}\n      onSelect={onSelect}\n      defaultLabel={t(\"Any time\")}\n    />\n  );\n};\n\nexport default DateFilter;\n"],"names":["observer","CollectionFilter","props","t","useTranslation","collections","useStores","onSelect","collectionId","options","React","collectionOptions","orderedData","map","collection","key","id","label","name","icon","jsx","CollectionIcon","size","SVGCollectionIcon","FilterOptions","selectedKeys","defaultLabel","showFilter","DateFilter","dateFilter","useMemo"],"mappings":"oKA8CA,MAAeA,EAAAA,GA/Bf,SAASC,iBAAiBC,GAClB,MAAAC,EAAEA,GAAMC,KACRC,YAAEA,GAAgBC,KAClBC,SAAEA,EAAAA,aAAUC,GAAiBN,EAC7BO,EAAUC,EAAAA,SAAc,KAC5B,MAAMC,EAAoBN,EAAYO,YAAYC,KAAqBC,IAAA,CACrEC,IAAKD,EAAWE,GAChBC,MAAOH,EAAWI,KAClBC,KAAOC,EAAAC,EAAe,CAAAP,aAAwBQ,KAAM,SAEtD,MAAO,CACL,CACEP,IAAK,GACLE,MAAOd,EAAE,kBACTgB,KAAOI,EAAAA,EAAAA,eAAkB,CAAAD,KAAM,SAE9BX,EAAiB,GAErB,CAACN,EAAYO,YAAaT,IAE7B,OACGiB,EAAAI,EAAA,CACCf,UACAgB,aAAc,CAACjB,GACfD,WACAmB,aAAcvB,EAAE,kBAChBwB,YAAU,GAGhB,IChCMC,WAAaA,EAAGC,aAAYtB,eAC1B,MAAAJ,EAAEA,GAAMC,IACRK,EAAUC,EACdoB,SAAA,IAAM,CACJ,CACEf,IAAK,GACLE,MAAOd,EAAE,aAEX,CACEY,IAAK,MACLE,MAAOd,EAAE,aAEX,CACEY,IAAK,OACLE,MAAOd,EAAE,cAEX,CACEY,IAAK,QACLE,MAAOd,EAAE,eAEX,CACEY,IAAK,OACLE,MAAOd,EAAE,gBAGb,CAACA,IAID,OAACiB,EAAAI,EACC,CAAAf,UACAgB,aAAc,CAACI,GACftB,WACAmB,aAAcvB,EAAE,aAChB"}