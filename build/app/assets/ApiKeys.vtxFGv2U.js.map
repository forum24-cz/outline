{"version":3,"file":"ApiKeys.vtxFGv2U.js","sources":["../../../app/scenes/Settings/ApiKeys.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { CodeIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport ApiKey from \"~/models/ApiKey\";\nimport { Action } from \"~/components/Actions\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport { createApiKey } from \"~/actions/definitions/apiKeys\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport ApiKeyListItem from \"./components/ApiKeyListItem\";\n\nfunction ApiKeys() {\n  const team = useCurrentTeam();\n  const { t } = useTranslation();\n  const { apiKeys } = useStores();\n  const can = usePolicy(team);\n  const context = useActionContext();\n\n  return (\n    <Scene\n      title={t(\"API\")}\n      icon={<CodeIcon />}\n      actions={\n        <>\n          {can.createApiKey && (\n            <Action>\n              <Button\n                type=\"submit\"\n                value={`${t(\"New API key\")}â€¦`}\n                action={createApiKey}\n                context={context}\n              />\n            </Action>\n          )}\n        </>\n      }\n    >\n      <Heading>{t(\"API Keys\")}</Heading>\n      <Text as=\"p\" type=\"secondary\">\n        <Trans\n          defaults=\"API keys can be used to authenticate with the API and programatically control\n          your workspace's data. For more details see the <em>developer documentation</em>.\"\n          components={{\n            em: (\n              <a\n                href=\"https://www.getoutline.com/developers\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              />\n            ),\n          }}\n        />\n      </Text>\n      <PaginatedList\n        fetch={apiKeys.fetchPage}\n        items={apiKeys.orderedData}\n        heading={<h2>{t(\"All\")}</h2>}\n        renderItem={(apiKey: ApiKey) => (\n          <ApiKeyListItem key={apiKey.id} apiKey={apiKey} />\n        )}\n      />\n    </Scene>\n  );\n}\n\nexport default observer(ApiKeys);\n"],"names":["observer","ApiKeys","team","useCurrentTeam","t","useTranslation","apiKeys","useStores","can","usePolicy","context","useActionContext","jsxs","Scene","title","icon","CodeIcon","actions","jsx","Fragment","createApiKey","Action","children","Button","type","value","action","Heading","Text","as","Trans","defaults","components","em","href","target","rel","PaginatedList","fetch","fetchPage","items","orderedData","heading","renderItem","apiKey","ApiKeyListItem","id"],"mappings":"03BAwEA,MAAeA,EAAAA,GAtDf,SAASC,UACP,MAAMC,EAAOC,KACPC,EAAEA,GAAMC,KACRC,QAAEA,GAAYC,IACdC,EAAMC,EAAUP,GAChBQ,EAAUC,IAGb,OAAAC,EAAAC,EAAA,CACCC,MAAOV,EAAE,OACTW,KAAOC,EAAAA,EAAAA,aACPC,QACEC,EAAAC,EAAA,CACGX,WAAIY,cACHF,EAACG,EACC,CAAAC,WAACC,EACC,CAAAC,KAAK,SACLC,MAAO,GAAGrB,EAAE,kBACZsB,OAAQN,EACRV,gBAOVY,SAAA,GAACK,EAAA,CAASvB,SAAEA,EAAA,cACXc,EAAAU,EAAK,CAAAC,GAAG,IAAIL,KAAK,YAChBF,SAACJ,EAAAY,EAAA,CACCC,SAAS,6KAETC,WAAY,CACVC,GACGf,EAAA,IACC,CAAAgB,KAAK,wCACLC,OAAO,SACPC,IAAI,oBAMblB,EAAAmB,GACCC,MAAOhC,EAAQiC,UACfC,MAAOlC,EAAQmC,YACfC,QAAUxB,EAAA,KAAA,CAAId,WAAE,SAChBuC,WAAaC,KACVC,EAA+B,CAAAD,UAAXA,EAAOE,QAKtC"}