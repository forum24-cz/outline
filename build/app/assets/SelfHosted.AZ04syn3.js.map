{"version":3,"file":"SelfHosted.AZ04syn3.js","sources":["../../../app/scenes/Settings/SelfHosted.tsx"],"sourcesContent":["import find from \"lodash/find\";\nimport { observer } from \"mobx-react\";\nimport { BuildingBlocksIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"sonner\";\nimport { IntegrationService, IntegrationType } from \"@shared/types\";\nimport Integration from \"~/models/Integration\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport Input from \"~/components/Input\";\nimport Scene from \"~/components/Scene\";\nimport useStores from \"~/hooks/useStores\";\nimport SettingRow from \"./components/SettingRow\";\n\ntype FormData = {\n  drawIoUrl: string;\n  gristUrl: string;\n};\n\nfunction SelfHosted() {\n  const { integrations } = useStores();\n  const { t } = useTranslation();\n\n  const integrationDiagrams = find(integrations.orderedData, {\n    type: IntegrationType.Embed,\n    service: IntegrationService.Diagrams,\n  }) as Integration<IntegrationType.Embed> | undefined;\n\n  const integrationGrist = find(integrations.orderedData, {\n    type: IntegrationType.Embed,\n    service: IntegrationService.Grist,\n  }) as Integration<IntegrationType.Embed> | undefined;\n\n  const {\n    register,\n    reset,\n    handleSubmit: formHandleSubmit,\n    formState,\n  } = useForm<FormData>({\n    mode: \"all\",\n    defaultValues: {\n      drawIoUrl: integrationDiagrams?.settings.url,\n      gristUrl: integrationGrist?.settings.url,\n    },\n  });\n\n  React.useEffect(() => {\n    void integrations.fetchPage({\n      type: IntegrationType.Embed,\n    });\n  }, [integrations]);\n\n  React.useEffect(() => {\n    reset({\n      drawIoUrl: integrationDiagrams?.settings.url,\n      gristUrl: integrationGrist?.settings.url,\n    });\n  }, [integrationDiagrams, integrationGrist, reset]);\n\n  const handleSubmit = React.useCallback(\n    async (data: FormData) => {\n      try {\n        if (data.drawIoUrl) {\n          await integrations.save({\n            id: integrationDiagrams?.id,\n            type: IntegrationType.Embed,\n            service: IntegrationService.Diagrams,\n            settings: {\n              url: data.drawIoUrl,\n            },\n          });\n        } else {\n          await integrationDiagrams?.delete();\n        }\n\n        if (data.gristUrl) {\n          await integrations.save({\n            id: integrationGrist?.id,\n            type: IntegrationType.Embed,\n            service: IntegrationService.Grist,\n            settings: {\n              url: data.gristUrl,\n            },\n          });\n        } else {\n          await integrationGrist?.delete();\n        }\n\n        toast.success(t(\"Settings saved\"));\n      } catch (err) {\n        toast.error(err.message);\n      }\n    },\n    [integrations, integrationDiagrams, integrationGrist, t]\n  );\n\n  return (\n    <Scene title={t(\"Self Hosted\")} icon={<BuildingBlocksIcon />}>\n      <Heading>{t(\"Self Hosted\")}</Heading>\n\n      <form onSubmit={formHandleSubmit(handleSubmit)}>\n        <SettingRow\n          label={t(\"Draw.io deployment\")}\n          name=\"drawIoUrl\"\n          description={t(\n            \"Add your self-hosted draw.io installation url here to enable automatic embedding of diagrams within documents.\"\n          )}\n          border={false}\n        >\n          <Input\n            placeholder=\"https://app.diagrams.net/\"\n            pattern=\"https?://.*\"\n            {...register(\"drawIoUrl\")}\n          />\n        </SettingRow>\n\n        <SettingRow\n          label={t(\"Grist deployment\")}\n          name=\"gristUrl\"\n          description={t(\"Add your self-hosted grist installation URL here.\")}\n          border={false}\n        >\n          <Input\n            placeholder=\"https://docs.getgrist.com/\"\n            pattern=\"https?://.*\"\n            {...register(\"gristUrl\")}\n          />\n        </SettingRow>\n\n        <Button type=\"submit\" disabled={formState.isSubmitting}>\n          {formState.isSubmitting ? `${t(\"Saving\")}â€¦` : t(\"Save\")}\n        </Button>\n      </form>\n    </Scene>\n  );\n}\n\nexport default observer(SelfHosted);\n"],"names":["observer","SelfHosted","integrations","useStores","t","useTranslation","integrationDiagrams","find","orderedData","type","IntegrationType","Embed","service","IntegrationService","Diagrams","integrationGrist","Grist","register","reset","handleSubmit","formHandleSubmit","formState","useForm","mode","defaultValues","drawIoUrl","settings","url","gristUrl","React","fetchPage","async","data","save","id","delete","success","err","error","message","jsxs","Scene","title","icon","jsx","BuildingBlocksIcon","children","Heading","onSubmit","SettingRow","label","name","description","border","Input","placeholder","pattern","Button","disabled","isSubmitting"],"mappings":"uQA2IA,MAAeA,EAAAA,GAtHf,SAASC,aACD,MAAAC,aAAEA,GAAiBC,KACnBC,EAAEA,GAAMC,IAERC,EAAsBC,EAAKL,EAAaM,YAAa,CACzDC,KAAMC,EAAgBC,MACtBC,QAASC,EAAmBC,WAGxBC,EAAmBR,EAAKL,EAAaM,YAAa,CACtDC,KAAMC,EAAgBC,MACtBC,QAASC,EAAmBG,SAGxBC,SACJA,EAAAA,MACAC,EACAC,aAAcC,EAAAA,UACdC,GACEC,EAAkB,CACpBC,KAAM,MACNC,cAAe,CACbC,UAAWnB,GAAqBoB,SAASC,IACzCC,SAAUb,GAAkBW,SAASC,OAIzCE,EAAAA,WAAgB,KACT3B,EAAa4B,UAAU,CAC1BrB,KAAMC,EAAgBC,OACvB,GACA,CAACT,IAEJ2B,EAAAA,WAAgB,KACRX,EAAA,CACJO,UAAWnB,GAAqBoB,SAASC,IACzCC,SAAUb,GAAkBW,SAASC,KACtC,GACA,CAACrB,EAAqBS,EAAkBG,IAE3C,MAAMC,EAAeU,eACnBE,MAAOC,IACD,IACEA,EAAKP,gBACDvB,EAAa+B,KAAK,CACtBC,GAAI5B,GAAqB4B,GACzBzB,KAAMC,EAAgBC,MACtBC,QAASC,EAAmBC,SAC5BY,SAAU,CACRC,IAAKK,EAAKP,mBAIRnB,GAAqB6B,UAGzBH,EAAKJ,eACD1B,EAAa+B,KAAK,CACtBC,GAAInB,GAAkBmB,GACtBzB,KAAMC,EAAgBC,MACtBC,QAASC,EAAmBG,MAC5BU,SAAU,CACRC,IAAKK,EAAKJ,kBAIRb,GAAkBoB,UAGpBC,EAAAA,QAAQhC,EAAE,yBACTiC,GACDC,EAAAA,MAAMD,EAAIE,QAClB,IAEF,CAACrC,EAAcI,EAAqBS,EAAkBX,IAItD,OAACoC,EAAAC,GAAMC,MAAOtC,EAAE,eAAgBuC,KAAOC,EAAAC,EAAAA,mBAAA,IACrCC,SAAA,GAACC,EAAA,CAAS3C,SAAEA,EAAA,mBAEX,OAAA,CAAK4C,SAAU5B,EAAiBD,GAC/B2B,SAAA,CAACF,EAAAK,EAAA,CACCC,MAAO9C,EAAE,sBACT+C,KAAK,YACLC,YAAahD,EACX,kHAEFiD,QAAQ,EAERP,SAACF,EAAAU,EACC,CAAAC,YAAY,4BACZC,QAAQ,iBACJvC,EAAS,iBAIhB2B,EAAAK,EACC,CAAAC,MAAO9C,EAAE,oBACT+C,KAAK,WACLC,YAAahD,EAAE,qDACfiD,QAAQ,EAERP,SAACF,EAAAU,EACC,CAAAC,YAAY,6BACZC,QAAQ,iBACJvC,EAAS,kBAIhBwC,EAAO,CAAAhD,KAAK,SAASiD,SAAUrC,EAAUsC,aACvCtC,SAAAA,EAAUsC,aAAe,GAAGvD,EAAE,aAAeA,EAAE,eAK1D"}