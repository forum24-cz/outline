{"version":3,"file":"Shared._eMCrtgF.js","sources":["../../../app/components/SearchListItem.tsx","../../../app/components/SearchPopover.tsx","../../../app/components/Sidebar/components/SharedDocumentLink.tsx","../../../app/components/Sidebar/Shared.tsx","../../../app/scenes/Document/Shared.tsx"],"sourcesContent":["import {\n  useFocusEffect,\n  useRovingTabIndex,\n} from \"@getoutline/react-roving-tabindex\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { s, hover, ellipsis } from \"@shared/styles\";\nimport Document from \"~/models/Document\";\nimport Highlight, { Mark } from \"~/components/Highlight\";\nimport { sharedDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  document: Document;\n  highlight: string;\n  context: string | undefined;\n  showParentDocuments?: boolean;\n  showCollection?: boolean;\n  showPublished?: boolean;\n  shareId?: string;\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>;\n};\nconst SEARCH_RESULT_REGEX = /<b\\b[^>]*>(.*?)<\\/b>/gi;\n\nfunction replaceResultMarks(tag: string) {\n  // don't use SEARCH_RESULT_REGEX here as it causes\n  // an infinite loop to trigger a regex inside it's own callback\n  return tag.replace(/<b\\b[^>]*>(.*?)<\\/b>/gi, \"$1\");\n}\n\nfunction DocumentListItem(\n  props: Props,\n  ref: React.RefObject<HTMLAnchorElement>\n) {\n  const { document, highlight, context, shareId, ...rest } = props;\n\n  let itemRef: React.Ref<HTMLAnchorElement> =\n    React.useRef<HTMLAnchorElement>(null);\n  if (ref) {\n    itemRef = ref;\n  }\n\n  const { focused, ...rovingTabIndex } = useRovingTabIndex(itemRef, false);\n  useFocusEffect(focused, itemRef);\n\n  return (\n    <DocumentLink\n      ref={itemRef}\n      dir={document.dir}\n      to={{\n        pathname: shareId\n          ? sharedDocumentPath(shareId, document.url)\n          : document.url,\n        state: {\n          title: document.titleWithDefault,\n        },\n      }}\n      {...rest}\n      {...rovingTabIndex}\n      onClick={(ev) => {\n        if (rest.onClick) {\n          rest.onClick(ev);\n        }\n        rovingTabIndex.onClick(ev);\n      }}\n    >\n      <Content>\n        <Heading dir={document.dir}>\n          <Title\n            text={document.titleWithDefault}\n            highlight={highlight}\n            dir={document.dir}\n          />\n        </Heading>\n\n        {\n          <ResultContext\n            text={context}\n            highlight={highlight ? SEARCH_RESULT_REGEX : undefined}\n            processResult={replaceResultMarks}\n          />\n        }\n      </Content>\n    </DocumentLink>\n  );\n}\n\nconst Content = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  min-width: 0;\n`;\n\nconst DocumentLink = styled(Link)<{\n  $isStarred?: boolean;\n  $menuOpen?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  padding: 6px 12px;\n  max-height: 50vh;\n  cursor: var(--pointer);\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n\n  &:focus-visible {\n    outline: none;\n  }\n\n  ${breakpoint(\"tablet\")`\n    width: auto;\n  `};\n\n  &:${hover},\n  &:active,\n  &:focus,\n  &:focus-within {\n    background: ${s(\"listItemHoverBackground\")};\n  }\n\n  ${(props) =>\n    props.$menuOpen &&\n    css`\n      background: ${s(\"listItemHoverBackground\")};\n    `}\n`;\n\nconst Heading = styled.h4<{ rtl?: boolean }>`\n  display: flex;\n  justify-content: ${(props) => (props.rtl ? \"flex-end\" : \"flex-start\")};\n  align-items: center;\n  height: 22px;\n  margin-top: 0;\n  margin-bottom: 0.25em;\n  overflow: hidden;\n  white-space: nowrap;\n  color: ${s(\"text\")};\n`;\n\nconst Title = styled(Highlight)`\n  max-width: 90%;\n  ${ellipsis()}\n\n  ${Mark} {\n    padding: 0;\n  }\n`;\n\nconst ResultContext = styled(Highlight)`\n  display: block;\n  color: ${s(\"textTertiary\")};\n  font-size: 14px;\n  margin-top: -0.25em;\n  margin-bottom: 0;\n  ${ellipsis()}\n\n  ${Mark} {\n    padding: 0;\n  }\n`;\n\nexport default observer(React.forwardRef(DocumentListItem));\n","import debounce from \"lodash/debounce\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { usePopoverState, PopoverDisclosure } from \"reakit/Popover\";\nimport styled from \"styled-components\";\nimport { depths } from \"@shared/styles\";\nimport Empty from \"~/components/Empty\";\nimport { Outline } from \"~/components/Input\";\nimport InputSearch from \"~/components/InputSearch\";\nimport Placeholder from \"~/components/List/Placeholder\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Popover from \"~/components/Popover\";\nimport { id as bodyContentId } from \"~/components/SkipNavContent\";\nimport useKeyDown from \"~/hooks/useKeyDown\";\nimport useStores from \"~/hooks/useStores\";\nimport { SearchResult } from \"~/types\";\nimport SearchListItem from \"./SearchListItem\";\n\ninterface Props extends React.HTMLAttributes<HTMLInputElement> {\n  shareId: string;\n  className?: string;\n}\n\nfunction SearchPopover({ shareId, className }: Props) {\n  const { t } = useTranslation();\n  const { documents } = useStores();\n  const focusRef = React.useRef<HTMLElement | null>(null);\n\n  const popover = usePopoverState({\n    placement: \"bottom-start\",\n    unstable_offset: [-24, 0],\n    modal: true,\n  });\n\n  const [query, setQuery] = React.useState(\"\");\n  const { show, hide } = popover;\n\n  const [searchResults, setSearchResults] = React.useState<\n    SearchResult[] | undefined\n  >();\n  const [cachedQuery, setCachedQuery] = React.useState(query);\n  const [cachedSearchResults, setCachedSearchResults] = React.useState<\n    SearchResult[] | undefined\n  >(searchResults);\n\n  React.useEffect(() => {\n    if (searchResults) {\n      setCachedQuery(query);\n      setCachedSearchResults(searchResults);\n      show();\n    }\n  }, [searchResults, query, show]);\n\n  const performSearch = React.useCallback(\n    async ({ query, ...options }) => {\n      if (query?.length > 0) {\n        const response = await documents.search({\n          query,\n          shareId,\n          ...options,\n        });\n\n        if (response.length) {\n          setSearchResults(response);\n        }\n\n        return response;\n      }\n      return undefined;\n    },\n    [documents, shareId]\n  );\n\n  const handleSearchInputChange = React.useMemo(\n    () =>\n      debounce(async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        setQuery(value.trim());\n\n        // covers edge case: user manually dismisses popover then\n        // quickly edits input resulting in no change in query\n        // the useEffect that normally shows the popover will miss it\n        if (value === cachedQuery) {\n          popover.show();\n        }\n\n        if (!value.length) {\n          popover.hide();\n        }\n      }, 300),\n    [popover, cachedQuery]\n  );\n\n  const searchInputRef =\n    popover.unstable_referenceRef as React.RefObject<HTMLInputElement>;\n\n  const firstSearchItem = React.useRef<HTMLAnchorElement>(null);\n\n  const handleEscapeList = React.useCallback(\n    () => searchInputRef?.current?.focus(),\n    [searchInputRef]\n  );\n\n  const handleSearchInputFocus = React.useCallback(() => {\n    focusRef.current = searchInputRef.current;\n  }, [searchInputRef]);\n\n  const handleKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLInputElement>) => {\n      if (ev.nativeEvent.isComposing) {\n        return;\n      }\n\n      if (ev.key === \"Enter\") {\n        if (searchResults) {\n          popover.show();\n        }\n      }\n\n      if (ev.key === \"ArrowDown\" && !ev.shiftKey) {\n        if (ev.currentTarget.value.length) {\n          if (\n            ev.currentTarget.value.length === ev.currentTarget.selectionStart\n          ) {\n            popover.show();\n          }\n          firstSearchItem.current?.focus();\n        }\n      }\n\n      if (ev.key === \"ArrowUp\") {\n        if (popover.visible) {\n          popover.hide();\n          if (!ev.shiftKey) {\n            ev.preventDefault();\n          }\n        }\n\n        if (ev.currentTarget.value) {\n          if (ev.currentTarget.selectionEnd === 0) {\n            ev.currentTarget.selectionStart = 0;\n            ev.currentTarget.selectionEnd = ev.currentTarget.value.length;\n            ev.preventDefault();\n          }\n        }\n      }\n\n      if (ev.key === \"Escape\") {\n        if (popover.visible) {\n          popover.hide();\n          ev.preventDefault();\n        }\n      }\n    },\n    [popover, searchResults]\n  );\n\n  const handleSearchItemClick = React.useCallback(() => {\n    hide();\n    if (searchInputRef.current) {\n      searchInputRef.current.value = \"\";\n      focusRef.current = document.getElementById(bodyContentId);\n    }\n  }, [searchInputRef, hide]);\n\n  useKeyDown(\"/\", (ev) => {\n    if (\n      searchInputRef.current &&\n      searchInputRef.current !== document.activeElement\n    ) {\n      searchInputRef.current.focus();\n      ev.preventDefault();\n    }\n  });\n\n  return (\n    <>\n      <PopoverDisclosure {...popover}>\n        {(props) => (\n          // props assumes the disclosure is a button, but we want a type-ahead\n          // so we take the aria props, and ref and ignore the event handlers\n          <StyledInputSearch\n            aria-controls={props[\"aria-controls\"]}\n            aria-expanded={props[\"aria-expanded\"]}\n            aria-haspopup={props[\"aria-haspopup\"]}\n            ref={props.ref}\n            onChange={handleSearchInputChange}\n            onFocus={handleSearchInputFocus}\n            onKeyDown={handleKeyDown}\n            className={className}\n          />\n        )}\n      </PopoverDisclosure>\n      <Popover\n        {...popover}\n        aria-label={t(\"Results\")}\n        unstable_autoFocusOnShow={false}\n        unstable_finalFocusRef={focusRef}\n        style={{ zIndex: depths.sidebar + 1 }}\n        shrink\n      >\n        <PaginatedList\n          options={{ query, snippetMinWords: 10, snippetMaxWords: 11 }}\n          items={cachedSearchResults}\n          fetch={performSearch}\n          onEscape={handleEscapeList}\n          empty={\n            <NoResults>{t(\"No results for {{query}}\", { query })}</NoResults>\n          }\n          loading={<PlaceholderList count={3} header={{ height: 20 }} />}\n          renderItem={(item: SearchResult, index) => (\n            <SearchListItem\n              key={item.document.id}\n              shareId={shareId}\n              ref={index === 0 ? firstSearchItem : undefined}\n              document={item.document}\n              context={item.context}\n              highlight={cachedQuery}\n              onClick={handleSearchItemClick}\n            />\n          )}\n        />\n      </Popover>\n    </>\n  );\n}\n\nconst NoResults = styled(Empty)`\n  padding: 0 12px;\n  margin: 6px 0;\n`;\n\nconst PlaceholderList = styled(Placeholder)`\n  padding: 6px 12px;\n`;\n\nconst StyledInputSearch = styled(InputSearch)`\n  ${Outline} {\n    border-radius: 16px;\n  }\n`;\n\nexport default observer(SearchPopover);\n","import includes from \"lodash/includes\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Icon from \"@shared/components/Icon\";\nimport { NavigationNode } from \"@shared/types\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\nimport useStores from \"~/hooks/useStores\";\nimport { sharedDocumentPath } from \"~/utils/routeHelpers\";\nimport { descendants } from \"~/utils/tree\";\nimport SidebarLink from \"./SidebarLink\";\n\ntype Props = {\n  node: NavigationNode;\n  collection?: Collection;\n  activeDocumentId?: string;\n  activeDocument?: Document;\n  prefetchDocument?: (documentId: string) => Promise<Document | void>;\n  isDraft?: boolean;\n  depth: number;\n  index: number;\n  shareId: string;\n  parentId?: string;\n};\n\nfunction DocumentLink(\n  {\n    node,\n    collection,\n    activeDocument,\n    activeDocumentId,\n    prefetchDocument,\n    isDraft,\n    depth,\n    shareId,\n  }: Props,\n  ref: React.RefObject<HTMLAnchorElement>\n) {\n  const { documents } = useStores();\n  const { t } = useTranslation();\n\n  const isActiveDocument = activeDocumentId === node.id;\n\n  const hasChildDocuments =\n    !!node.children.length || activeDocument?.parentDocumentId === node.id;\n  const document = documents.get(node.id);\n  const showChildren = React.useMemo(\n    () =>\n      !!(\n        hasChildDocuments &&\n        ((activeDocumentId &&\n          includes(\n            descendants(node).map((n) => n.id),\n            activeDocumentId\n          )) ||\n          isActiveDocument ||\n          depth <= 1)\n      ),\n    [hasChildDocuments, activeDocumentId, isActiveDocument, depth, node]\n  );\n\n  const [expanded, setExpanded] = React.useState(showChildren);\n\n  React.useEffect(() => {\n    if (showChildren) {\n      setExpanded(showChildren);\n    }\n  }, [showChildren]);\n\n  const handleDisclosureClick = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      setExpanded(!expanded);\n    },\n    [expanded]\n  );\n\n  // since we don't have access to the collection sort here, we just put any\n  // drafts at the front of the list. this is slightly inconsistent with the\n  // logged-in behavior, but it's probably better to emphasize the draft state\n  // of the document in a shared context\n  const nodeChildren = React.useMemo(() => {\n    if (\n      activeDocument?.isDraft &&\n      activeDocument?.isActive &&\n      activeDocument?.parentDocumentId === node.id\n    ) {\n      return [activeDocument?.asNavigationNode, ...node.children];\n    }\n\n    return node.children;\n  }, [\n    activeDocument?.isActive,\n    activeDocument?.isDraft,\n    activeDocument?.parentDocumentId,\n    activeDocument?.asNavigationNode,\n    node,\n  ]);\n\n  const handlePrefetch = React.useCallback(() => {\n    void prefetchDocument?.(node.id);\n  }, [prefetchDocument, node]);\n\n  const title =\n    (activeDocument?.id === node.id ? activeDocument.title : node.title) ||\n    t(\"Untitled\");\n\n  const icon = node.icon ?? node.emoji;\n\n  return (\n    <>\n      <SidebarLink\n        to={{\n          pathname: sharedDocumentPath(shareId, node.url),\n          state: {\n            title: node.title,\n          },\n        }}\n        expanded={hasChildDocuments && depth !== 0 ? expanded : undefined}\n        onDisclosureClick={handleDisclosureClick}\n        onClickIntent={handlePrefetch}\n        icon={icon && <Icon value={icon} color={node.color} />}\n        label={title}\n        depth={depth}\n        exact={false}\n        scrollIntoViewIfNeeded={!document?.isStarred}\n        isDraft={isDraft}\n        ref={ref}\n        isActive={() => !!isActiveDocument}\n      />\n      {expanded &&\n        nodeChildren.map((childNode, index) => (\n          <ObservedDocumentLink\n            shareId={shareId}\n            key={childNode.id}\n            collection={collection}\n            node={childNode}\n            activeDocumentId={activeDocumentId}\n            activeDocument={activeDocument}\n            prefetchDocument={prefetchDocument}\n            isDraft={childNode.isDraft}\n            depth={depth + 1}\n            index={index}\n            parentId={node.id}\n          />\n        ))}\n    </>\n  );\n}\n\nconst ObservedDocumentLink = observer(React.forwardRef(DocumentLink));\n\nexport default ObservedDocumentLink;\n","import { observer } from \"mobx-react\";\nimport { SidebarIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { hover } from \"@shared/styles\";\nimport { NavigationNode } from \"@shared/types\";\nimport { metaDisplay } from \"@shared/utils/keyboard\";\nimport Flex from \"~/components/Flex\";\nimport Scrollable from \"~/components/Scrollable\";\nimport SearchPopover from \"~/components/SearchPopover\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport history from \"~/utils/history\";\nimport { homePath, sharedDocumentPath } from \"~/utils/routeHelpers\";\nimport { AvatarSize } from \"../Avatar\";\nimport { useTeamContext } from \"../TeamContext\";\nimport TeamLogo from \"../TeamLogo\";\nimport Sidebar from \"./Sidebar\";\nimport Section from \"./components/Section\";\nimport DocumentLink from \"./components/SharedDocumentLink\";\nimport SidebarButton from \"./components/SidebarButton\";\nimport ToggleButton from \"./components/ToggleButton\";\n\ntype Props = {\n  rootNode: NavigationNode;\n  shareId: string;\n};\n\nfunction SharedSidebar({ rootNode, shareId }: Props) {\n  const team = useTeamContext();\n  const user = useCurrentUser({ rejectOnEmpty: false });\n  const { ui, documents } = useStores();\n  const { t } = useTranslation();\n\n  const teamAvailable = !!team?.name;\n\n  return (\n    <StyledSidebar $hoverTransition={!teamAvailable}>\n      {teamAvailable && (\n        <SidebarButton\n          title={team.name}\n          image={\n            <TeamLogo model={team} size={AvatarSize.XLarge} alt={t(\"Logo\")} />\n          }\n          onClick={() =>\n            history.push(\n              user ? homePath() : sharedDocumentPath(shareId, rootNode.url)\n            )\n          }\n        >\n          <ToggleSidebar />\n        </SidebarButton>\n      )}\n      <ScrollContainer topShadow flex>\n        <TopSection>\n          <SearchWrapper>\n            <StyledSearchPopover shareId={shareId} />\n          </SearchWrapper>\n          {!teamAvailable && (\n            <ToggleWrapper>\n              <ToggleSidebar />\n            </ToggleWrapper>\n          )}\n        </TopSection>\n        <Section>\n          <DocumentLink\n            index={0}\n            depth={0}\n            shareId={shareId}\n            node={rootNode}\n            prefetchDocument={documents.prefetchDocument}\n            activeDocumentId={ui.activeDocumentId}\n            activeDocument={documents.active}\n          />\n        </Section>\n      </ScrollContainer>\n    </StyledSidebar>\n  );\n}\n\nconst ToggleSidebar = () => {\n  const { t } = useTranslation();\n  const { ui } = useStores();\n\n  return (\n    <Tooltip content={t(\"Toggle sidebar\")} shortcut={`${metaDisplay}+.`}>\n      <ToggleButton\n        position=\"bottom\"\n        image={<SidebarIcon />}\n        onClick={() => {\n          ui.toggleCollapsedSidebar();\n          (document.activeElement as HTMLElement)?.blur();\n        }}\n      />\n    </Tooltip>\n  );\n};\n\nconst ScrollContainer = styled(Scrollable)`\n  padding-bottom: 16px;\n`;\n\nconst TopSection = styled(Flex)`\n  padding: 8px;\n  flex-shrink: 0;\n`;\n\nconst SearchWrapper = styled.div`\n  width: 100%;\n`;\n\nconst StyledSearchPopover = styled(SearchPopover)`\n  width: 100%;\n  transition: width 100ms ease-out;\n  margin: 8px 0;\n`;\n\nconst ToggleWrapper = styled.div`\n  position: absolute;\n  right: 0;\n  opacity: 0;\n  transform: translateX(10px);\n  transition: opacity 100ms ease-out, transform 100ms ease-out;\n`;\n\nconst StyledSidebar = styled(Sidebar)<{ $hoverTransition: boolean }>`\n  ${({ $hoverTransition }) =>\n    $hoverTransition &&\n    `\n      &: ${hover} {\n        ${StyledSearchPopover} {\n          width: 85%;\n        }\n\n        ${ToggleWrapper} {\n          opacity: 1;\n          transform: translateX(0);\n        }\n      }\n    `}\n`;\n\nexport default observer(SharedSidebar);\n","import { Location } from \"history\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTranslation } from \"react-i18next\";\nimport { RouteComponentProps, useLocation } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { s } from \"@shared/styles\";\nimport { NavigationNode, PublicTeam, TOCPosition } from \"@shared/types\";\nimport type { Theme } from \"~/stores/UiStore\";\nimport DocumentModel from \"~/models/Document\";\nimport Error404 from \"~/scenes/Errors/Error404\";\nimport ErrorOffline from \"~/scenes/Errors/ErrorOffline\";\nimport ClickablePadding from \"~/components/ClickablePadding\";\nimport {\n  DocumentContextProvider,\n  useDocumentContext,\n} from \"~/components/DocumentContext\";\nimport Layout from \"~/components/Layout\";\nimport Sidebar from \"~/components/Sidebar/Shared\";\nimport { TeamContext } from \"~/components/TeamContext\";\nimport Text from \"~/components/Text\";\nimport env from \"~/env\";\nimport useBuildTheme from \"~/hooks/useBuildTheme\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport { usePostLoginPath } from \"~/hooks/useLastVisitedPath\";\nimport useStores from \"~/hooks/useStores\";\nimport { client } from \"~/utils/ApiClient\";\nimport { AuthorizationError, OfflineError } from \"~/utils/errors\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport { changeLanguage, detectLanguage } from \"~/utils/language\";\nimport Login from \"../Login\";\nimport Document from \"./components/Document\";\nimport Loading from \"./components/Loading\";\n\nconst EMPTY_OBJECT = {};\n\ntype Response = {\n  document?: DocumentModel;\n  team?: PublicTeam;\n  sharedTree?: NavigationNode | undefined;\n};\n\ntype Props = RouteComponentProps<{\n  shareId: string;\n  documentSlug: string;\n}> & {\n  location: Location<{ title?: string }>;\n};\n\n// Parse the canonical origin from the SSR HTML, only needs to be done once.\nconst canonicalUrl = document\n  .querySelector(\"link[rel=canonical]\")\n  ?.getAttribute(\"href\");\nconst canonicalOrigin = canonicalUrl\n  ? new URL(canonicalUrl).origin\n  : window.location.origin;\n\n/**\n * Find the document UUID from the slug given the sharedTree\n *\n * @param documentSlug The slug from the url\n * @param response The response payload from the server\n * @returns The document UUID, if found.\n */\nfunction useDocumentId(documentSlug: string, response?: Response) {\n  let documentId;\n\n  function findInTree(node: NavigationNode) {\n    if (node.url.endsWith(documentSlug)) {\n      documentId = node.id;\n      return true;\n    }\n    if (node.children) {\n      for (const child of node.children) {\n        if (findInTree(child)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  if (response?.sharedTree) {\n    findInTree(response.sharedTree);\n  }\n\n  return documentId;\n}\n\nfunction SharedDocumentScene(props: Props) {\n  const { ui } = useStores();\n  const location = useLocation();\n  const user = useCurrentUser({ rejectOnEmpty: false });\n  const searchParams = React.useMemo(\n    () => new URLSearchParams(location.search),\n    [location.search]\n  );\n  const { t, i18n } = useTranslation();\n  const [response, setResponse] = React.useState<Response>();\n  const [error, setError] = React.useState<Error | null | undefined>();\n  const { documents } = useStores();\n  const [, setPostLoginPath] = usePostLoginPath();\n  const { shareId = env.ROOT_SHARE_ID, documentSlug } = props.match.params;\n  const documentId = useDocumentId(documentSlug, response);\n  const themeOverride = [\"dark\", \"light\"].includes(\n    searchParams.get(\"theme\") || \"\"\n  )\n    ? (searchParams.get(\"theme\") as Theme)\n    : undefined;\n  const theme = useBuildTheme(response?.team?.customTheme, themeOverride);\n\n  React.useEffect(() => {\n    if (shareId) {\n      client.setShareId(shareId);\n    }\n\n    return () => {\n      client.setShareId(undefined);\n    };\n  }, [shareId]);\n\n  React.useEffect(() => {\n    if (!user) {\n      void changeLanguage(detectLanguage(), i18n);\n    }\n  }, [user, i18n]);\n\n  // ensure the wider page color always matches the theme\n  React.useEffect(() => {\n    window.document.body.style.background = theme.background;\n  }, [theme]);\n\n  React.useEffect(() => {\n    if (documentId) {\n      ui.setActiveDocument(documentId);\n    }\n  }, [ui, documentId]);\n\n  React.useEffect(() => {\n    async function fetchData() {\n      try {\n        setResponse((state) => ({\n          ...state,\n          document: undefined,\n        }));\n\n        const res = await documents.fetchWithSharedTree(documentSlug, {\n          shareId,\n        });\n        setResponse(res);\n      } catch (err) {\n        setError(err);\n      }\n    }\n    void fetchData();\n  }, [documents, documentSlug, shareId, ui]);\n\n  if (error) {\n    if (error instanceof OfflineError) {\n      return <ErrorOffline />;\n    } else if (error instanceof AuthorizationError) {\n      setPostLoginPath(props.location.pathname);\n      return (\n        <Login>\n          {(config) =>\n            config?.name && isCloudHosted ? (\n              <Content>\n                {t(\n                  \"{{ teamName }} is using {{ appName }} to share documents, please login to continue.\",\n                  {\n                    teamName: config.name,\n                    appName: env.APP_NAME,\n                  }\n                )}\n              </Content>\n            ) : null\n          }\n        </Login>\n      );\n    } else {\n      return <Error404 />;\n    }\n  }\n\n  // Note: `sharedTree` will be null when `includeChildDocuments` = false\n  if (response?.sharedTree === undefined) {\n    return <Loading location={props.location} />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <link\n          rel=\"canonical\"\n          href={canonicalOrigin + location.pathname.replace(/\\/$/, \"\")}\n        />\n      </Helmet>\n      <TeamContext.Provider value={response.team}>\n        <ThemeProvider theme={theme}>\n          <DocumentContextProvider>\n            <Layout\n              title={response.document?.title}\n              sidebar={\n                response.sharedTree?.children.length ? (\n                  <Sidebar rootNode={response.sharedTree} shareId={shareId!} />\n                ) : undefined\n              }\n            >\n              <SharedDocument shareId={shareId} response={response} />\n            </Layout>\n            <ClickablePadding minHeight=\"20vh\" />\n          </DocumentContextProvider>\n        </ThemeProvider>\n      </TeamContext.Provider>\n    </>\n  );\n}\n\nconst SharedDocument = observer(\n  ({ shareId, response }: { shareId?: string; response: Response }) => {\n    const { hasHeadings, setDocument } = useDocumentContext();\n\n    if (!response.document) {\n      return null;\n    }\n\n    const tocPosition = hasHeadings\n      ? response.team?.tocPosition ?? TOCPosition.Left\n      : false;\n    setDocument(response.document);\n\n    return (\n      <Document\n        abilities={EMPTY_OBJECT}\n        document={response.document}\n        sharedTree={response.sharedTree}\n        shareId={shareId}\n        tocPosition={tocPosition}\n        readOnly\n      />\n    );\n  }\n);\n\nconst Content = styled(Text)`\n  color: ${s(\"textSecondary\")};\n  text-align: center;\n  margin-top: -8px;\n`;\n\nexport default observer(SharedDocumentScene);\n"],"names":["SEARCH_RESULT_REGEX","replaceResultMarks","tag","replace","Content","styled","div","withConfig","componentId","DocumentLink","Link","breakpoint","hover","s","props","$menuOpen","css","Heading","h4","rtl","Title","Highlight","ellipsis","Mark","ResultContext","SearchListItem","observer","React","DocumentListItem","ref","document","highlight","context","shareId","rest","itemRef","focused","rovingTabIndex","useRovingTabIndex","useFocusEffect","dir","to","pathname","sharedDocumentPath","url","state","title","titleWithDefault","onClick","ev","children","jsx","text","undefined","processResult","NoResults","Empty","PlaceholderList","Placeholder","StyledInputSearch","InputSearch","Outline","SearchPopover","className","t","useTranslation","documents","useStores","focusRef","popover","usePopoverState","placement","unstable_offset","modal","query","setQuery","show","hide","searchResults","setSearchResults","useState","cachedQuery","setCachedQuery","cachedSearchResults","setCachedSearchResults","performSearch","async","options","length","response","search","handleSearchInputChange","useMemo","debounce","event","value","target","trim","searchInputRef","unstable_referenceRef","firstSearchItem","handleEscapeList","useCallback","current","focus","handleSearchInputFocus","handleKeyDown","nativeEvent","isComposing","key","shiftKey","currentTarget","selectionStart","visible","preventDefault","selectionEnd","handleSearchItemClick","getElementById","bodyContentId","useKeyDown","activeElement","jsxs","Fragment","PopoverDisclosure","onChange","onFocus","onKeyDown","Popover","unstable_autoFocusOnShow","unstable_finalFocusRef","style","zIndex","depths","sidebar","shrink","PaginatedList","snippetMinWords","snippetMaxWords","items","fetch","onEscape","empty","loading","count","header","height","renderItem","item","index","id","ObservedDocumentLink","node","collection","activeDocument","activeDocumentId","prefetchDocument","isDraft","depth","isActiveDocument","hasChildDocuments","parentDocumentId","get","showChildren","includes","descendants","map","n","expanded","setExpanded","handleDisclosureClick","stopPropagation","nodeChildren","isActive","asNavigationNode","handlePrefetch","icon","emoji","SidebarLink","onDisclosureClick","onClickIntent","Icon","color","label","exact","scrollIntoViewIfNeeded","isStarred","childNode","parentId","ToggleSidebar","ui","Tooltip","content","shortcut","metaDisplay","ToggleButton","position","image","SidebarIcon","toggleCollapsedSidebar","blur","ScrollContainer","Scrollable","TopSection","Flex","SearchWrapper","StyledSearchPopover","ToggleWrapper","StyledSidebar","Sidebar","$hoverTransition","SharedSidebar","rootNode","team","useTeamContext","user","useCurrentUser","rejectOnEmpty","teamAvailable","name","SidebarButton","TeamLogo","model","size","AvatarSize","XLarge","alt","history","push","homePath","topShadow","flex","Section","active","EMPTY_OBJECT","canonicalUrl","querySelector","getAttribute","canonicalOrigin","URL","origin","window","location","SharedDocument","hasHeadings","setDocument","useDocumentContext","tocPosition","TOCPosition","Left","Document","abilities","sharedTree","readOnly","Text","SharedDocumentScene","useLocation","searchParams","URLSearchParams","i18n","setResponse","error","setError","setPostLoginPath","usePostLoginPath","env","ROOT_SHARE_ID","documentSlug","match","params","documentId","useDocumentId","findInTree","endsWith","child","themeOverride","theme","useBuildTheme","customTheme","client","setShareId","changeLanguage","detectLanguage","body","background","setActiveDocument","fetchData","res","fetchWithSharedTree","err","OfflineError","ErrorOffline","AuthorizationError","Login","config","isCloudHosted","teamName","appName","APP_NAME","Error404","Loading","Helmet","rel","href","TeamContext","Provider","ThemeProvider","DocumentContextProvider","Layout","ClickablePadding","minHeight"],"mappings":"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"}