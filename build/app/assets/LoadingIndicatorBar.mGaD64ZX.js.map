{"version":3,"file":"LoadingIndicatorBar.mGaD64ZX.js","sources":["../../../app/components/LoadingIndicator/LoadingIndicator.ts","../../../app/components/LoadingIndicator/LoadingIndicatorBar.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport useStores from \"~/hooks/useStores\";\n\nfunction LoadingIndicator() {\n  const { ui } = useStores();\n\n  React.useEffect(() => {\n    ui.enableProgressBar();\n    return () => ui.disableProgressBar();\n  }, [ui]);\n\n  return null;\n}\n\nexport default observer(LoadingIndicator);\n","import * as React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { depths, s } from \"@shared/styles\";\n\nconst LoadingIndicatorBar = () => (\n  <Container>\n    <Loader />\n  </Container>\n);\n\nconst loadingFrame = keyframes`\n  from { margin-left: -100%; }\n  to { margin-left: 100%; }\n`;\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  z-index: ${depths.loadingIndicatorBar};\n  width: 100%;\n  animation: ${loadingFrame} 4s ease-in-out infinite;\n  animation-delay: 250ms;\n  margin-left: -100%;\n`;\n\nconst Loader = styled.div`\n  width: 100%;\n  height: 2px;\n  background-color: ${s(\"accent\")};\n`;\n\nexport default LoadingIndicatorBar;\n"],"names":["observer","LoadingIndicator","ui","useStores","React","enableProgressBar","disableProgressBar","LoadingIndicatorBar","jsx","Container","children","Loader","loadingFrame","keyframes","styled","div","withConfig","componentId","depths","loadingIndicatorBar","s"],"mappings":"2FAeA,MAAeA,EAAAA,GAXf,SAASC,mBACD,MAAAC,GAAEA,GAAOC,IAOR,OALPC,EAAAA,WAAgB,KACdF,EAAGG,oBACI,IAAMH,EAAGI,uBACf,CAACJ,IAEG,IACT,ICTMK,oBAAsBA,IAC1BC,EAACC,EACC,CAAAC,SAAAF,EAACG,GAAM,KAILC,EAAeC,EAGpB,CAAA,kDAEKJ,EAAYK,EAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAVH,CAAU,CAAA,gCAAA,yBAAA,qEAGfI,EAAOC,oBAELP,GAKTD,EAASG,EAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAVH,CAAU,CAAA,0CAAA,KAGHM,EAAE"}