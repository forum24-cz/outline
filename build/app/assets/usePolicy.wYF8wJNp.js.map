{"version":3,"file":"usePolicy.wYF8wJNp.js","sources":["../../../app/hooks/usePolicy.ts"],"sourcesContent":["import * as React from \"react\";\nimport Model from \"~/models/base/Model\";\nimport useCurrentUser from \"./useCurrentUser\";\nimport useStores from \"./useStores\";\n\n/**\n * Retrieve the abilities of a policy for a given entity, if the policy is not\n * located in the store, it will be fetched from the server.\n *\n * @param entity The model or model id\n * @returns The policy for the model\n */\nexport default function usePolicy(entity?: string | Model | null) {\n  const { policies } = useStores();\n  const user = useCurrentUser({ rejectOnEmpty: false });\n  const entityId = entity\n    ? typeof entity === \"string\"\n      ? entity\n      : entity.id\n    : \"\";\n  const policy = policies.get(entityId);\n\n  React.useEffect(() => {\n    if (\n      entity &&\n      typeof entity !== \"string\" &&\n      !entity.isNew &&\n      !entity.isSaving\n    ) {\n      // The policy for this model is missing and we have an authenticated session, attempt to\n      // reload relationships for this model.\n      if (!policy && user) {\n        void entity.loadRelations();\n      }\n    }\n  }, [policies, policy, user, entity]);\n\n  return policies.abilities(entityId);\n}\n"],"names":["usePolicy","entity","policies","useStores","user","useCurrentUser","rejectOnEmpty","entityId","id","policy","get","React","isNew","isSaving","loadRelations","abilities"],"mappings":"gGAYA,SAAwBA,UAAUC,GAC1B,MAAAC,SAAEA,GAAaC,IACfC,EAAOC,EAAe,CAAEC,eAAe,IACvCC,EAAWN,EACK,iBAAXA,EACLA,EACAA,EAAOO,GACT,GACEC,EAASP,EAASQ,IAAIH,GAiBrBL,OAfPS,EAAAA,WAAgB,MAEZV,GACkB,iBAAXA,GACNA,EAAOW,OACPX,EAAOY,WAIHJ,GAAUL,GACRH,EAAOa,eAEhB,GACC,CAACZ,EAAUO,EAAQL,EAAMH,IAErBC,EAASa,UAAUR,EAC5B"}