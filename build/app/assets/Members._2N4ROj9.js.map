{"version":3,"file":"Members._2N4ROj9.js","sources":["../../../app/menus/UserMenu.tsx","../../../app/scenes/Settings/components/MembersTable.tsx","../../../app/scenes/Settings/components/UserRoleFilter.tsx","../../../app/scenes/Settings/Members.tsx","../../../app/scenes/Settings/components/UserStatusFilter.tsx"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport { toast } from \"sonner\";\nimport { UserRole } from \"@shared/types\";\nimport User from \"~/models/User\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport {\n  UserSuspendDialog,\n  UserChangeNameDialog,\n  UserChangeEmailDialog,\n} from \"~/components/UserDialogs\";\nimport { actionToMenuItem } from \"~/actions\";\nimport {\n  deleteUserActionFactory,\n  updateUserRoleActionFactory,\n} from \"~/actions/definitions/users\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  user: User;\n};\n\nfunction UserMenu({ user }: Props) {\n  const { users, dialogs } = useStores();\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n  const can = usePolicy(user);\n  const context = useActionContext({\n    isContextMenu: true,\n  });\n\n  const handleChangeName = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      dialogs.openModal({\n        title: t(\"Change name\"),\n        content: (\n          <UserChangeNameDialog user={user} onSubmit={dialogs.closeAllModals} />\n        ),\n      });\n    },\n    [dialogs, t, user]\n  );\n\n  const handleChangeEmail = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      dialogs.openModal({\n        title: t(\"Change email\"),\n        content: (\n          <UserChangeEmailDialog\n            user={user}\n            onSubmit={dialogs.closeAllModals}\n          />\n        ),\n      });\n    },\n    [dialogs, t, user]\n  );\n\n  const handleSuspend = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      dialogs.openModal({\n        title: t(\"Suspend user\"),\n        content: (\n          <UserSuspendDialog user={user} onSubmit={dialogs.closeAllModals} />\n        ),\n      });\n    },\n    [dialogs, t, user]\n  );\n\n  const handleRevoke = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      await users.delete(user);\n    },\n    [users, user]\n  );\n\n  const handleResendInvite = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      try {\n        await users.resendInvite(user);\n        toast.success(t(`Invite was resent to ${user.name}`));\n      } catch (err) {\n        toast.error(\n          err.message ?? t(`An error occurred while sending the invite`)\n        );\n      }\n    },\n    [users, user, t]\n  );\n\n  const handleActivate = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      await users.activate(user);\n    },\n    [users, user]\n  );\n\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"User options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"submenu\",\n              title: t(\"Change role\"),\n              visible: can.demote || can.promote,\n              items: [UserRole.Admin, UserRole.Member, UserRole.Viewer].map(\n                (role) =>\n                  actionToMenuItem(\n                    updateUserRoleActionFactory(user, role),\n                    context\n                  )\n              ),\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Change name\")}…`,\n              onClick: handleChangeName,\n              visible: can.update,\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Change email\")}…`,\n              onClick: handleChangeEmail,\n              visible: can.update,\n            },\n            {\n              type: \"button\",\n              title: t(\"Resend invite\"),\n              onClick: handleResendInvite,\n              visible: can.resendInvite,\n            },\n            {\n              type: \"separator\",\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Revoke invite\")}…`,\n              dangerous: true,\n              onClick: handleRevoke,\n              visible: user.isInvited,\n            },\n            {\n              type: \"button\",\n              title: t(\"Activate user\"),\n              onClick: handleActivate,\n              visible: !user.isInvited && user.isSuspended,\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Suspend user\")}…`,\n              dangerous: true,\n              onClick: handleSuspend,\n              visible: !user.isInvited && !user.isSuspended,\n            },\n            {\n              type: \"separator\",\n            },\n            actionToMenuItem(deleteUserActionFactory(user.id), context),\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(UserMenu);\n","import compact from \"lodash/compact\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport User from \"~/models/User\";\nimport { Avatar, AvatarSize } from \"~/components/Avatar\";\nimport Badge from \"~/components/Badge\";\nimport Flex from \"~/components/Flex\";\nimport { HEADER_HEIGHT } from \"~/components/Header\";\nimport {\n  type Props as TableProps,\n  SortableTable,\n} from \"~/components/SortableTable\";\nimport { type Column as TableColumn } from \"~/components/Table\";\nimport Time from \"~/components/Time\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport UserMenu from \"~/menus/UserMenu\";\nimport { FILTER_HEIGHT } from \"./StickyFilters\";\n\nconst ROW_HEIGHT = 60;\nconst STICKY_OFFSET = HEADER_HEIGHT + FILTER_HEIGHT;\n\ntype Props = Omit<TableProps<User>, \"columns\" | \"rowHeight\"> & {\n  canManage: boolean;\n};\n\nexport function MembersTable({ canManage, ...rest }: Props) {\n  const { t } = useTranslation();\n  const currentUser = useCurrentUser();\n\n  const columns = React.useMemo<TableColumn<User>[]>(\n    () =>\n      compact<TableColumn<User>>([\n        {\n          type: \"data\",\n          id: \"name\",\n          header: t(\"Name\"),\n          accessor: (user) => user.name,\n          component: (user) => (\n            <Flex align=\"center\" gap={8}>\n              <Avatar model={user} size={AvatarSize.Large} /> {user.name}{\" \"}\n              {currentUser.id === user.id && `(${t(\"You\")})`}\n            </Flex>\n          ),\n          width: \"4fr\",\n        },\n        canManage\n          ? {\n              type: \"data\",\n              id: \"email\",\n              header: t(\"Email\"),\n              accessor: (user) => user.email,\n              component: (user) => <>{user.email}</>,\n              width: \"4fr\",\n            }\n          : undefined,\n        {\n          type: \"data\",\n          id: \"lastActiveAt\",\n          header: t(\"Last active\"),\n          accessor: (user) => user.lastActiveAt,\n          component: (user) =>\n            user.lastActiveAt ? (\n              <Time dateTime={user.lastActiveAt} addSuffix />\n            ) : null,\n          width: \"2fr\",\n        },\n        {\n          type: \"data\",\n          id: \"role\",\n          header: t(\"Role\"),\n          accessor: (user) => user.role,\n          component: (user) => (\n            <Badges wrap>\n              {!user.lastActiveAt && <Badge>{t(\"Invited\")}</Badge>}\n              {user.isAdmin ? (\n                <Badge primary>{t(\"Admin\")}</Badge>\n              ) : user.isViewer ? (\n                <Badge>{t(\"Viewer\")}</Badge>\n              ) : user.isGuest ? (\n                <Badge>{t(\"Guest\")}</Badge>\n              ) : (\n                <Badge>{t(\"Editor\")}</Badge>\n              )}\n              {user.isSuspended && <Badge>{t(\"Suspended\")}</Badge>}\n            </Badges>\n          ),\n          width: \"2fr\",\n        },\n        canManage\n          ? {\n              type: \"action\",\n              id: \"action\",\n              component: (user) =>\n                currentUser.id !== user.id ? <UserMenu user={user} /> : null,\n              width: \"50px\",\n            }\n          : undefined,\n      ]),\n    [t, currentUser, canManage]\n  );\n\n  return (\n    <SortableTable\n      columns={columns}\n      rowHeight={ROW_HEIGHT}\n      stickyOffset={STICKY_OFFSET}\n      {...rest}\n    />\n  );\n}\n\nconst Badges = styled(Flex)`\n  margin-left: -10px;\n  row-gap: 4px;\n`;\n","import compact from \"lodash/compact\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserRole } from \"@shared/types\";\nimport FilterOptions from \"~/components/FilterOptions\";\n\ntype Props = {\n  activeKey: string;\n  onSelect: (key: string | null | undefined) => void;\n};\n\nconst UserRoleFilter = ({ activeKey, onSelect, ...rest }: Props) => {\n  const { t } = useTranslation();\n\n  const options = React.useMemo(\n    () =>\n      compact([\n        {\n          key: \"\",\n          label: t(\"All roles\"),\n        },\n        {\n          key: UserRole.Admin,\n          label: t(\"Admins\"),\n        },\n        {\n          key: UserRole.Member,\n          label: t(\"Editors\"),\n        },\n        {\n          key: UserRole.Viewer,\n          label: t(\"Viewers\"),\n        },\n      ]),\n    [t]\n  );\n\n  return (\n    <FilterOptions\n      options={options}\n      selectedKeys={[activeKey]}\n      onSelect={onSelect}\n      defaultLabel={t(\"All roles\")}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(UserRoleFilter);\n","import { ColumnSort } from \"@tanstack/react-table\";\nimport { observer } from \"mobx-react\";\nimport { PlusIcon, UserIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { toast } from \"sonner\";\nimport styled from \"styled-components\";\nimport UsersStore, { queriedUsers } from \"~/stores/UsersStore\";\nimport { Action } from \"~/components/Actions\";\nimport Button from \"~/components/Button\";\nimport { ConditionalFade } from \"~/components/Fade\";\nimport Heading from \"~/components/Heading\";\nimport InputSearch from \"~/components/InputSearch\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport { inviteUser } from \"~/actions/definitions/users\";\nimport env from \"~/env\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport { useTableRequest } from \"~/hooks/useTableRequest\";\nimport { MembersTable } from \"./components/MembersTable\";\nimport { StickyFilters } from \"./components/StickyFilters\";\nimport UserRoleFilter from \"./components/UserRoleFilter\";\nimport UserStatusFilter from \"./components/UserStatusFilter\";\n\nfunction Members() {\n  const appName = env.APP_NAME;\n  const location = useLocation();\n  const history = useHistory();\n  const team = useCurrentTeam();\n  const context = useActionContext();\n  const { users } = useStores();\n  const { t } = useTranslation();\n  const params = useQuery();\n  const can = usePolicy(team);\n  const [query, setQuery] = React.useState(\"\");\n\n  const reqParams = React.useMemo(\n    () => ({\n      query: params.get(\"query\") || undefined,\n      filter: params.get(\"filter\") || \"active\",\n      role: params.get(\"role\") || undefined,\n      sort: params.get(\"sort\") || \"name\",\n      direction: (params.get(\"direction\") || \"asc\").toUpperCase() as\n        | \"ASC\"\n        | \"DESC\",\n    }),\n    [params]\n  );\n\n  const sort: ColumnSort = React.useMemo(\n    () => ({\n      id: reqParams.sort,\n      desc: reqParams.direction === \"DESC\",\n    }),\n    [reqParams.sort, reqParams.direction]\n  );\n\n  const { data, error, loading, next } = useTableRequest({\n    data: getFilteredUsers({\n      users,\n      query: reqParams.query,\n      filter: reqParams.filter,\n      role: reqParams.role,\n    }),\n    sort,\n    reqFn: users.fetchPage,\n    reqParams,\n  });\n\n  const updateParams = React.useCallback(\n    (name: string, value: string) => {\n      if (value) {\n        params.set(name, value);\n      } else {\n        params.delete(name);\n      }\n\n      history.replace({\n        pathname: location.pathname,\n        search: params.toString(),\n      });\n    },\n    [params, history, location.pathname]\n  );\n\n  const handleStatusFilter = React.useCallback(\n    (status) => updateParams(\"filter\", status),\n    [updateParams]\n  );\n\n  const handleRoleFilter = React.useCallback(\n    (role) => updateParams(\"role\", role),\n    [updateParams]\n  );\n\n  const handleSearch = React.useCallback((event) => {\n    const { value } = event.target;\n    setQuery(value);\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      toast.error(t(\"Could not load members\"));\n    }\n  }, [t, error]);\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => updateParams(\"query\", query), 250);\n    return () => clearTimeout(timeout);\n  }, [query, updateParams]);\n\n  return (\n    <Scene\n      title={t(\"Members\")}\n      icon={<UserIcon />}\n      actions={\n        <>\n          {can.inviteUser && (\n            <Action>\n              <Button\n                type=\"button\"\n                data-on=\"click\"\n                data-event-category=\"invite\"\n                data-event-action=\"peoplePage\"\n                action={inviteUser}\n                context={context}\n                icon={<PlusIcon />}\n              >\n                {t(\"Invite people\")}…\n              </Button>\n            </Action>\n          )}\n        </>\n      }\n      wide\n    >\n      <Heading>{t(\"Members\")}</Heading>\n      <Text as=\"p\" type=\"secondary\">\n        <Trans>\n          Everyone that has signed into {{ appName }} is listed here. It’s\n          possible that there are other users who have access through{\" \"}\n          {{ signinMethods: team.signinMethods }} but haven’t signed in yet.\n        </Trans>\n      </Text>\n      <StickyFilters gap={8}>\n        <InputSearch\n          short\n          value={query}\n          placeholder={`${t(\"Filter\")}…`}\n          onChange={handleSearch}\n        />\n        <LargeUserStatusFilter\n          activeKey={reqParams.filter ?? \"\"}\n          onSelect={handleStatusFilter}\n        />\n        <LargeUserRoleFilter\n          activeKey={reqParams.role ?? \"\"}\n          onSelect={handleRoleFilter}\n        />\n      </StickyFilters>\n      <ConditionalFade animate={!data}>\n        <MembersTable\n          data={data ?? []}\n          sort={sort}\n          canManage={can.update}\n          loading={loading}\n          page={{\n            hasNext: !!next,\n            fetchNext: next,\n          }}\n        />\n      </ConditionalFade>\n    </Scene>\n  );\n}\n\nfunction getFilteredUsers({\n  users,\n  query,\n  filter,\n  role,\n}: {\n  users: UsersStore;\n  query?: string;\n  filter?: string;\n  role?: string;\n}) {\n  let filteredUsers;\n\n  switch (filter) {\n    case \"all\":\n      filteredUsers = users.all;\n      break;\n    case \"suspended\":\n      filteredUsers = users.suspended;\n      break;\n    case \"invited\":\n      filteredUsers = users.invited;\n      break;\n    default:\n      filteredUsers = users.active;\n  }\n\n  if (role) {\n    filteredUsers = filteredUsers.filter((user) => user.role === role);\n  }\n\n  if (query) {\n    filteredUsers = queriedUsers(filteredUsers, query);\n  }\n\n  return filteredUsers;\n}\n\nconst LargeUserStatusFilter = styled(UserStatusFilter)`\n  height: 32px;\n`;\n\nconst LargeUserRoleFilter = styled(UserRoleFilter)`\n  height: 32px;\n`;\n\nexport default observer(Members);\n","import compact from \"lodash/compact\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport FilterOptions from \"~/components/FilterOptions\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\n\ntype Props = {\n  activeKey: string;\n  onSelect: (key: string | null | undefined) => void;\n};\n\nconst UserStatusFilter = ({ activeKey, onSelect, ...rest }: Props) => {\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n\n  const options = React.useMemo(\n    () =>\n      compact([\n        {\n          key: \"all\",\n          label: t(\"All status\"),\n        },\n        {\n          key: \"\",\n          label: t(\"Active\"),\n        },\n        ...(user.isAdmin\n          ? [\n              {\n                key: \"suspended\",\n                label: t(\"Suspended\"),\n              },\n            ]\n          : []),\n        {\n          key: \"invited\",\n          label: t(\"Invited\"),\n        },\n      ]),\n    [t, user.isAdmin]\n  );\n\n  return (\n    <FilterOptions\n      options={options}\n      selectedKeys={[activeKey]}\n      onSelect={onSelect}\n      defaultLabel={t(\"Active\")}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(UserStatusFilter);\n"],"names":["observer","UserMenu","user","users","dialogs","useStores","t","useTranslation","menu","useMenuState","modal","can","usePolicy","context","useActionContext","isContextMenu","handleChangeName","React","ev","preventDefault","openModal","title","content","UserChangeNameDialog","onSubmit","closeAllModals","handleChangeEmail","UserChangeEmailDialog","handleSuspend","UserSuspendDialog","handleRevoke","async","delete","handleResendInvite","resendInvite","toast","success","name","err","error","message","handleActivate","activate","jsxs","Fragment","children","jsx","OverflowMenuButton","ContextMenu","Template","items","type","visible","demote","promote","UserRole","Admin","Member","Viewer","map","actionToMenuItem","updateUserRoleActionFactory","role","onClick","update","dangerous","isInvited","isSuspended","deleteUserActionFactory","id","STICKY_OFFSET","HEADER_HEIGHT","FILTER_HEIGHT","MembersTable","canManage","rest","currentUser","useCurrentUser","columns","compact","header","accessor","component","Flex","align","gap","Avatar","model","size","AvatarSize","Large","width","email","undefined","lastActiveAt","Time","dateTime","addSuffix","Badges","wrap","Badge","isAdmin","primary","isViewer","isGuest","SortableTable","rowHeight","stickyOffset","styled","withConfig","componentId","UserRoleFilter","activeKey","onSelect","options","key","label","FilterOptions","selectedKeys","defaultLabel","getFilteredUsers","query","filter","filteredUsers","all","suspended","invited","active","queriedUsers","LargeUserStatusFilter","UserStatusFilter","LargeUserRoleFilter","Members","appName","env","APP_NAME","location","useLocation","history","useHistory","team","useCurrentTeam","params","useQuery","setQuery","reqParams","get","sort","direction","toUpperCase","desc","data","loading","next","useTableRequest","reqFn","fetchPage","updateParams","value","set","replace","pathname","search","toString","handleStatusFilter","status","handleRoleFilter","handleSearch","event","target","timeout","setTimeout","clearTimeout","Scene","icon","UserIcon","actions","inviteUser","Action","Button","action","PlusIcon","wide","Heading","Text","as","Trans","signinMethods","StickyFilters","InputSearch","short","placeholder","onChange","ConditionalFade","animate","page","hasNext","fetchNext"],"mappings":"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"}