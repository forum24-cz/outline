{"version":3,"file":"index.w9hY2wRL.js","sources":["../../../node_modules/prosemirror-dropcursor/dist/index.js","../../../shared/utils/events.ts","../../../app/editor/components/NodeViewRenderer.tsx","../../../app/editor/components/ComponentView.tsx","../../../node_modules/lodash/_baseSome.js","../../../node_modules/lodash/some.js","../../../shared/editor/queries/isInNotice.ts","../../../app/editor/menus/code.tsx","../../../app/components/Icons/CircleIcon.tsx","../../../app/editor/menus/formatting.tsx","../../../app/editor/menus/tableCol.tsx","../../../app/editor/components/FloatingToolbar.tsx","../../../app/editor/components/ToolbarButton.tsx","../../../app/editor/components/Tooltip.tsx","../../../app/editor/components/LinkEditor.tsx","../../../app/editor/components/ToolbarSeparator.tsx","../../../app/editor/components/ToolbarMenu.tsx","../../../app/editor/components/SelectionToolbar.tsx","../../../app/editor/menus/table.tsx","../../../app/editor/menus/tableRow.tsx","../../../app/editor/menus/image.tsx","../../../app/editor/menus/attachment.tsx","../../../app/editor/menus/divider.tsx","../../../app/editor/menus/readOnly.tsx","../../../app/editor/menus/notice.tsx","../../../app/editor/components/WithTheme.tsx","../../../app/editor/index.tsx"],"sourcesContent":["import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","/**\n * A tiny EventEmitter implementation for the browser.\n */\nexport default class EventEmitter {\n  private listeners: { [name: string]: ((data: unknown) => unknown)[] } = {};\n\n  public addListener(name: string, callback: (data: unknown) => unknown) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n\n    this.listeners[name].push(callback);\n  }\n\n  public removeListener(name: string, callback: (data: unknown) => unknown) {\n    this.listeners[name] = this.listeners[name]?.filter(\n      (cb) => cb !== callback\n    );\n  }\n\n  public on = this.addListener;\n  public off = this.removeListener;\n\n  public emit(name: string, data?: unknown) {\n    this.listeners[name]?.forEach((callback) => {\n      callback(data);\n    });\n  }\n}\n","import isEqual from \"lodash/isEqual\";\nimport { action, computed, observable } from \"mobx\";\nimport React, { FunctionComponent } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nexport class NodeViewRenderer<T extends object> {\n  @observable public props: T;\n\n  public constructor(\n    public element: HTMLElement,\n    private Component: FunctionComponent,\n    props: T\n  ) {\n    this.props = props;\n  }\n\n  @computed\n  public get content() {\n    return createPortal(<this.Component {...this.props} />, this.element);\n  }\n\n  @action\n  public updateProps(props: T) {\n    if (!isEqual(props, this.props)) {\n      this.props = props;\n    }\n  }\n\n  @action\n  public setProp<K extends keyof T>(key: K, value: T[K]) {\n    this.props[key] = value;\n  }\n}\n","import { Node as ProsemirrorNode } from \"prosemirror-model\";\nimport { EditorView, Decoration } from \"prosemirror-view\";\nimport { FunctionComponent } from \"react\";\nimport Extension from \"@shared/editor/lib/Extension\";\nimport { ComponentProps } from \"@shared/editor/types\";\nimport { Editor } from \"~/editor\";\nimport { NodeViewRenderer } from \"./NodeViewRenderer\";\n\ntype ComponentViewConstructor = {\n  /** The editor instance. */\n  editor: Editor;\n  /** The extension the view belongs to. */\n  extension: Extension;\n  /** The node that the view is responsible for. */\n  node: ProsemirrorNode;\n  /** The editor view instance. */\n  view: EditorView;\n  /** A function that returns the current position of the node. */\n  getPos: () => number;\n  /** The decorations applied to the node. */\n  decorations: Decoration[];\n};\n\nexport default class ComponentView {\n  /** The React component to render. */\n  component: FunctionComponent<ComponentProps>;\n  /** The editor instance. */\n  editor: Editor;\n  /** The extension the view belongs to. */\n  extension: Extension;\n  /** The node that the view is responsible for. */\n  node: ProsemirrorNode;\n  /** The editor view instance. */\n  view: EditorView;\n  /** A function that returns the current position of the node. */\n  getPos: () => number;\n  /** The decorations applied to the node. */\n  decorations: Decoration[];\n  /** The renderer instance. */\n  renderer: NodeViewRenderer<ComponentProps>;\n  /** Whether the node is selected. */\n  isSelected = false;\n  /** The DOM element that the node is rendered into. */\n  dom: HTMLElement | null;\n\n  // See https://prosemirror.net/docs/ref/#view.NodeView\n  constructor(\n    component: FunctionComponent<ComponentProps>,\n    {\n      editor,\n      extension,\n      node,\n      view,\n      getPos,\n      decorations,\n    }: ComponentViewConstructor\n  ) {\n    this.component = component;\n    this.editor = editor;\n    this.extension = extension;\n    this.getPos = getPos;\n    this.decorations = decorations;\n    this.node = node;\n    this.view = view;\n    this.dom = node.type.spec.inline\n      ? document.createElement(\"span\")\n      : document.createElement(\"div\");\n\n    this.dom.classList.add(`component-${node.type.name}`);\n    this.renderer = new NodeViewRenderer(this.dom, this.component, this.props);\n\n    // Add the renderer to the editor's set of renderers so that it is included in the React tree.\n    this.editor.renderers.add(this.renderer);\n  }\n\n  update(node: ProsemirrorNode) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    this.node = node;\n    this.renderer.updateProps(this.props);\n    return true;\n  }\n\n  selectNode() {\n    if (this.view.editable) {\n      this.isSelected = true;\n      this.renderer.updateProps(this.props);\n    }\n  }\n\n  deselectNode() {\n    if (this.view.editable) {\n      this.isSelected = false;\n      this.renderer.updateProps(this.props);\n    }\n  }\n\n  stopEvent(event: Event) {\n    return event.type !== \"mousedown\" && !event.type.startsWith(\"drag\");\n  }\n\n  destroy() {\n    this.editor.renderers.delete(this.renderer);\n    this.dom = null;\n  }\n\n  ignoreMutation() {\n    return true;\n  }\n\n  get props() {\n    return {\n      node: this.node,\n      view: this.view,\n      isSelected: this.isSelected,\n      isEditable: this.view.editable,\n      getPos: this.getPos,\n    } as ComponentProps;\n  }\n}\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n","var arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n","import { EditorState } from \"prosemirror-state\";\nimport { isNodeActive } from \"./isNodeActive\";\n\n/**\n * Returns true if the selection is inside a notice block.\n *\n * @param state The editor state.\n * @returns True if the selection is inside a notice block.\n */\nexport function isInNotice(state: EditorState): boolean {\n  const { nodes } = state.schema;\n  return nodes.container_notice && isNodeActive(nodes.container_notice)(state);\n}\n","import { CopyIcon, ExpandedIcon } from \"outline-icons\";\nimport { Node as ProseMirrorNode } from \"prosemirror-model\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport {\n  getFrequentCodeLanguages,\n  codeLanguages,\n  getLabelForLanguage,\n} from \"@shared/editor/lib/code\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function codeMenuItems(\n  state: EditorState,\n  readOnly: boolean | undefined,\n  dictionary: Dictionary\n): MenuItem[] {\n  const node = state.selection.$from.node();\n\n  const frequentLanguages = getFrequentCodeLanguages();\n\n  const frequentLangMenuItems = frequentLanguages.map((value) => {\n    const label = codeLanguages[value]?.label;\n    return langToMenuItem({ node, value, label });\n  });\n\n  const remainingLangMenuItems = Object.entries(codeLanguages)\n    .filter(\n      ([value]) =>\n        !frequentLanguages.includes(value as keyof typeof codeLanguages)\n    )\n    .map(([value, item]) => langToMenuItem({ node, value, label: item.label }));\n\n  const languageMenuItems = frequentLangMenuItems.length\n    ? [\n        ...frequentLangMenuItems,\n        { name: \"separator\" },\n        ...remainingLangMenuItems,\n      ]\n    : remainingLangMenuItems;\n\n  return [\n    {\n      name: \"copyToClipboard\",\n      icon: <CopyIcon />,\n      label: readOnly ? dictionary.copy : undefined,\n      tooltip: dictionary.copy,\n    },\n    {\n      name: \"separator\",\n      visible: !readOnly,\n    },\n    {\n      visible: !readOnly,\n      name: \"code_block\",\n      icon: <ExpandedIcon />,\n      label: getLabelForLanguage(node.attrs.language ?? \"none\"),\n      children: languageMenuItems,\n    },\n  ];\n}\n\nconst langToMenuItem = ({\n  node,\n  value,\n  label,\n}: {\n  node: ProseMirrorNode;\n  value: string;\n  label: string;\n}): MenuItem => ({\n  name: \"code_block\",\n  label,\n  active: () => node.attrs.language === value,\n  attrs: {\n    language: value,\n  },\n});\n","import * as React from \"react\";\n\ntype Props = {\n  /** The size of the icon, 24px is default to match standard icons */\n  size?: number;\n  /** The color of the icon, defaults to the current text color */\n  color?: string;\n  /** If true, the icon will retain its color in selected menus and other places that attempt to override it */\n  retainColor?: boolean;\n};\n\nexport default function CircleIcon({\n  size = 24,\n  color = \"currentColor\",\n  retainColor,\n  ...rest\n}: Props) {\n  return (\n    <svg\n      fill={color}\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      version=\"1.1\"\n      style={retainColor ? { fill: color } : undefined}\n      {...rest}\n    >\n      <circle xmlns=\"http://www.w3.org/2000/svg\" cx=\"12\" cy=\"12\" r=\"8\" />\n    </svg>\n  );\n}\n","import {\n  BoldIcon,\n  CodeIcon,\n  Heading1Icon,\n  Heading2Icon,\n  BlockQuoteIcon,\n  LinkIcon,\n  StrikethroughIcon,\n  OrderedListIcon,\n  BulletedListIcon,\n  TodoListIcon,\n  InputIcon,\n  HighlightIcon,\n  CommentIcon,\n  ItalicIcon,\n  OutdentIcon,\n  IndentIcon,\n  CopyIcon,\n  Heading3Icon,\n} from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Highlight from \"@shared/editor/marks/Highlight\";\nimport { getMarksBetween } from \"@shared/editor/queries/getMarksBetween\";\nimport { isInCode } from \"@shared/editor/queries/isInCode\";\nimport { isInList } from \"@shared/editor/queries/isInList\";\nimport { isMarkActive } from \"@shared/editor/queries/isMarkActive\";\nimport { isNodeActive } from \"@shared/editor/queries/isNodeActive\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { metaDisplay } from \"@shared/utils/keyboard\";\nimport CircleIcon from \"~/components/Icons/CircleIcon\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function formattingMenuItems(\n  state: EditorState,\n  isTemplate: boolean,\n  isMobile: boolean,\n  dictionary: Dictionary\n): MenuItem[] {\n  const { schema } = state;\n  const isCode = isInCode(state);\n  const isCodeBlock = isInCode(state, { onlyBlock: true });\n  const isEmpty = state.selection.empty;\n\n  const highlight = getMarksBetween(\n    state.selection.from,\n    state.selection.to,\n    state\n  ).find(({ mark }) => mark.type.name === \"highlight\");\n\n  return [\n    {\n      name: \"placeholder\",\n      tooltip: dictionary.placeholder,\n      icon: <InputIcon />,\n      active: isMarkActive(schema.marks.placeholder),\n      visible: isTemplate && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"separator\",\n      visible: isTemplate && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"strong\",\n      tooltip: dictionary.strong,\n      shortcut: `${metaDisplay}+B`,\n      icon: <BoldIcon />,\n      active: isMarkActive(schema.marks.strong),\n      visible: !isCode && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"em\",\n      tooltip: dictionary.em,\n      shortcut: `${metaDisplay}+I`,\n      icon: <ItalicIcon />,\n      active: isMarkActive(schema.marks.em),\n      visible: !isCode && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"strikethrough\",\n      tooltip: dictionary.strikethrough,\n      shortcut: `${metaDisplay}+D`,\n      icon: <StrikethroughIcon />,\n      active: isMarkActive(schema.marks.strikethrough),\n      visible: !isCode && (!isMobile || !isEmpty),\n    },\n    {\n      tooltip: dictionary.mark,\n      shortcut: `${metaDisplay}+Ctrl+H`,\n      icon: highlight ? (\n        <CircleIcon color={highlight.mark.attrs.color || Highlight.colors[0]} />\n      ) : (\n        <HighlightIcon />\n      ),\n      active: () => !!highlight,\n      visible: !isCode && (!isMobile || !isEmpty),\n      children: [\n        ...(highlight\n          ? [\n              {\n                name: \"highlight\",\n                label: dictionary.none,\n                icon: <DottedCircleIcon retainColor color=\"transparent\" />,\n                active: () => false,\n                attrs: { color: highlight.mark.attrs.color },\n              },\n            ]\n          : []),\n        ...Highlight.colors.map((color, index) => ({\n          name: \"highlight\",\n          label: Highlight.colorNames[index],\n          icon: <CircleIcon retainColor color={color} />,\n          active: isMarkActive(schema.marks.highlight, { color }),\n          attrs: { color },\n        })),\n      ],\n    },\n    {\n      name: \"code_inline\",\n      tooltip: dictionary.codeInline,\n      shortcut: `${metaDisplay}+E`,\n      icon: <CodeIcon />,\n      active: isMarkActive(schema.marks.code_inline),\n      visible: !isCodeBlock && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"separator\",\n      visible: !isCodeBlock,\n    },\n    {\n      name: \"heading\",\n      tooltip: dictionary.heading,\n      shortcut: `⇧+Ctrl+1`,\n      icon: <Heading1Icon />,\n      active: isNodeActive(schema.nodes.heading, { level: 1 }),\n      attrs: { level: 1 },\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"heading\",\n      tooltip: dictionary.subheading,\n      shortcut: `⇧+Ctrl+2`,\n      icon: <Heading2Icon />,\n      active: isNodeActive(schema.nodes.heading, { level: 2 }),\n      attrs: { level: 2 },\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"heading\",\n      tooltip: dictionary.subheading,\n      shortcut: `⇧+Ctrl+3`,\n      icon: <Heading3Icon />,\n      active: isNodeActive(schema.nodes.heading, { level: 3 }),\n      attrs: { level: 3 },\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"blockquote\",\n      tooltip: dictionary.quote,\n      shortcut: `${metaDisplay}+]`,\n      icon: <BlockQuoteIcon />,\n      active: isNodeActive(schema.nodes.blockquote),\n      attrs: { level: 2 },\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"separator\",\n      visible: !isCodeBlock,\n    },\n    {\n      name: \"checkbox_list\",\n      tooltip: dictionary.checkboxList,\n      shortcut: `⇧+Ctrl+7`,\n      icon: <TodoListIcon />,\n      keywords: \"checklist checkbox task\",\n      active: isNodeActive(schema.nodes.checkbox_list),\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"bullet_list\",\n      tooltip: dictionary.bulletList,\n      shortcut: `⇧+Ctrl+8`,\n      icon: <BulletedListIcon />,\n      active: isNodeActive(schema.nodes.bullet_list),\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"ordered_list\",\n      tooltip: dictionary.orderedList,\n      shortcut: `⇧+Ctrl+9`,\n      icon: <OrderedListIcon />,\n      active: isNodeActive(schema.nodes.ordered_list),\n      visible: !isCodeBlock && (!isMobile || isEmpty),\n    },\n    {\n      name: \"outdentList\",\n      tooltip: dictionary.outdent,\n      shortcut: `⇧+Tab`,\n      icon: <OutdentIcon />,\n      visible:\n        isMobile && isInList(state, { types: [\"ordered_list\", \"bullet_list\"] }),\n    },\n    {\n      name: \"indentList\",\n      tooltip: dictionary.indent,\n      shortcut: `Tab`,\n      icon: <IndentIcon />,\n      visible:\n        isMobile && isInList(state, { types: [\"ordered_list\", \"bullet_list\"] }),\n    },\n    {\n      name: \"outdentCheckboxList\",\n      tooltip: dictionary.outdent,\n      shortcut: `⇧+Tab`,\n      icon: <OutdentIcon />,\n      visible: isMobile && isInList(state, { types: [\"checkbox_list\"] }),\n    },\n    {\n      name: \"indentCheckboxList\",\n      tooltip: dictionary.indent,\n      shortcut: `Tab`,\n      icon: <IndentIcon />,\n      visible: isMobile && isInList(state, { types: [\"checkbox_list\"] }),\n    },\n    {\n      name: \"separator\",\n      visible: !isCodeBlock,\n    },\n    {\n      name: \"link\",\n      tooltip: dictionary.createLink,\n      shortcut: `${metaDisplay}+K`,\n      icon: <LinkIcon />,\n      attrs: { href: \"\" },\n      visible: !isCodeBlock && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"comment\",\n      tooltip: dictionary.comment,\n      shortcut: `${metaDisplay}+⌥+M`,\n      icon: <CommentIcon />,\n      label: isCodeBlock ? dictionary.comment : undefined,\n      active: isMarkActive(\n        schema.marks.comment,\n        { resolved: false },\n        { exact: true }\n      ),\n      visible: !isMobile || !isEmpty,\n    },\n    {\n      name: \"separator\",\n      visible: isCode && !isCodeBlock && (!isMobile || !isEmpty),\n    },\n    {\n      name: \"copyToClipboard\",\n      icon: <CopyIcon />,\n      tooltip: dictionary.copy,\n      shortcut: `${metaDisplay}+C`,\n      visible: isCode && !isCodeBlock && (!isMobile || !isEmpty),\n    },\n  ];\n}\n\nconst DottedCircleIcon = styled(CircleIcon)`\n  circle {\n    stroke: ${(props) => props.theme.textSecondary};\n    stroke-dasharray: 2, 2;\n  }\n`;\n","import {\n  TrashIcon,\n  AlignLeftIcon,\n  AlignRightIcon,\n  AlignCenterIcon,\n  InsertLeftIcon,\n  InsertRightIcon,\n  ArrowIcon,\n  MoreIcon,\n  TableHeaderColumnIcon,\n} from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { isNodeActive } from \"@shared/editor/queries/isNodeActive\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function tableColMenuItems(\n  state: EditorState,\n  index: number,\n  rtl: boolean,\n  dictionary: Dictionary\n): MenuItem[] {\n  const { schema } = state;\n\n  return [\n    {\n      name: \"setColumnAttr\",\n      tooltip: dictionary.alignLeft,\n      icon: <AlignLeftIcon />,\n      attrs: { index, alignment: \"left\" },\n      active: isNodeActive(schema.nodes.th, {\n        colspan: 1,\n        rowspan: 1,\n        alignment: \"left\",\n      }),\n    },\n    {\n      name: \"setColumnAttr\",\n      tooltip: dictionary.alignCenter,\n      icon: <AlignCenterIcon />,\n      attrs: { index, alignment: \"center\" },\n      active: isNodeActive(schema.nodes.th, {\n        colspan: 1,\n        rowspan: 1,\n        alignment: \"center\",\n      }),\n    },\n    {\n      name: \"setColumnAttr\",\n      tooltip: dictionary.alignRight,\n      icon: <AlignRightIcon />,\n      attrs: { index, alignment: \"right\" },\n      active: isNodeActive(schema.nodes.th, {\n        colspan: 1,\n        rowspan: 1,\n        alignment: \"right\",\n      }),\n    },\n    {\n      name: \"separator\",\n    },\n    {\n      name: \"sortTable\",\n      tooltip: dictionary.sortAsc,\n      attrs: { index, direction: \"asc\" },\n      icon: <SortAscIcon />,\n    },\n    {\n      name: \"sortTable\",\n      tooltip: dictionary.sortDesc,\n      attrs: { index, direction: \"desc\" },\n      icon: <SortDescIcon />,\n    },\n    {\n      name: \"separator\",\n    },\n    {\n      icon: <MoreIcon />,\n      children: [\n        {\n          name: \"toggleHeaderColumn\",\n          label: dictionary.toggleHeader,\n          icon: <TableHeaderColumnIcon />,\n          visible: index === 0,\n        },\n        {\n          name: rtl ? \"addColumnAfter\" : \"addColumnBefore\",\n          label: rtl ? dictionary.addColumnAfter : dictionary.addColumnBefore,\n          icon: <InsertLeftIcon />,\n          attrs: { index },\n        },\n        {\n          name: rtl ? \"addColumnBefore\" : \"addColumnAfter\",\n          label: rtl ? dictionary.addColumnBefore : dictionary.addColumnAfter,\n          icon: <InsertRightIcon />,\n          attrs: { index },\n        },\n        {\n          name: \"deleteColumn\",\n          dangerous: true,\n          label: dictionary.deleteColumn,\n          icon: <TrashIcon />,\n        },\n      ],\n    },\n  ];\n}\n\nconst SortAscIcon = styled(ArrowIcon)`\n  transform: rotate(-90deg);\n`;\n\nconst SortDescIcon = styled(ArrowIcon)`\n  transform: rotate(90deg);\n`;\n","import { NodeSelection } from \"prosemirror-state\";\nimport { CellSelection, selectedRect } from \"prosemirror-tables\";\nimport * as React from \"react\";\nimport { Portal as ReactPortal } from \"react-portal\";\nimport styled, { css } from \"styled-components\";\nimport { isCode } from \"@shared/editor/lib/isCode\";\nimport { findParentNode } from \"@shared/editor/queries/findParentNode\";\nimport { EditorStyleHelper } from \"@shared/editor/styles/EditorStyleHelper\";\nimport { depths, s } from \"@shared/styles\";\nimport { HEADER_HEIGHT } from \"~/components/Header\";\nimport { Portal } from \"~/components/Portal\";\nimport useEventListener from \"~/hooks/useEventListener\";\nimport useMobile from \"~/hooks/useMobile\";\nimport useWindowSize from \"~/hooks/useWindowSize\";\nimport Logger from \"~/utils/Logger\";\nimport { useEditor } from \"./EditorContext\";\n\ntype Props = {\n  active?: boolean;\n  children: React.ReactNode;\n  width?: number;\n  forwardedRef?: React.RefObject<HTMLDivElement> | null;\n};\n\nconst defaultPosition = {\n  left: -10000,\n  top: 0,\n  offset: 0,\n  maxWidth: 1000,\n  blockSelection: false,\n  visible: false,\n};\n\nfunction usePosition({\n  menuRef,\n  active,\n}: {\n  menuRef: React.RefObject<HTMLDivElement>;\n  active?: boolean;\n}) {\n  const { view } = useEditor();\n  const { selection } = view.state;\n  const menuWidth = menuRef.current?.offsetWidth;\n  const menuHeight = menuRef.current?.offsetHeight;\n\n  if (!active || !menuWidth || !menuHeight || !menuRef.current) {\n    return defaultPosition;\n  }\n\n  // based on the start and end of the selection calculate the position at\n  // the center top\n  let fromPos;\n  let toPos;\n  try {\n    fromPos = view.coordsAtPos(selection.from);\n    toPos = view.coordsAtPos(selection.to, -1);\n  } catch (err) {\n    Logger.warn(\"Unable to calculate selection position\", err);\n    return defaultPosition;\n  }\n\n  // ensure that start < end for the menu to be positioned correctly\n  const selectionBounds = {\n    top: Math.min(fromPos.top, toPos.top),\n    bottom: Math.max(fromPos.bottom, toPos.bottom),\n    left: Math.min(fromPos.left, toPos.left),\n    right: Math.max(fromPos.right, toPos.right),\n  };\n\n  const offsetParent = menuRef.current.offsetParent\n    ? menuRef.current.offsetParent.getBoundingClientRect()\n    : ({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        top: 0,\n        left: 0,\n      } as DOMRect);\n\n  // position at the top right of code blocks\n  const codeBlock = findParentNode(isCode)(view.state.selection);\n  const noticeBlock = findParentNode(\n    (node) => node.type.name === \"container_notice\"\n  )(view.state.selection);\n\n  if ((codeBlock || noticeBlock) && view.state.selection.empty) {\n    const position = codeBlock\n      ? codeBlock.pos\n      : noticeBlock\n      ? noticeBlock.pos\n      : null;\n\n    if (position !== null) {\n      const element = view.nodeDOM(position);\n      const bounds = (element as HTMLElement).getBoundingClientRect();\n      selectionBounds.top = bounds.top;\n      selectionBounds.left = bounds.right - menuWidth;\n      selectionBounds.right = bounds.right;\n    }\n  }\n\n  // tables are an oddity, and need their own positioning logic\n  const isColSelection =\n    selection instanceof CellSelection && selection.isColSelection();\n  const isRowSelection =\n    selection instanceof CellSelection && selection.isRowSelection();\n\n  if (isColSelection && isRowSelection) {\n    const rect = selectedRect(view.state);\n    const table = view.domAtPos(rect.tableStart);\n    const bounds = (table.node as HTMLElement).getBoundingClientRect();\n    selectionBounds.top = bounds.top - 16;\n    selectionBounds.left = bounds.left - 10;\n    selectionBounds.right = bounds.left - 10;\n  } else if (isColSelection) {\n    const rect = selectedRect(view.state);\n    const table = view.domAtPos(rect.tableStart);\n    const element = (table.node as HTMLElement).querySelector(\n      `tr > *:nth-child(${rect.left + 1})`\n    );\n    if (element instanceof HTMLElement) {\n      const bounds = element.getBoundingClientRect();\n      selectionBounds.top = bounds.top - 16;\n      selectionBounds.left = bounds.left;\n      selectionBounds.right = bounds.right;\n    }\n  } else if (isRowSelection) {\n    const rect = selectedRect(view.state);\n    const table = view.domAtPos(rect.tableStart);\n    const element = (table.node as HTMLElement).querySelector(\n      `tr:nth-child(${rect.top + 1}) > *`\n    );\n    if (element instanceof HTMLElement) {\n      const bounds = element.getBoundingClientRect();\n      selectionBounds.top = bounds.top;\n      selectionBounds.left = bounds.left - 10;\n      selectionBounds.right = bounds.left - 10;\n    }\n  }\n\n  const isImageSelection =\n    selection instanceof NodeSelection && selection.node?.type.name === \"image\";\n\n  // Images need their own positioning to get the toolbar in the center\n  if (isImageSelection) {\n    const element = view.nodeDOM(selection.from);\n\n    // Images are wrapped which impacts positioning - need to get the element\n    // specifically tagged as the handle\n    const imageElement = element\n      ? (element as HTMLElement).getElementsByClassName(\n          EditorStyleHelper.imageHandle\n        )[0]\n      : undefined;\n    if (imageElement) {\n      const { left, top, width } = imageElement.getBoundingClientRect();\n\n      return {\n        left: Math.round(left + width / 2 - menuWidth / 2 - offsetParent.left),\n        top: Math.round(top - menuHeight - offsetParent.top),\n        offset: 0,\n        visible: true,\n      };\n    }\n  }\n\n  // calculate the horizontal center of the selection\n  const halfSelection =\n    Math.abs(selectionBounds.right - selectionBounds.left) / 2;\n  const centerOfSelection = selectionBounds.left + halfSelection;\n\n  // position the menu so that it is centered over the selection except in\n  // the cases where it would extend off the edge of the screen. In these\n  // instances leave a margin\n  const margin = 12;\n  const left = Math.min(\n    Math.min(\n      offsetParent.x + offsetParent.width - menuWidth - margin,\n      window.innerWidth - margin\n    ),\n    Math.max(\n      Math.max(offsetParent.x, margin),\n      centerOfSelection - menuWidth / 2\n    )\n  );\n  const top = Math.max(\n    HEADER_HEIGHT,\n    Math.min(\n      window.innerHeight - menuHeight - margin,\n      Math.max(margin, selectionBounds.top - menuHeight)\n    )\n  );\n\n  // if the menu has been offset to not extend offscreen then we should adjust\n  // the position of the triangle underneath to correctly point to the center\n  // of the selection still\n  const offset = left - (centerOfSelection - menuWidth / 2);\n  return {\n    left: Math.max(margin, Math.round(left - offsetParent.left)),\n    top: Math.round(top - offsetParent.top),\n    offset: Math.round(offset),\n    maxWidth: Math.min(window.innerWidth, offsetParent.width) - margin * 2,\n    blockSelection:\n      codeBlock || isColSelection || isRowSelection || noticeBlock,\n    visible: true,\n  };\n}\n\nconst FloatingToolbar = React.forwardRef(function FloatingToolbar_(\n  props: Props,\n  ref: React.RefObject<HTMLDivElement>\n) {\n  const menuRef = ref || React.createRef<HTMLDivElement>();\n  const [isSelectingText, setSelectingText] = React.useState(false);\n\n  let position = usePosition({\n    menuRef,\n    active: props.active,\n  });\n\n  if (isSelectingText) {\n    position = defaultPosition;\n  }\n\n  useEventListener(\"mouseup\", () => {\n    setSelectingText(false);\n  });\n\n  useEventListener(\"mousedown\", () => {\n    if (!props.active) {\n      setSelectingText(true);\n    }\n  });\n\n  const isMobile = useMobile();\n  const { height } = useWindowSize();\n\n  if (isMobile) {\n    if (!props.children) {\n      return null;\n    }\n\n    if (props.active) {\n      const rect = document.body.getBoundingClientRect();\n      return (\n        <ReactPortal>\n          <MobileWrapper\n            ref={menuRef}\n            style={{\n              bottom: `calc(100% - ${height - rect.y}px)`,\n            }}\n          >\n            {props.children}\n          </MobileWrapper>\n        </ReactPortal>\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Wrapper\n        active={props.active && position.visible}\n        arrow={!position.blockSelection}\n        ref={menuRef}\n        $offset={position.offset}\n        style={{\n          width: props.width,\n          maxWidth: `${position.maxWidth}px`,\n          top: `${position.top}px`,\n          left: `${position.left}px`,\n        }}\n      >\n        {props.children}\n      </Wrapper>\n    </Portal>\n  );\n});\n\ntype WrapperProps = {\n  active?: boolean;\n  arrow?: boolean;\n  $offset: number;\n};\n\nconst arrow = (props: WrapperProps) =>\n  props.arrow\n    ? css`\n        &::before {\n          content: \"\";\n          display: block;\n          width: 24px;\n          height: 24px;\n          transform: translateX(-50%) rotate(45deg);\n          background: ${s(\"menuBackground\")};\n          border-radius: 3px;\n          z-index: -1;\n          position: absolute;\n          bottom: -2px;\n          left: calc(50% - ${props.$offset || 0}px);\n          pointer-events: none;\n        }\n      `\n    : \"\";\n\nconst MobileWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n\n  width: 100vw;\n  padding: 10px 6px;\n  background-color: ${s(\"menuBackground\")};\n  border-top: 1px solid ${s(\"divider\")};\n  box-sizing: border-box;\n  z-index: ${depths.editorToolbar};\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    height: 100px;\n    background-color: ${s(\"menuBackground\")};\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\nconst Wrapper = styled.div<WrapperProps>`\n  will-change: opacity, transform;\n  padding: 6px;\n  position: absolute;\n  z-index: ${depths.editorToolbar};\n  opacity: 0;\n  background-color: ${s(\"menuBackground\")};\n  box-shadow: ${s(\"menuShadow\")};\n  border-radius: 4px;\n  transform: scale(0.95);\n  transition: opacity 150ms cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    transform 150ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  transition-delay: 150ms;\n  line-height: 0;\n  height: 36px;\n  box-sizing: border-box;\n  pointer-events: none;\n  white-space: nowrap;\n\n  ${arrow}\n\n  * {\n    box-sizing: border-box;\n  }\n\n  ${({ active }) =>\n    active &&\n    `\n    transform: translateY(-6px) scale(1);\n    opacity: 1;\n  `};\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default FloatingToolbar;\n","import styled, { css } from \"styled-components\";\nimport { extraArea, s } from \"@shared/styles\";\n\ntype Props = {\n  active?: boolean;\n  disabled?: boolean;\n  hovering?: boolean;\n};\n\nexport default styled.button.attrs((props) => ({\n  type: props.type || \"button\",\n}))<Props>`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  flex: 0;\n  min-width: 24px;\n  height: 24px;\n  cursor: var(--pointer);\n  border: none;\n  border-radius: 4px;\n  background: none;\n  transition: opacity 100ms ease-in-out;\n  padding: 0;\n  opacity: 0.8;\n  outline: none;\n  pointer-events: all;\n  position: relative;\n  transition: background 100ms ease-in-out;\n  color: ${s(\"text\")};\n\n  &:hover {\n    opacity: 1;\n  }\n\n  ${(props) =>\n    props.hovering &&\n    css`\n      opacity: 1;\n    `};\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: default;\n  }\n\n  ${extraArea(4)}\n\n  ${(props) =>\n    props.active &&\n    css`\n      opacity: 1;\n      color: ${s(\"accentText\")};\n      background: ${s(\"accent\")};\n    `};\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Tooltip, { Props } from \"~/components/Tooltip\";\n\nconst WrappedTooltip: React.FC<Props> = ({\n  children,\n  content,\n  ...rest\n}: Props) => (\n  <Tooltip\n    offset={[0, 16]}\n    delay={150}\n    content={content}\n    placement=\"top\"\n    shortcutOnNewline\n    {...rest}\n  >\n    <TooltipContent>{children}</TooltipContent>\n  </Tooltip>\n);\n\nconst TooltipContent = styled.span`\n  outline: none;\n`;\n\nexport default WrappedTooltip;\n","import { observer } from \"mobx-react\";\nimport { ArrowIcon, CloseIcon, DocumentIcon, OpenIcon } from \"outline-icons\";\nimport { Mark } from \"prosemirror-model\";\nimport { Selection } from \"prosemirror-state\";\nimport { EditorView } from \"prosemirror-view\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { toast } from \"sonner\";\nimport styled from \"styled-components\";\nimport Icon from \"@shared/components/Icon\";\nimport { hideScrollbars, s } from \"@shared/styles\";\nimport { isInternalUrl, sanitizeUrl } from \"@shared/utils/urls\";\nimport Flex from \"~/components/Flex\";\nimport { ResizingHeightContainer } from \"~/components/ResizingHeightContainer\";\nimport Scrollable from \"~/components/Scrollable\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\nimport useRequest from \"~/hooks/useRequest\";\nimport useStores from \"~/hooks/useStores\";\nimport { client } from \"~/utils/ApiClient\";\nimport Input from \"./Input\";\nimport SuggestionsMenuItem from \"./SuggestionsMenuItem\";\nimport ToolbarButton from \"./ToolbarButton\";\nimport Tooltip from \"./Tooltip\";\n\ntype Props = {\n  mark?: Mark;\n  from: number;\n  to: number;\n  dictionary: Dictionary;\n  onRemoveLink?: () => void;\n  onSelectLink: (options: {\n    href: string;\n    title?: string;\n    from: number;\n    to: number;\n  }) => void;\n  onClickLink: (\n    href: string,\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => void;\n  view: EditorView;\n};\n\nconst LinkEditor: React.FC<Props> = ({\n  mark,\n  from,\n  to,\n  dictionary,\n  onRemoveLink,\n  onSelectLink,\n  onClickLink,\n  view,\n}) => {\n  const getHref = () => sanitizeUrl(mark?.attrs.href) ?? \"\";\n  const initialValue = getHref();\n  const initialSelectionLength = to - from;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const discardRef = useRef(false);\n  const [query, setQuery] = useState(initialValue);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const { documents } = useStores();\n\n  const trimmedQuery = query.trim();\n  const results = trimmedQuery\n    ? documents.findByQuery(trimmedQuery, { maxResults: 25 })\n    : [];\n\n  const { request } = useRequest(\n    React.useCallback(async () => {\n      const res = await client.post(\"/suggestions.mention\", { query });\n      res.data.documents.map(documents.add);\n    }, [query])\n  );\n\n  useEffect(() => {\n    if (trimmedQuery) {\n      void request();\n    }\n  }, [trimmedQuery, request]);\n\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"k\" && event.metaKey) {\n        inputRef.current?.select();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleGlobalKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n\n      // If we discarded the changes then nothing to do\n      if (discardRef.current) {\n        return;\n      }\n\n      // If the link is the same as it was when the editor opened, nothing to do\n      if (trimmedQuery === initialValue) {\n        return;\n      }\n\n      // If the link is totally empty or only spaces then remove the mark\n      if (!trimmedQuery) {\n        return handleRemoveLink();\n      }\n\n      save(trimmedQuery, trimmedQuery);\n    };\n  }, [trimmedQuery, initialValue]);\n\n  const save = (href: string, title?: string) => {\n    href = href.trim();\n\n    if (href.length === 0) {\n      return;\n    }\n\n    discardRef.current = true;\n    href = sanitizeUrl(href) ?? \"\";\n\n    onSelectLink({ href, title, from, to });\n  };\n\n  const moveSelectionToEnd = () => {\n    const { state, dispatch } = view;\n    const nextSelection = Selection.findFrom(state.tr.doc.resolve(to), 1, true);\n    if (nextSelection) {\n      dispatch(state.tr.setSelection(nextSelection));\n    }\n    view.focus();\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.key) {\n      case \"ArrowDown\": {\n        event.preventDefault();\n        const maxIndex = results.length - 1;\n        setSelectedIndex((current) => (current >= maxIndex ? 0 : current + 1));\n        return;\n      }\n      case \"ArrowUp\": {\n        event.preventDefault();\n        const maxIndex = results.length - 1;\n        setSelectedIndex((current) => (current <= 0 ? maxIndex : current - 1));\n        return;\n      }\n      case \"Enter\": {\n        event.preventDefault();\n\n        if (selectedIndex >= 0 && results[selectedIndex]) {\n          const selectedDoc = results[selectedIndex];\n          const href = selectedDoc.url;\n          save(href, selectedDoc.title);\n        } else {\n          save(trimmedQuery, trimmedQuery);\n        }\n\n        if (initialSelectionLength) {\n          moveSelectionToEnd();\n        }\n        return;\n      }\n      case \"Escape\": {\n        event.preventDefault();\n\n        if (initialValue) {\n          setQuery(initialValue);\n          moveSelectionToEnd();\n        } else {\n          handleRemoveLink();\n        }\n        return;\n      }\n    }\n  };\n\n  const handleSearch = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    setQuery(newValue);\n    setSelectedIndex(-1);\n  };\n\n  const handlePaste = () => {\n    setTimeout(() => save(query, query), 0);\n  };\n\n  const handleOpenLink = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    try {\n      onClickLink(getHref(), event);\n    } catch (err) {\n      toast.error(dictionary.openLinkError);\n    }\n  };\n\n  const handleRemoveLink = () => {\n    discardRef.current = true;\n\n    const { state, dispatch } = view;\n    if (mark) {\n      dispatch(state.tr.removeMark(from, to, mark));\n    }\n\n    onRemoveLink?.();\n    view.focus();\n  };\n\n  const isInternal = isInternalUrl(query);\n  const hasResults = !!results.length;\n\n  return (\n    <>\n      <Wrapper>\n        <Input\n          ref={inputRef}\n          value={query}\n          placeholder={dictionary.searchOrPasteLink}\n          onKeyDown={handleKeyDown}\n          onPaste={handlePaste}\n          onChange={handleSearch}\n          onFocus={handleSearch}\n          autoFocus={getHref() === \"\"}\n          readOnly={!view.editable}\n        />\n        <Tooltip\n          content={isInternal ? dictionary.goToLink : dictionary.openLink}\n        >\n          <ToolbarButton onClick={handleOpenLink} disabled={!query}>\n            {isInternal ? <ArrowIcon /> : <OpenIcon />}\n          </ToolbarButton>\n        </Tooltip>\n        {view.editable && (\n          <Tooltip content={dictionary.removeLink}>\n            <ToolbarButton onClick={handleRemoveLink}>\n              <CloseIcon />\n            </ToolbarButton>\n          </Tooltip>\n        )}\n      </Wrapper>\n      <SearchResults $hasResults={hasResults}>\n        <ResizingHeightContainer>\n          {hasResults && (\n            <>\n              {results.map((doc, index) => (\n                <SuggestionsMenuItem\n                  onClick={() => {\n                    save(doc.url, doc.title);\n                    if (initialSelectionLength) {\n                      moveSelectionToEnd();\n                    }\n                  }}\n                  onPointerMove={() => setSelectedIndex(index)}\n                  selected={index === selectedIndex}\n                  key={doc.id}\n                  subtitle={doc.collection?.name}\n                  title={doc.title}\n                  icon={\n                    doc.icon ? (\n                      <Icon value={doc.icon} color={doc.color ?? undefined} />\n                    ) : (\n                      <DocumentIcon />\n                    )\n                  }\n                />\n              ))}\n            </>\n          )}\n        </ResizingHeightContainer>\n      </SearchResults>\n    </>\n  );\n};\n\nconst Wrapper = styled(Flex)`\n  pointer-events: all;\n  gap: 8px;\n`;\n\nconst SearchResults = styled(Scrollable)<{ $hasResults: boolean }>`\n  background: ${s(\"menuBackground\")};\n  box-shadow: ${(props) => (props.$hasResults ? s(\"menuShadow\") : \"none\")};\n  clip-path: inset(0px -100px -100px -100px);\n  position: absolute;\n  top: 100%;\n  width: 100%;\n  height: auto;\n  left: 0;\n  margin-top: -6px;\n  border-radius: 0 0 4px 4px;\n  padding: ${(props) => (props.$hasResults ? \"6px\" : \"0\")};\n  max-height: 240px;\n  pointer-events: all;\n\n  ${hideScrollbars()}\n\n  @media (hover: none) and (pointer: coarse) {\n    position: fixed;\n    top: auto;\n    bottom: 40px;\n    border-radius: 0;\n    max-height: 50vh;\n    padding: 8px 8px 4px;\n  }\n`;\n\nexport default observer(LinkEditor);\n","import styled from \"styled-components\";\nimport { s } from \"@shared/styles\";\n\nconst Separator = styled.div`\n  height: 36px;\n  width: 1px;\n  background: ${s(\"textTertiary\")};\n  opacity: 0.25;\n  display: inline-block;\n  margin: -6px 2px;\n`;\n\nexport default Separator;\n","import { TippyProps } from \"@tippyjs/react\";\nimport * as React from \"react\";\nimport { useMenuState } from \"reakit\";\nimport { MenuButton } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { s } from \"@shared/styles\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport { TooltipProvider } from \"~/components/TooltipContext\";\nimport { MenuItem as TMenuItem } from \"~/types\";\nimport { useEditor } from \"./EditorContext\";\nimport ToolbarButton from \"./ToolbarButton\";\nimport ToolbarSeparator from \"./ToolbarSeparator\";\nimport Tooltip from \"./Tooltip\";\n\ntype Props = {\n  items: MenuItem[];\n};\n\n/*\n * Renders a dropdown menu in the floating toolbar.\n */\nfunction ToolbarDropdown(props: { active: boolean; item: MenuItem }) {\n  const menu = useMenuState();\n  const { commands, view } = useEditor();\n  const { item } = props;\n  const { state } = view;\n\n  const items: TMenuItem[] = React.useMemo(() => {\n    const handleClick = (menuItem: MenuItem) => () => {\n      if (!menuItem.name) {\n        return;\n      }\n\n      commands[menuItem.name](\n        typeof menuItem.attrs === \"function\"\n          ? menuItem.attrs(state)\n          : menuItem.attrs\n      );\n    };\n\n    return item.children\n      ? item.children.map((child) => {\n          if (child.name === \"separator\") {\n            return { type: \"separator\", visible: child.visible };\n          }\n          return {\n            type: \"button\",\n            title: child.label,\n            icon: child.icon,\n            dangerous: child.dangerous,\n            visible: child.visible,\n            selected:\n              child.active !== undefined ? child.active(state) : undefined,\n            onClick: handleClick(child),\n          };\n        })\n      : [];\n  }, [item.children, commands, state]);\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(buttonProps) => (\n          <ToolbarButton {...buttonProps} hovering={menu.visible}>\n            {item.label && <Label>{item.label}</Label>}\n            {item.icon}\n          </ToolbarButton>\n        )}\n      </MenuButton>\n      <ContextMenu aria-label={item.label} {...menu}>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nconst tippyProps = { placement: \"top\" } as TippyProps;\n\nfunction ToolbarMenu(props: Props) {\n  const { commands, view } = useEditor();\n  const { items } = props;\n  const { state } = view;\n\n  const handleClick = (item: MenuItem) => () => {\n    if (!item.name) {\n      return;\n    }\n\n    commands[item.name](\n      typeof item.attrs === \"function\" ? item.attrs(state) : item.attrs\n    );\n  };\n\n  return (\n    <TooltipProvider tippyProps={tippyProps}>\n      <FlexibleWrapper>\n        {items.map((item, index) => {\n          if (item.name === \"separator\" && item.visible !== false) {\n            return <ToolbarSeparator key={index} />;\n          }\n          if (item.visible === false || !item.icon) {\n            return null;\n          }\n          const isActive = item.active ? item.active(state) : false;\n\n          return (\n            <Tooltip\n              key={index}\n              shortcut={item.shortcut}\n              content={item.label === item.tooltip ? undefined : item.tooltip}\n            >\n              {item.children ? (\n                <ToolbarDropdown active={isActive && !item.label} item={item} />\n              ) : (\n                <ToolbarButton\n                  onClick={handleClick(item)}\n                  active={isActive && !item.label}\n                >\n                  {item.label && <Label>{item.label}</Label>}\n                  {item.icon}\n                </ToolbarButton>\n              )}\n            </Tooltip>\n          );\n        })}\n      </FlexibleWrapper>\n    </TooltipProvider>\n  );\n}\n\nconst FlexibleWrapper = styled.div`\n  color: ${s(\"textSecondary\")};\n  overflow: hidden;\n  display: flex;\n  gap: 6px;\n\n  ${breakpoint(\"mobile\", \"tablet\")`\n    justify-content: space-evenly;\n    align-items: baseline;\n  `}\n`;\n\nconst Label = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n  color: ${s(\"text\")};\n`;\n\nexport default ToolbarMenu;\n","import some from \"lodash/some\";\nimport { EditorState, NodeSelection, TextSelection } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport filterExcessSeparators from \"@shared/editor/lib/filterExcessSeparators\";\nimport { getMarkRange } from \"@shared/editor/queries/getMarkRange\";\nimport { isInCode } from \"@shared/editor/queries/isInCode\";\nimport { isInNotice } from \"@shared/editor/queries/isInNotice\";\nimport { isMarkActive } from \"@shared/editor/queries/isMarkActive\";\nimport { isNodeActive } from \"@shared/editor/queries/isNodeActive\";\nimport { getColumnIndex, getRowIndex } from \"@shared/editor/queries/table\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useDictionary from \"~/hooks/useDictionary\";\nimport useEventListener from \"~/hooks/useEventListener\";\nimport useMobile from \"~/hooks/useMobile\";\nimport usePrevious from \"~/hooks/usePrevious\";\nimport getAttachmentMenuItems from \"../menus/attachment\";\nimport getCodeMenuItems from \"../menus/code\";\nimport getDividerMenuItems from \"../menus/divider\";\nimport getFormattingMenuItems from \"../menus/formatting\";\nimport getImageMenuItems from \"../menus/image\";\nimport getNoticeMenuItems from \"../menus/notice\";\nimport getReadOnlyMenuItems from \"../menus/readOnly\";\nimport getTableMenuItems from \"../menus/table\";\nimport getTableColMenuItems from \"../menus/tableCol\";\nimport getTableRowMenuItems from \"../menus/tableRow\";\nimport { useEditor } from \"./EditorContext\";\nimport FloatingToolbar from \"./FloatingToolbar\";\nimport LinkEditor from \"./LinkEditor\";\nimport ToolbarMenu from \"./ToolbarMenu\";\n\ntype Props = {\n  rtl: boolean;\n  isTemplate: boolean;\n  readOnly?: boolean;\n  canComment?: boolean;\n  canUpdate?: boolean;\n  onOpen: () => void;\n  onClose: () => void;\n  onClickLink: (\n    href: string,\n    event: MouseEvent | React.MouseEvent<HTMLButtonElement>\n  ) => void;\n};\n\nfunction useIsActive(state: EditorState) {\n  const { selection, doc } = state;\n\n  if (isMarkActive(state.schema.marks.link)(state)) {\n    return true;\n  }\n  if (\n    (isNodeActive(state.schema.nodes.code_block)(state) ||\n      isNodeActive(state.schema.nodes.code_fence)(state)) &&\n    selection.from > 0\n  ) {\n    return true;\n  }\n\n  if (isInNotice(state) && selection.from > 0) {\n    return true;\n  }\n\n  if (!selection || selection.empty) {\n    return false;\n  }\n  if (selection instanceof NodeSelection && selection.node.type.name === \"hr\") {\n    return true;\n  }\n  if (\n    selection instanceof NodeSelection &&\n    [\"image\", \"attachment\"].includes(selection.node.type.name)\n  ) {\n    return true;\n  }\n  if (selection instanceof NodeSelection) {\n    return false;\n  }\n\n  const selectionText = doc.cut(selection.from, selection.to).textContent;\n  if (selection instanceof TextSelection && !selectionText) {\n    return false;\n  }\n\n  const slice = selection.content();\n  const fragment = slice.content;\n  const nodes = (fragment as any).content;\n\n  return some(nodes, (n) => n.content.size);\n}\n\nfunction useIsDragging() {\n  const [isDragging, setDragging, setNotDragging] = useBoolean();\n  useEventListener(\"dragstart\", setDragging);\n  useEventListener(\"dragend\", setNotDragging);\n  useEventListener(\"drop\", setNotDragging);\n  return isDragging;\n}\n\nexport default function SelectionToolbar(props: Props) {\n  const { onClose, readOnly, onOpen } = props;\n  const { view, commands } = useEditor();\n  const dictionary = useDictionary();\n  const menuRef = React.useRef<HTMLDivElement | null>(null);\n  const isMobile = useMobile();\n  const isActive = useIsActive(view.state) || isMobile;\n  const isDragging = useIsDragging();\n  const previousIsActive = usePrevious(isActive);\n\n  React.useEffect(() => {\n    // Trigger callbacks when the toolbar is opened or closed\n    if (previousIsActive && !isActive) {\n      onClose();\n    }\n    if (!previousIsActive && isActive) {\n      onOpen();\n    }\n  }, [isActive, onClose, onOpen, previousIsActive]);\n\n  React.useEffect(() => {\n    const handleClickOutside = (ev: MouseEvent): void => {\n      if (\n        ev.target instanceof HTMLElement &&\n        menuRef.current &&\n        menuRef.current.contains(ev.target)\n      ) {\n        return;\n      }\n      if (view.dom.contains(ev.target as HTMLElement)) {\n        return;\n      }\n\n      if (!isActive || document.activeElement?.tagName === \"INPUT\") {\n        return;\n      }\n\n      if (!window.getSelection()?.isCollapsed) {\n        return;\n      }\n\n      const { dispatch } = view;\n      dispatch(\n        view.state.tr.setSelection(new TextSelection(view.state.doc.resolve(0)))\n      );\n    };\n\n    window.addEventListener(\"mouseup\", handleClickOutside);\n\n    return () => {\n      window.removeEventListener(\"mouseup\", handleClickOutside);\n    };\n  }, [isActive, previousIsActive, readOnly, view]);\n\n  const handleOnSelectLink = ({\n    href,\n    from,\n    to,\n  }: {\n    href: string;\n    from: number;\n    to: number;\n  }): void => {\n    const { state, dispatch } = view;\n\n    const markType = state.schema.marks.link;\n\n    dispatch(\n      state.tr\n        .removeMark(from, to, markType)\n        .addMark(from, to, markType.create({ href }))\n    );\n  };\n\n  const { isTemplate, rtl, canComment, canUpdate, ...rest } = props;\n  const { state } = view;\n  const { selection } = state;\n  const isDividerSelection = isNodeActive(state.schema.nodes.hr)(state);\n\n  if ((readOnly && !canComment) || isDragging) {\n    return null;\n  }\n\n  const colIndex = getColumnIndex(state);\n  const rowIndex = getRowIndex(state);\n  const isTableSelection = colIndex !== undefined && rowIndex !== undefined;\n  const link = getMarkRange(selection.$from, state.schema.marks.link);\n  const isImageSelection =\n    selection instanceof NodeSelection && selection.node.type.name === \"image\";\n  const isAttachmentSelection =\n    selection instanceof NodeSelection &&\n    selection.node.type.name === \"attachment\";\n  const isCodeSelection = isInCode(state, { onlyBlock: true });\n  const isNoticeSelection = isInNotice(state);\n\n  let items: MenuItem[] = [];\n\n  if (isCodeSelection && selection.empty) {\n    items = getCodeMenuItems(state, readOnly, dictionary);\n  } else if (isTableSelection) {\n    items = getTableMenuItems(state, dictionary);\n  } else if (colIndex !== undefined) {\n    items = getTableColMenuItems(state, colIndex, rtl, dictionary);\n  } else if (rowIndex !== undefined) {\n    items = getTableRowMenuItems(state, rowIndex, dictionary);\n  } else if (isImageSelection) {\n    items = readOnly ? [] : getImageMenuItems(state, dictionary);\n  } else if (isAttachmentSelection) {\n    items = readOnly ? [] : getAttachmentMenuItems(state, dictionary);\n  } else if (isDividerSelection) {\n    items = getDividerMenuItems(state, dictionary);\n  } else if (readOnly) {\n    items = getReadOnlyMenuItems(state, !!canUpdate, dictionary);\n  } else if (isNoticeSelection && selection.empty) {\n    items = getNoticeMenuItems(state, readOnly, dictionary);\n  } else {\n    items = getFormattingMenuItems(state, isTemplate, isMobile, dictionary);\n  }\n\n  // Some extensions may be disabled, remove corresponding items\n  items = items.filter((item) => {\n    if (item.name === \"separator\") {\n      return true;\n    }\n    if (item.name && !commands[item.name]) {\n      return false;\n    }\n    if (item.visible === false) {\n      return false;\n    }\n    return true;\n  });\n\n  items = filterExcessSeparators(items);\n  if (!items.length) {\n    return null;\n  }\n\n  const showLinkToolbar =\n    link && link.from === selection.from && link.to === selection.to;\n\n  return (\n    <FloatingToolbar\n      active={isActive}\n      ref={menuRef}\n      width={showLinkToolbar ? 336 : undefined}\n    >\n      {showLinkToolbar ? (\n        <LinkEditor\n          key={`${link.from}-${link.to}`}\n          dictionary={dictionary}\n          view={view}\n          mark={link.mark}\n          from={link.from}\n          to={link.to}\n          onClickLink={props.onClickLink}\n          onSelectLink={handleOnSelectLink}\n        />\n      ) : (\n        <ToolbarMenu items={items} {...rest} />\n      )}\n    </FloatingToolbar>\n  );\n}\n","import { AlignFullWidthIcon, DownloadIcon, TrashIcon } from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { isNodeActive } from \"@shared/editor/queries/isNodeActive\";\nimport { MenuItem, TableLayout } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function tableMenuItems(\n  state: EditorState,\n  dictionary: Dictionary\n): MenuItem[] {\n  const { schema } = state;\n  const isFullWidth = isNodeActive(schema.nodes.table, {\n    layout: TableLayout.fullWidth,\n  })(state);\n\n  return [\n    {\n      name: \"setTableAttr\",\n      tooltip: isFullWidth\n        ? dictionary.alignDefaultWidth\n        : dictionary.alignFullWidth,\n      icon: <AlignFullWidthIcon />,\n      attrs: isFullWidth ? { layout: null } : { layout: TableLayout.fullWidth },\n      active: () => isFullWidth,\n    },\n    {\n      name: \"separator\",\n    },\n    {\n      name: \"deleteTable\",\n      tooltip: dictionary.deleteTable,\n      icon: <TrashIcon />,\n    },\n    {\n      name: \"separator\",\n    },\n    {\n      name: \"exportTable\",\n      tooltip: dictionary.exportAsCSV,\n      label: \"CSV\",\n      attrs: { format: \"csv\", fileName: `${window.document.title}.csv` },\n      icon: <DownloadIcon />,\n    },\n  ];\n}\n","import {\n  TrashIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  MoreIcon,\n  TableHeaderRowIcon,\n} from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function tableRowMenuItems(\n  state: EditorState,\n  index: number,\n  dictionary: Dictionary\n): MenuItem[] {\n  return [\n    {\n      icon: <MoreIcon />,\n      children: [\n        {\n          name: \"toggleHeaderRow\",\n          label: dictionary.toggleHeader,\n          icon: <TableHeaderRowIcon />,\n          visible: index === 0,\n        },\n        {\n          name: \"addRowBefore\",\n          label: dictionary.addRowBefore,\n          icon: <InsertAboveIcon />,\n          attrs: { index },\n        },\n        {\n          name: \"addRowAfter\",\n          label: dictionary.addRowAfter,\n          icon: <InsertBelowIcon />,\n          attrs: { index },\n        },\n        {\n          name: \"deleteRow\",\n          label: dictionary.deleteRow,\n          dangerous: true,\n          icon: <TrashIcon />,\n        },\n      ],\n    },\n  ];\n}\n","import {\n  TrashIcon,\n  DownloadIcon,\n  ReplaceIcon,\n  AlignImageLeftIcon,\n  AlignImageRightIcon,\n  AlignImageCenterIcon,\n  AlignFullWidthIcon,\n} from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { isNodeActive } from \"@shared/editor/queries/isNodeActive\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function imageMenuItems(\n  state: EditorState,\n  dictionary: Dictionary\n): MenuItem[] {\n  const { schema } = state;\n  const isLeftAligned = isNodeActive(schema.nodes.image, {\n    layoutClass: \"left-50\",\n  });\n  const isRightAligned = isNodeActive(schema.nodes.image, {\n    layoutClass: \"right-50\",\n  });\n  const isFullWidthAligned = isNodeActive(schema.nodes.image, {\n    layoutClass: \"full-width\",\n  });\n\n  return [\n    {\n      name: \"alignLeft\",\n      tooltip: dictionary.alignLeft,\n      icon: <AlignImageLeftIcon />,\n      active: isLeftAligned,\n    },\n    {\n      name: \"alignCenter\",\n      tooltip: dictionary.alignCenter,\n      icon: <AlignImageCenterIcon />,\n      active: (state) =>\n        isNodeActive(schema.nodes.image)(state) &&\n        !isLeftAligned(state) &&\n        !isRightAligned(state) &&\n        !isFullWidthAligned(state),\n    },\n    {\n      name: \"alignRight\",\n      tooltip: dictionary.alignRight,\n      icon: <AlignImageRightIcon />,\n      active: isRightAligned,\n    },\n    {\n      name: \"alignFullWidth\",\n      tooltip: dictionary.alignFullWidth,\n      icon: <AlignFullWidthIcon />,\n      active: isFullWidthAligned,\n    },\n    {\n      name: \"separator\",\n    },\n    {\n      name: \"downloadImage\",\n      tooltip: dictionary.downloadImage,\n      icon: <DownloadIcon />,\n      visible: !!fetch,\n    },\n    {\n      name: \"replaceImage\",\n      tooltip: dictionary.replaceImage,\n      icon: <ReplaceIcon />,\n    },\n    {\n      name: \"deleteImage\",\n      tooltip: dictionary.deleteImage,\n      icon: <TrashIcon />,\n    },\n  ];\n}\n","import { TrashIcon, DownloadIcon, ReplaceIcon } from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function attachmentMenuItems(\n  state: EditorState,\n  dictionary: Dictionary\n): MenuItem[] {\n  return [\n    {\n      name: \"replaceAttachment\",\n      tooltip: dictionary.replaceAttachment,\n      icon: <ReplaceIcon />,\n    },\n    {\n      name: \"deleteAttachment\",\n      tooltip: dictionary.deleteAttachment,\n      icon: <TrashIcon />,\n    },\n    {\n      name: \"separator\",\n    },\n    {\n      name: \"downloadAttachment\",\n      label: dictionary.download,\n      icon: <DownloadIcon />,\n      visible: !!fetch,\n    },\n  ];\n}\n","import { PageBreakIcon, HorizontalRuleIcon } from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { isNodeActive } from \"@shared/editor/queries/isNodeActive\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function dividerMenuItems(\n  state: EditorState,\n  dictionary: Dictionary\n): MenuItem[] {\n  const { schema } = state;\n\n  return [\n    {\n      name: \"hr\",\n      tooltip: dictionary.hr,\n      attrs: { markup: \"---\" },\n      active: isNodeActive(schema.nodes.hr, { markup: \"---\" }),\n      icon: <HorizontalRuleIcon />,\n    },\n    {\n      name: \"hr\",\n      tooltip: dictionary.pageBreak,\n      attrs: { markup: \"***\" },\n      active: isNodeActive(schema.nodes.hr, { markup: \"***\" }),\n      icon: <PageBreakIcon />,\n    },\n  ];\n}\n","import { CommentIcon } from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { isMarkActive } from \"@shared/editor/queries/isMarkActive\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function readOnlyMenuItems(\n  state: EditorState,\n  canUpdate: boolean,\n  dictionary: Dictionary\n): MenuItem[] {\n  const { schema } = state;\n  const isEmpty = state.selection.empty;\n\n  return [\n    {\n      visible: canUpdate && !isEmpty,\n      name: \"comment\",\n      tooltip: dictionary.comment,\n      label: dictionary.comment,\n      icon: <CommentIcon />,\n      active: isMarkActive(schema.marks.comment),\n    },\n  ];\n}\n","import {\n  DoneIcon,\n  ExpandedIcon,\n  InfoIcon,\n  StarredIcon,\n  WarningIcon,\n} from \"outline-icons\";\nimport { EditorState } from \"prosemirror-state\";\nimport * as React from \"react\";\nimport { NoticeTypes } from \"@shared/editor/nodes/Notice\";\nimport { MenuItem } from \"@shared/editor/types\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\n\nexport default function noticeMenuItems(\n  state: EditorState,\n  readOnly: boolean | undefined,\n  dictionary: Dictionary\n): MenuItem[] {\n  const node = state.selection.$from.node(-1);\n  const currentStyle = node?.attrs.style as NoticeTypes;\n\n  const mapping = {\n    [NoticeTypes.Info]: dictionary.infoNotice,\n    [NoticeTypes.Warning]: dictionary.warningNotice,\n    [NoticeTypes.Success]: dictionary.successNotice,\n    [NoticeTypes.Tip]: dictionary.tipNotice,\n  };\n\n  return [\n    {\n      name: \"container_notice\",\n      visible: !readOnly,\n      label: mapping[currentStyle],\n      icon: <ExpandedIcon />,\n      children: [\n        {\n          name: NoticeTypes.Info,\n          icon: <InfoIcon />,\n          label: dictionary.infoNotice,\n          active: () => currentStyle === NoticeTypes.Info,\n        },\n        {\n          name: NoticeTypes.Success,\n          icon: <DoneIcon />,\n          label: dictionary.successNotice,\n          active: () => currentStyle === NoticeTypes.Success,\n        },\n        {\n          name: NoticeTypes.Warning,\n          icon: <WarningIcon />,\n          label: dictionary.warningNotice,\n          active: () => currentStyle === NoticeTypes.Warning,\n        },\n        {\n          name: NoticeTypes.Tip,\n          icon: <StarredIcon />,\n          label: dictionary.tipNotice,\n          active: () => currentStyle === NoticeTypes.Tip,\n        },\n      ],\n    },\n  ];\n}\n","import * as React from \"react\";\nimport { DefaultTheme, useTheme } from \"styled-components\";\n\ntype Props = {\n  children: (theme: DefaultTheme) => React.ReactElement;\n};\n\nexport default function WithTheme({ children }: Props) {\n  const theme = useTheme();\n  return children(theme);\n}\n","/* global File Promise */\nimport { PluginSimple } from \"markdown-it\";\nimport { observable } from \"mobx\";\nimport { Observer } from \"mobx-react\";\nimport { darken, transparentize } from \"polished\";\nimport { baseKeymap } from \"prosemirror-commands\";\nimport { dropCursor } from \"prosemirror-dropcursor\";\nimport { gapCursor } from \"prosemirror-gapcursor\";\nimport { inputRules, InputRule } from \"prosemirror-inputrules\";\nimport { keymap } from \"prosemirror-keymap\";\nimport { MarkdownParser } from \"prosemirror-markdown\";\nimport {\n  Schema,\n  NodeSpec,\n  MarkSpec,\n  Node as ProsemirrorNode,\n} from \"prosemirror-model\";\nimport { EditorState, Selection, Plugin, Transaction } from \"prosemirror-state\";\nimport {\n  AddMarkStep,\n  RemoveMarkStep,\n  ReplaceAroundStep,\n  ReplaceStep,\n} from \"prosemirror-transform\";\nimport { Decoration, EditorView, NodeViewConstructor } from \"prosemirror-view\";\nimport * as React from \"react\";\nimport styled, { css, DefaultTheme, ThemeProps } from \"styled-components\";\nimport insertFiles from \"@shared/editor/commands/insertFiles\";\nimport Styles from \"@shared/editor/components/Styles\";\nimport { EmbedDescriptor } from \"@shared/editor/embeds\";\nimport Extension, {\n  CommandFactory,\n  WidgetProps,\n} from \"@shared/editor/lib/Extension\";\nimport ExtensionManager from \"@shared/editor/lib/ExtensionManager\";\nimport { MarkdownSerializer } from \"@shared/editor/lib/markdown/serializer\";\nimport textBetween from \"@shared/editor/lib/textBetween\";\nimport { getTextSerializers } from \"@shared/editor/lib/textSerializers\";\nimport Mark from \"@shared/editor/marks/Mark\";\nimport { basicExtensions as extensions } from \"@shared/editor/nodes\";\nimport Node from \"@shared/editor/nodes/Node\";\nimport ReactNode from \"@shared/editor/nodes/ReactNode\";\nimport { ComponentProps } from \"@shared/editor/types\";\nimport { ProsemirrorData, UserPreferences } from \"@shared/types\";\nimport { ProsemirrorHelper } from \"@shared/utils/ProsemirrorHelper\";\nimport EventEmitter from \"@shared/utils/events\";\nimport Document from \"~/models/Document\";\nimport Flex from \"~/components/Flex\";\nimport { PortalContext } from \"~/components/Portal\";\nimport { Dictionary } from \"~/hooks/useDictionary\";\nimport { Properties } from \"~/types\";\nimport Logger from \"~/utils/Logger\";\nimport ComponentView from \"./components/ComponentView\";\nimport EditorContext from \"./components/EditorContext\";\nimport { NodeViewRenderer } from \"./components/NodeViewRenderer\";\nimport SelectionToolbar from \"./components/SelectionToolbar\";\nimport WithTheme from \"./components/WithTheme\";\n\nexport type Props = {\n  /** An optional identifier for the editor context. It is used to persist local settings */\n  id?: string;\n  /** The user id of the current user */\n  userId?: string;\n  /** The editor content, should only be changed if you wish to reset the content */\n  value?: string | ProsemirrorData;\n  /** The initial editor content as a markdown string or JSON object */\n  defaultValue: string | object;\n  /** Placeholder displayed when the editor is empty */\n  placeholder: string;\n  /** Extensions to load into the editor */\n  extensions?: (typeof Node | typeof Mark | typeof Extension | Extension)[];\n  /** If the editor should be focused on mount */\n  autoFocus?: boolean;\n  /** The focused comment, if any */\n  focusedCommentId?: string;\n  /** If the editor should not allow editing */\n  readOnly?: boolean;\n  /** If the editor should still allow editing checkboxes when it is readOnly */\n  canUpdate?: boolean;\n  /** If the editor should still allow commenting when it is readOnly */\n  canComment?: boolean;\n  /** A dictionary of translated strings used in the editor */\n  dictionary: Dictionary;\n  /** The reading direction of the text content, if known */\n  dir?: \"rtl\" | \"ltr\";\n  /** If the editor should vertically grow to fill available space */\n  grow?: boolean;\n  /** If the editor should display template options such as inserting placeholders */\n  template?: boolean;\n  /** An enforced maximum content length */\n  maxLength?: number;\n  /** Heading id to scroll to when the editor has loaded */\n  scrollTo?: string;\n  /** Callback for handling uploaded images, should return the url of uploaded file */\n  uploadFile?: (file: File) => Promise<string>;\n  /** Callback when prosemirror nodes are initialized on document mount. */\n  onInit?: () => void;\n  /** Callback when prosemirror nodes are destroyed on document unmount. */\n  onDestroy?: () => void;\n  /** Callback when editor is blurred, as native input */\n  onBlur?: () => void;\n  /** Callback when editor is focused, as native input */\n  onFocus?: () => void;\n  /** Callback when user uses save key combo */\n  onSave?: (options: { done: boolean }) => void;\n  /** Callback when user uses cancel key combo */\n  onCancel?: () => void;\n  /** Callback when user changes editor content */\n  onChange?: (value: () => any) => void;\n  /** Callback when a comment mark is clicked */\n  onClickCommentMark?: (commentId: string) => void;\n  /** Callback when a comment mark is created */\n  onCreateCommentMark?: (commentId: string, userId: string) => void;\n  /** Callback when a comment mark is removed */\n  onDeleteCommentMark?: (commentId: string) => void;\n  /** Callback when a file upload begins */\n  onFileUploadStart?: () => void;\n  /** Callback when a file upload ends */\n  onFileUploadStop?: () => void;\n  /** Callback when a link is created, should return url to created document */\n  onCreateLink?: (params: Properties<Document>) => Promise<string>;\n  /** Callback when user clicks on any link in the document */\n  onClickLink: (\n    href: string,\n    event?: MouseEvent | React.MouseEvent<HTMLButtonElement>\n  ) => void;\n  /** Callback when user presses any key with document focused */\n  onKeyDown?: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  /** Collection of embed types to render in the document */\n  embeds: EmbedDescriptor[];\n  /** Display preferences for the logged in user, if any. */\n  userPreferences?: UserPreferences | null;\n  /** Whether embeds should be rendered without an iframe */\n  embedsDisabled?: boolean;\n  className?: string;\n  /** Optional style overrides for the container*/\n  style?: React.CSSProperties;\n  /** Optional style overrides for the contenteeditable */\n  editorStyle?: React.CSSProperties;\n};\n\ntype State = {\n  /** If the document text has been detected as using RTL script */\n  isRTL: boolean;\n  /** If the editor is currently focused */\n  isEditorFocused: boolean;\n  /** If the toolbar for a text selection is visible */\n  selectionToolbarOpen: boolean;\n};\n\n/**\n * The shared editor at the root of all rich editable text in Outline. Do not\n * use this component directly, it should by lazy loaded. Use\n * ~/components/Editor instead.\n */\nexport class Editor extends React.PureComponent<\n  Props & ThemeProps<DefaultTheme>,\n  State\n> {\n  static defaultProps = {\n    defaultValue: \"\",\n    dir: \"auto\",\n    placeholder: \"Write something nice…\",\n    onFileUploadStart: () => {\n      // no default behavior\n    },\n    onFileUploadStop: () => {\n      // no default behavior\n    },\n    embeds: [],\n    extensions,\n  };\n\n  state: State = {\n    isRTL: false,\n    isEditorFocused: false,\n    selectionToolbarOpen: false,\n  };\n\n  isInitialized = false;\n  isBlurred = true;\n  extensions: ExtensionManager;\n  elementRef = React.createRef<HTMLDivElement>();\n  wrapperRef = React.createRef<HTMLDivElement>();\n  view: EditorView;\n  schema: Schema;\n  serializer: MarkdownSerializer;\n  parser: MarkdownParser;\n  pasteParser: MarkdownParser;\n  plugins: Plugin[];\n  keymaps: Plugin[];\n  inputRules: InputRule[];\n  nodeViews: {\n    [name: string]: NodeViewConstructor;\n  };\n\n  widgets: { [name: string]: (props: WidgetProps) => React.ReactElement };\n  renderers: Set<NodeViewRenderer<ComponentProps>> = observable.set();\n  nodes: { [name: string]: NodeSpec };\n  marks: { [name: string]: MarkSpec };\n  commands: Record<string, CommandFactory>;\n  rulePlugins: PluginSimple[];\n  events = new EventEmitter();\n  mutationObserver?: MutationObserver;\n\n  /**\n   * We use componentDidMount instead of constructor as the init method requires\n   * that the dom is already mounted.\n   */\n  public componentDidMount() {\n    this.init();\n    window.addEventListener(\"theme-changed\", this.dispatchThemeChanged);\n\n    if (this.props.scrollTo) {\n      void this.scrollToAnchor(this.props.scrollTo);\n    }\n\n    this.calculateDir();\n\n    if (this.props.readOnly) {\n      return;\n    }\n\n    if (this.props.autoFocus) {\n      this.focusAtEnd();\n    }\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    // Allow changes to the 'value' prop to update the editor from outside\n    if (this.props.value && prevProps.value !== this.props.value) {\n      const newState = this.createState(this.props.value);\n      this.view.updateState(newState);\n    }\n\n    // pass readOnly changes through to underlying editor instance\n    if (prevProps.readOnly !== this.props.readOnly) {\n      this.view.update({\n        ...this.view.props,\n        editable: () => !this.props.readOnly,\n      });\n\n      // NodeView will not automatically render when editable changes so we must trigger an update\n      // manually, see: https://discuss.prosemirror.net/t/re-render-custom-nodeview-when-view-editable-changes/6441\n      Array.from(this.renderers).forEach((view) =>\n        view.setProp(\"isEditable\", !this.props.readOnly)\n      );\n    }\n\n    if (this.props.scrollTo && this.props.scrollTo !== prevProps.scrollTo) {\n      void this.scrollToAnchor(this.props.scrollTo);\n    }\n\n    // Focus at the end of the document if switching from readOnly and autoFocus\n    // is set to true\n    if (prevProps.readOnly && !this.props.readOnly && this.props.autoFocus) {\n      this.focusAtEnd();\n    }\n\n    if (prevProps.dir !== this.props.dir) {\n      this.calculateDir();\n    }\n\n    if (\n      !this.isBlurred &&\n      !this.state.isEditorFocused &&\n      !this.state.selectionToolbarOpen\n    ) {\n      this.isBlurred = true;\n      this.props.onBlur?.();\n    }\n\n    if (\n      this.isBlurred &&\n      (this.state.isEditorFocused || this.state.selectionToolbarOpen)\n    ) {\n      this.isBlurred = false;\n      this.props.onFocus?.();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener(\"theme-changed\", this.dispatchThemeChanged);\n    this.view?.destroy();\n    this.mutationObserver?.disconnect();\n    this.handleEditorDestroy();\n  }\n\n  private init() {\n    this.extensions = this.createExtensions();\n    this.nodes = this.createNodes();\n    this.marks = this.createMarks();\n    this.schema = this.createSchema();\n    this.widgets = this.createWidgets();\n    this.plugins = this.createPlugins();\n    this.rulePlugins = this.createRulePlugins();\n    this.keymaps = this.createKeymaps();\n    this.serializer = this.createSerializer();\n    this.parser = this.createParser();\n    this.pasteParser = this.createPasteParser();\n    this.inputRules = this.createInputRules();\n    this.nodeViews = this.createNodeViews();\n    this.view = this.createView();\n    this.commands = this.createCommands();\n  }\n\n  private createExtensions() {\n    return new ExtensionManager(this.props.extensions, this);\n  }\n\n  private createPlugins() {\n    return this.extensions.plugins;\n  }\n\n  private createRulePlugins() {\n    return this.extensions.rulePlugins;\n  }\n\n  private createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema,\n    });\n  }\n\n  private createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n    });\n  }\n\n  private createNodeViews() {\n    return this.extensions.extensions\n      .filter((extension: ReactNode) => extension.component)\n      .reduce(\n        (nodeViews, extension: ReactNode) => ({\n          ...nodeViews,\n          [extension.name]: (\n            node: ProsemirrorNode,\n            view: EditorView,\n            getPos: () => number,\n            decorations: Decoration[]\n          ) =>\n            new ComponentView(extension.component, {\n              editor: this,\n              extension,\n              node,\n              view,\n              getPos,\n              decorations,\n            }),\n        }),\n        {}\n      );\n  }\n\n  private createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view,\n    });\n  }\n\n  private createWidgets() {\n    return this.extensions.widgets;\n  }\n\n  private createNodes() {\n    return this.extensions.nodes;\n  }\n\n  private createMarks() {\n    return this.extensions.marks;\n  }\n\n  private createSchema() {\n    return new Schema({\n      nodes: this.nodes,\n      marks: this.marks,\n    });\n  }\n\n  private createSerializer() {\n    return this.extensions.serializer();\n  }\n\n  private createParser() {\n    return this.extensions.parser({\n      schema: this.schema,\n      plugins: this.rulePlugins,\n    });\n  }\n\n  private createPasteParser() {\n    return this.extensions.parser({\n      schema: this.schema,\n      rules: { linkify: true },\n      plugins: this.rulePlugins,\n    });\n  }\n\n  private createState(value?: string | object) {\n    const doc = this.createDocument(value || this.props.defaultValue);\n\n    return EditorState.create({\n      schema: this.schema,\n      doc,\n      plugins: [\n        ...this.keymaps,\n        ...this.plugins,\n        dropCursor({\n          color: this.props.theme.cursor,\n        }),\n        gapCursor(),\n        inputRules({\n          rules: this.inputRules,\n        }),\n        keymap(baseKeymap),\n      ],\n    });\n  }\n\n  private createDocument(content: string | object) {\n    // Looks like Markdown\n    if (typeof content === \"string\") {\n      return this.parser.parse(content) || undefined;\n    }\n\n    return ProsemirrorNode.fromJSON(this.schema, content);\n  }\n\n  private createView() {\n    if (!this.elementRef.current) {\n      throw new Error(\"createView called before ref available\");\n    }\n\n    const isEditingCheckbox = (tr: Transaction) =>\n      tr.steps.some(\n        (step) =>\n          (step instanceof ReplaceAroundStep || step instanceof ReplaceStep) &&\n          step.slice.content?.firstChild?.type.name ===\n            this.schema.nodes.checkbox_item.name\n      );\n\n    const isEditingComment = (tr: Transaction) =>\n      tr.steps.some(\n        (step) =>\n          (step instanceof AddMarkStep || step instanceof RemoveMarkStep) &&\n          step.mark.type.name === this.schema.marks.comment.name\n      );\n\n    const self = this; // eslint-disable-line\n    const view = new EditorView(this.elementRef.current, {\n      handleDOMEvents: {\n        blur: this.handleEditorBlur,\n        focus: this.handleEditorFocus,\n      },\n      attributes: {\n        translate: this.props.readOnly ? \"yes\" : \"no\",\n      },\n      state: this.createState(this.props.value),\n      editable: () => !this.props.readOnly,\n      nodeViews: this.nodeViews,\n      dispatchTransaction(this: EditorView, transaction) {\n        if (this.isDestroyed) {\n          return;\n        }\n\n        // callback is bound to have the view instance as its this binding\n        const { state, transactions } =\n          this.state.applyTransaction(transaction);\n\n        this.updateState(state);\n\n        // If any of the transactions being dispatched resulted in the doc\n        // changing then call our own change handler to let the outside world\n        // know\n        if (\n          transactions.some((tr) => tr.docChanged) &&\n          (!self.props.readOnly ||\n            (self.props.canUpdate && transactions.some(isEditingCheckbox)) ||\n            (self.props.canComment && transactions.some(isEditingComment)))\n        ) {\n          self.handleChange();\n        }\n\n        self.handleEditorInit();\n\n        self.calculateDir();\n\n        // Because Prosemirror and React are not linked we must tell React that\n        // a render is needed whenever the Prosemirror state changes.\n        self.forceUpdate();\n      },\n    });\n\n    // Tell third-party libraries and screen-readers that this is an input\n    view.dom.setAttribute(\"role\", \"textbox\");\n\n    return view;\n  }\n\n  public async scrollToAnchor(hash: string) {\n    if (!hash) {\n      return;\n    }\n\n    try {\n      this.mutationObserver?.disconnect();\n      this.mutationObserver = observe(\n        hash,\n        (element) => {\n          element.scrollIntoView();\n        },\n        this.elementRef.current || undefined\n      );\n    } catch (err) {\n      // querySelector will throw an error if the hash begins with a number\n      // or contains a period. This is protected against now by safeSlugify\n      // however previous links may be in the wild.\n      Logger.debug(\"editor\", `Attempted to scroll to invalid hash: ${hash}`);\n    }\n  }\n\n  public value = (asString = true, trim?: boolean) => {\n    if (asString) {\n      const content = this.serializer.serialize(this.view.state.doc);\n      return trim ? content.trim() : content;\n    }\n\n    return (\n      trim ? ProsemirrorHelper.trim(this.view.state.doc) : this.view.state.doc\n    ).toJSON();\n  };\n\n  private calculateDir = () => {\n    if (!this.elementRef.current) {\n      return;\n    }\n\n    const isRTL =\n      this.props.dir === \"rtl\" ||\n      getComputedStyle(this.elementRef.current).direction === \"rtl\";\n\n    if (this.state.isRTL !== isRTL) {\n      this.setState({ isRTL });\n    }\n  };\n\n  /**\n   * Focus the editor at the start of the content.\n   */\n  public focusAtStart = () => {\n    const selection = Selection.atStart(this.view.state.doc);\n    const transaction = this.view.state.tr.setSelection(selection);\n    this.view.dispatch(transaction);\n    this.view.focus();\n  };\n\n  /**\n   * Focus the editor at the end of the content.\n   */\n  public focusAtEnd = () => {\n    const selection = Selection.atEnd(this.view.state.doc);\n    const transaction = this.view.state.tr.setSelection(selection);\n    this.view.dispatch(transaction);\n    this.view.focus();\n  };\n\n  /**\n   * Focus the editor and scroll to the current selection.\n   */\n  public focus = () => {\n    this.view.focus();\n    this.view.dispatch(this.view.state.tr.scrollIntoView());\n  };\n\n  /**\n   * Blur the editor.\n   */\n  public blur = () => {\n    (this.view.dom as HTMLElement).blur();\n\n    // Have Safari remove the caret.\n    window?.getSelection()?.removeAllRanges();\n  };\n\n  /**\n   * Insert files at the current selection.\n   * =\n   * @param event The source event\n   * @param files The files to insert\n   * @returns True if the files were inserted\n   */\n  public insertFiles = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    files: File[]\n  ) =>\n    insertFiles(\n      this.view,\n      event,\n      this.view.state.selection.to,\n      files,\n      this.props\n    );\n\n  /**\n   * Returns true if the trimmed content of the editor is an empty string.\n   *\n   * @returns True if the editor is empty\n   */\n  public isEmpty = () => ProsemirrorHelper.isEmpty(this.view.state.doc);\n\n  /**\n   * Return the headings in the current editor.\n   *\n   * @returns A list of headings in the document\n   */\n  public getHeadings = () =>\n    ProsemirrorHelper.getHeadings(this.view.state.doc, this.schema);\n\n  /**\n   * Return the images in the current editor.\n   *\n   * @returns A list of images in the document\n   */\n  public getImages = () => ProsemirrorHelper.getImages(this.view.state.doc);\n\n  /**\n   * Return the tasks/checkmarks in the current editor.\n   *\n   * @returns A list of tasks in the document\n   */\n  public getTasks = () => ProsemirrorHelper.getTasks(this.view.state.doc);\n\n  /**\n   * Return the comments in the current editor.\n   *\n   * @returns A list of comments in the document\n   */\n  public getComments = () => ProsemirrorHelper.getComments(this.view.state.doc);\n\n  /**\n   * Remove all marks related to a specific comment from the document.\n   *\n   * @param commentId The id of the comment to remove\n   */\n  public removeComment = (commentId: string) => {\n    const { state, dispatch } = this.view;\n    const tr = state.tr;\n\n    state.doc.descendants((node, pos) => {\n      if (!node.isInline) {\n        return;\n      }\n\n      const mark = node.marks.find(\n        (m) => m.type === state.schema.marks.comment && m.attrs.id === commentId\n      );\n\n      if (mark) {\n        tr.removeMark(pos, pos + node.nodeSize, mark);\n      }\n    });\n\n    dispatch(tr);\n  };\n\n  /**\n   * Update all marks related to a specific comment in the document.\n   *\n   * @param commentId The id of the comment to remove\n   * @param attrs The attributes to update\n   */\n  public updateComment = (\n    commentId: string,\n    attrs: { resolved?: boolean; draft?: boolean }\n  ) => {\n    const { state, dispatch } = this.view;\n    const tr = state.tr;\n\n    state.doc.descendants((node, pos) => {\n      if (!node.isInline) {\n        return;\n      }\n\n      const mark = node.marks.find(\n        (m) => m.type === state.schema.marks.comment && m.attrs.id === commentId\n      );\n\n      if (mark) {\n        const from = pos;\n        const to = pos + node.nodeSize;\n        const newMark = state.schema.marks.comment.create({\n          ...mark.attrs,\n          ...attrs,\n        });\n\n        tr.removeMark(from, to, mark).addMark(from, to, newMark);\n      }\n    });\n\n    dispatch(tr);\n  };\n\n  /**\n   * Return the plain text content of the current editor.\n   *\n   * @returns A string of text\n   */\n  public getPlainText = () => {\n    const { doc } = this.view.state;\n    const textSerializers = getTextSerializers(this.schema);\n\n    return textBetween(doc, 0, doc.content.size, textSerializers);\n  };\n\n  private dispatchThemeChanged = (event: CustomEvent) => {\n    this.view.dispatch(this.view.state.tr.setMeta(\"theme\", event.detail));\n  };\n\n  private handleChange = () => {\n    if (!this.props.onChange) {\n      return;\n    }\n\n    this.props.onChange((asString = true, trim = false) =>\n      this.view ? this.value(asString, trim) : undefined\n    );\n  };\n\n  private handleEditorInit = () => {\n    if (!this.props.onInit || this.isInitialized) {\n      return;\n    }\n\n    this.props.onInit();\n    this.isInitialized = true;\n  };\n\n  private handleEditorDestroy = () => {\n    if (!this.props.onDestroy) {\n      return;\n    }\n    this.props.onDestroy();\n  };\n\n  private handleEditorBlur = () => {\n    this.setState({ isEditorFocused: false });\n    return false;\n  };\n\n  private handleEditorFocus = () => {\n    this.setState({ isEditorFocused: true });\n    return false;\n  };\n\n  private handleOpenSelectionToolbar = () => {\n    this.setState((state) => ({\n      ...state,\n      selectionToolbarOpen: true,\n    }));\n  };\n\n  private handleCloseSelectionToolbar = () => {\n    if (!this.state.selectionToolbarOpen) {\n      return;\n    }\n    this.setState((state) => ({\n      ...state,\n      selectionToolbarOpen: false,\n    }));\n  };\n\n  public render() {\n    const { readOnly, canUpdate, grow, style, className, onKeyDown } =\n      this.props;\n    const { isRTL } = this.state;\n\n    return (\n      <PortalContext.Provider value={this.wrapperRef.current}>\n        <EditorContext.Provider value={this}>\n          <Flex\n            ref={this.wrapperRef}\n            onKeyDown={onKeyDown}\n            style={style}\n            className={className}\n            align=\"flex-start\"\n            justify=\"center\"\n            column\n          >\n            <EditorContainer\n              rtl={isRTL}\n              grow={grow}\n              readOnly={readOnly}\n              readOnlyWriteCheckboxes={canUpdate}\n              focusedCommentId={this.props.focusedCommentId}\n              userId={this.props.userId}\n              editorStyle={this.props.editorStyle}\n              ref={this.elementRef}\n              lang=\"\"\n            />\n            {this.view && (\n              <SelectionToolbar\n                rtl={isRTL}\n                readOnly={readOnly}\n                canUpdate={this.props.canUpdate}\n                canComment={this.props.canComment}\n                isTemplate={this.props.template === true}\n                onOpen={this.handleOpenSelectionToolbar}\n                onClose={this.handleCloseSelectionToolbar}\n                onClickLink={this.props.onClickLink}\n              />\n            )}\n            {this.widgets &&\n              Object.values(this.widgets).map((Widget, index) => (\n                <Widget key={String(index)} rtl={isRTL} readOnly={readOnly} />\n              ))}\n            <Observer>\n              {() => (\n                <>{Array.from(this.renderers).map((view) => view.content)}</>\n              )}\n            </Observer>\n          </Flex>\n        </EditorContext.Provider>\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst EditorContainer = styled(Styles)<{\n  userId?: string;\n  focusedCommentId?: string;\n}>`\n  ${(props) =>\n    props.focusedCommentId &&\n    css`\n      #comment-${props.focusedCommentId} {\n        background: ${transparentize(0.5, props.theme.brand.marine)};\n        border-bottom: 2px solid ${props.theme.commentMarkBackground};\n      }\n    `}\n\n  ${(props) =>\n    props.userId &&\n    css`\n      .mention[data-id=\"${props.userId}\"] {\n        color: ${props.theme.textHighlightForeground};\n        background: ${props.theme.textHighlight};\n\n        &.ProseMirror-selectednode {\n          outline-color: ${props.readOnly\n            ? \"transparent\"\n            : darken(0.2, props.theme.textHighlight)};\n        }\n      }\n    `}\n`;\n\nconst LazyLoadedEditor = React.forwardRef<Editor, Props>(\n  function _LazyLoadedEditor(props: Props, ref) {\n    return (\n      <WithTheme>\n        {(theme) => <Editor theme={theme} {...props} ref={ref} />}\n      </WithTheme>\n    );\n  }\n);\n\nconst observe = (\n  selector: string,\n  callback: (element: HTMLElement) => void,\n  targetNode = document.body\n) => {\n  const observer = new MutationObserver((mutations) => {\n    const match = [...mutations]\n      .flatMap((mutation) => [...mutation.addedNodes])\n      .find((node: HTMLElement) => node.matches?.(selector));\n    if (match) {\n      callback(match as HTMLElement);\n    }\n  });\n\n  if (targetNode.querySelector(selector)) {\n    callback(targetNode.querySelector(selector) as HTMLElement);\n  } else {\n    observer.observe(targetNode, { childList: true, subtree: true });\n  }\n\n  return observer;\n};\n\nexport default LazyLoadedEditor;\n"],"names":["dropCursor","options","Plugin","view","editorView","DropCursorView","constructor","_a","this","cursorPos","element","timeout","width","color","class","handlers","map","name","handler","e","dom","addEventListener","destroy","forEach","removeEventListener","update","prevState","doc","state","content","size","setCursor","updateOverlay","pos","parentNode","removeChild","rect","$pos","resolve","isBlock","parent","inlineContent","before","nodeBefore","after","nodeAfter","node","nodeDOM","nodeSize","nodeRect","getBoundingClientRect","top","bottom","left","right","coords","coordsAtPos","parentLeft","parentTop","offsetParent","appendChild","document","createElement","className","style","cssText","backgroundColor","classList","toggle","body","getComputedStyle","position","pageXOffset","pageYOffset","scrollLeft","scrollTop","height","scheduleRemoval","clearTimeout","setTimeout","dragover","event","editable","posAtCoords","clientX","clientY","inside","nodeAt","disableDropCursor","type","spec","disabled","target","dragging","slice","point","dropPoint","dragend","drop","dragleave","contains","relatedTarget","EventEmitter","listeners","on","addListener","off","removeListener","callback","push","filter","cb","emit","data","NodeViewRenderer","Component","props","createPortal","jsx","updateProps","isEqual","setProp","key","value","observable","computed","action","ComponentView","component","editor","extension","getPos","decorations","isSelected","inline","add","renderer","renderers","selectNode","deselectNode","stopEvent","startsWith","delete","ignoreMutation","isEditable","baseEach","require$$0","arraySome","baseIteratee","require$$1","baseSome","collection","predicate","result","index","isArray","require$$3","isIterateeCall","require$$4","some","guard","func","isInNotice","nodes","schema","container_notice","isNodeActive","langToMenuItem","label","active","attrs","language","CircleIcon","retainColor","rest","fill","viewBox","version","undefined","children","xmlns","cx","cy","r","DottedCircleIcon","styled","withConfig","componentId","theme","textSecondary","SortAscIcon","ArrowIcon","SortDescIcon","defaultPosition","offset","maxWidth","blockSelection","visible","FloatingToolbar","React","FloatingToolbar_","ref","menuRef","isSelectingText","setSelectingText","usePosition","useEditor","selection","menuWidth","current","offsetWidth","menuHeight","offsetHeight","fromPos","toPos","from","to","err","warn","selectionBounds","Math","min","max","window","innerWidth","innerHeight","codeBlock","findParentNode","isCode","noticeBlock","empty","bounds","isColSelection","CellSelection","isRowSelection","selectedRect","domAtPos","tableStart","querySelector","HTMLElement","NodeSelection","imageElement","getElementsByClassName","EditorStyleHelper","imageHandle","round","halfSelection","abs","centerOfSelection","margin","x","HEADER_HEIGHT","useEventListener","isMobile","useMobile","useWindowSize","ReactPortal","MobileWrapper","y","Portal","Wrapper","arrow","$offset","div","s","depths","editorToolbar","css","button","hovering","extraArea","WrappedTooltip","Tooltip","delay","placement","shortcutOnNewline","TooltipContent","span","Flex","SearchResults","Scrollable","$hasResults","hideScrollbars","observer","LinkEditor","mark","dictionary","onRemoveLink","onSelectLink","onClickLink","getHref","sanitizeUrl","href","initialValue","initialSelectionLength","inputRef","useRef","discardRef","query","setQuery","useState","selectedIndex","setSelectedIndex","documents","useStores","trimmedQuery","trim","results","findByQuery","maxResults","request","useRequest","async","client","post","useEffect","handleGlobalKeyDown","metaKey","select","save","handleRemoveLink","title","length","moveSelectionToEnd","dispatch","nextSelection","Selection","findFrom","tr","setSelection","focus","handleSearch","newValue","removeMark","isInternal","isInternalUrl","hasResults","jsxs","Fragment","Input","placeholder","searchOrPasteLink","onKeyDown","preventDefault","maxIndex","selectedDoc","url","onPaste","handlePaste","onChange","onFocus","autoFocus","readOnly","goToLink","openLink","ToolbarButton","onClick","error","openLinkError","OpenIcon","removeLink","CloseIcon","ResizingHeightContainer","SuggestionsMenuItem","onPointerMove","selected","subtitle","icon","Icon","DocumentIcon","id","Separator","ToolbarDropdown","menu","useMenuState","commands","item","items","child","dangerous","menuItem","handleClick","MenuButton","buttonProps","Label","ContextMenu","Template","tippyProps","ToolbarMenu","TooltipProvider","FlexibleWrapper","ToolbarSeparator","isActive","shortcut","tooltip","breakpoint","SelectionToolbar","onClose","onOpen","useDictionary","useIsActive","isMarkActive","marks","link","code_block","code_fence","includes","selectionText","cut","textContent","TextSelection","n","isDragging","useIsDragging","setDragging","setNotDragging","useBoolean","previousIsActive","usePrevious","handleClickOutside","ev","activeElement","tagName","getSelection","isCollapsed","isTemplate","rtl","canComment","canUpdate","isDividerSelection","hr","colIndex","getColumnIndex","rowIndex","getRowIndex","isTableSelection","getMarkRange","$from","isImageSelection","isAttachmentSelection","isCodeSelection","isInCode","onlyBlock","isNoticeSelection","getCodeMenuItems","codeMenuItems","frequentLanguages","getFrequentCodeLanguages","frequentLangMenuItems","codeLanguages","remainingLangMenuItems","Object","entries","languageMenuItems","CopyIcon","copy","ExpandedIcon","getLabelForLanguage","tableMenuItems","isFullWidth","table","layout","TableLayout","fullWidth","alignDefaultWidth","alignFullWidth","AlignFullWidthIcon","deleteTable","TrashIcon","exportAsCSV","format","fileName","DownloadIcon","getTableMenuItems","tableColMenuItems","alignLeft","AlignLeftIcon","alignment","th","colspan","rowspan","alignCenter","AlignCenterIcon","alignRight","AlignRightIcon","sortAsc","direction","sortDesc","MoreIcon","toggleHeader","TableHeaderColumnIcon","addColumnAfter","addColumnBefore","InsertLeftIcon","InsertRightIcon","deleteColumn","getTableColMenuItems","tableRowMenuItems","TableHeaderRowIcon","addRowBefore","InsertAboveIcon","addRowAfter","InsertBelowIcon","deleteRow","getTableRowMenuItems","imageMenuItems","isLeftAligned","image","layoutClass","isRightAligned","isFullWidthAligned","AlignImageLeftIcon","AlignImageCenterIcon","AlignImageRightIcon","downloadImage","fetch","replaceImage","ReplaceIcon","deleteImage","getImageMenuItems","attachmentMenuItems","replaceAttachment","deleteAttachment","download","getAttachmentMenuItems","dividerMenuItems","markup","HorizontalRuleIcon","pageBreak","PageBreakIcon","getDividerMenuItems","readOnlyMenuItems","isEmpty","comment","CommentIcon","getReadOnlyMenuItems","noticeMenuItems","currentStyle","NoticeTypes","Info","infoNotice","Warning","warningNotice","Success","successNotice","Tip","tipNotice","InfoIcon","DoneIcon","WarningIcon","StarredIcon","getNoticeMenuItems","formattingMenuItems","isCodeBlock","highlight","getMarksBetween","find","InputIcon","strong","metaDisplay","BoldIcon","em","ItalicIcon","strikethrough","StrikethroughIcon","Highlight","colors","HighlightIcon","none","colorNames","codeInline","CodeIcon","code_inline","heading","Heading1Icon","level","subheading","Heading2Icon","Heading3Icon","quote","BlockQuoteIcon","blockquote","checkboxList","TodoListIcon","keywords","checkbox_list","bulletList","BulletedListIcon","bullet_list","orderedList","OrderedListIcon","ordered_list","outdent","OutdentIcon","isInList","types","indent","IndentIcon","createLink","LinkIcon","resolved","exact","getFormattingMenuItems","filterExcessSeparators","showLinkToolbar","handleOnSelectLink","markType","addMark","create","WithTheme","useTheme","Editor","super","arguments","isRTL","isEditorFocused","selectionToolbarOpen","isInitialized","isBlurred","elementRef","wrapperRef","set","events","asString","serializer","serialize","ProsemirrorHelper","toJSON","calculateDir","dir","setState","focusAtStart","atStart","transaction","focusAtEnd","atEnd","scrollIntoView","blur","removeAllRanges","insertFiles","files","getHeadings","getImages","getTasks","getComments","removeComment","commentId","descendants","isInline","m","updateComment","newMark","getPlainText","textSerializers","getTextSerializers","textBetween","dispatchThemeChanged","setMeta","detail","handleChange","handleEditorInit","onInit","handleEditorDestroy","onDestroy","handleEditorBlur","handleEditorFocus","handleOpenSelectionToolbar","handleCloseSelectionToolbar","componentDidMount","init","scrollTo","scrollToAnchor","componentDidUpdate","prevProps","newState","createState","updateState","Array","onBlur","componentWillUnmount","mutationObserver","disconnect","extensions","createExtensions","createNodes","createMarks","createSchema","widgets","createWidgets","plugins","createPlugins","rulePlugins","createRulePlugins","keymaps","createKeymaps","createSerializer","parser","createParser","pasteParser","createPasteParser","inputRules","createInputRules","nodeViews","createNodeViews","createView","createCommands","ExtensionManager","reduce","Schema","rules","linkify","createDocument","defaultValue","EditorState","cursor","gapCursor","keymap","baseKeymap","parse","ProsemirrorNode","fromJSON","Error","isEditingCheckbox","steps","step","ReplaceAroundStep","ReplaceStep","firstChild","checkbox_item","isEditingComment","AddMarkStep","RemoveMarkStep","self","EditorView","handleDOMEvents","attributes","translate","dispatchTransaction","isDestroyed","transactions","applyTransaction","docChanged","forceUpdate","setAttribute","hash","observe","Logger","debug","render","grow","PortalContext","Provider","EditorContext","align","justify","column","EditorContainer","readOnlyWriteCheckboxes","focusedCommentId","userId","editorStyle","lang","template","values","Widget","String","Observer","_Editor","defaultProps","onFileUploadStart","onFileUploadStop","embeds","Styles","transparentize","brand","marine","commentMarkBackground","textHighlightForeground","textHighlight","darken","LazyLoadedEditor","_LazyLoadedEditor","selector","targetNode","MutationObserver","mutations","match","flatMap","mutation","addedNodes","matches","childList","subtree"],"mappings":"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","x_google_ignoreList":[0,4,5]}