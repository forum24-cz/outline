{"version":3,"file":"FileOperationListItem.vfDyquNl.js","sources":["../../../app/components/Spinner.tsx","../../../app/menus/FileOperationMenu.tsx","../../../app/scenes/Settings/components/FileOperationListItem.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = React.HTMLAttributes<HTMLOrSVGElement> & {\n  color?: string;\n};\n\nexport default function Spinner({ color, ...props }: Props) {\n  return (\n    <SVG\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 16 16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <Circle\n        $color={color}\n        fill=\"none\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        cx=\"8\"\n        cy=\"8\"\n        r=\"6\"\n      />\n    </SVG>\n  );\n}\n\nconst SVG = styled.svg`\n  @keyframes rotator {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(270deg);\n    }\n  }\n\n  animation: rotator 1.4s linear infinite;\n  margin: 4px;\n`;\n\nconst Circle = styled.circle<{ $color?: string }>`\n  @keyframes dash {\n    0% {\n      stroke-dashoffset: 47;\n    }\n    50% {\n      stroke-dashoffset: 11;\n      transform: rotate(135deg);\n    }\n    100% {\n      stroke-dashoffset: 47;\n      transform: rotate(450deg);\n    }\n  }\n\n  stroke: ${(props) => props.$color || props.theme.textSecondary};\n  stroke-dasharray: 46;\n  stroke-dashoffset: 0;\n  transform-origin: center;\n  animation: dash 1.4s ease-in-out infinite;\n`;\n","import { DownloadIcon, TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport { FileOperationState, FileOperationType } from \"@shared/types\";\nimport FileOperation from \"~/models/FileOperation\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport usePolicy from \"~/hooks/usePolicy\";\n\ntype Props = {\n  fileOperation: FileOperation;\n  onDelete: (ev: React.SyntheticEvent) => Promise<void>;\n};\n\nfunction FileOperationMenu({ fileOperation, onDelete }: Props) {\n  const { t } = useTranslation();\n  const can = usePolicy(fileOperation);\n  const menu = useMenuState({\n    modal: true,\n  });\n\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Export options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"link\",\n              title: t(\"Download\"),\n              icon: <DownloadIcon />,\n              visible:\n                fileOperation.type === FileOperationType.Export &&\n                fileOperation.state === FileOperationState.Complete,\n              href: fileOperation.downloadUrl,\n            },\n            {\n              type: \"separator\",\n            },\n            {\n              type: \"button\",\n              title: t(\"Delete\"),\n              visible: can.delete,\n              icon: <TrashIcon />,\n              dangerous: true,\n              onClick: onDelete,\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default FileOperationMenu;\n","import { observer } from \"mobx-react\";\nimport { ArchiveIcon, DoneIcon, WarningIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"sonner\";\nimport { useTheme } from \"styled-components\";\nimport {\n  FileOperationFormat,\n  FileOperationState,\n  FileOperationType,\n} from \"@shared/types\";\nimport FileOperation from \"~/models/FileOperation\";\nimport { Action } from \"~/components/Actions\";\nimport ConfirmationDialog from \"~/components/ConfirmationDialog\";\nimport ListItem from \"~/components/List/Item\";\nimport Spinner from \"~/components/Spinner\";\nimport Time from \"~/components/Time\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport FileOperationMenu from \"~/menus/FileOperationMenu\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\n\ntype Props = {\n  fileOperation: FileOperation;\n};\n\nconst FileOperationListItem = ({ fileOperation }: Props) => {\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n  const theme = useTheme();\n  const { dialogs, fileOperations } = useStores();\n\n  const stateMapping = {\n    [FileOperationState.Creating]: t(\"Processing\"),\n    [FileOperationState.Uploading]: t(\"Processing\"),\n    [FileOperationState.Expired]: t(\"Expired\"),\n    [FileOperationState.Complete]: t(\"Completed\"),\n    [FileOperationState.Error]: t(\"Failed\"),\n  };\n\n  const iconMapping: Record<FileOperationState, React.JSX.Element> = {\n    [FileOperationState.Creating]: <Spinner />,\n    [FileOperationState.Uploading]: <Spinner />,\n    [FileOperationState.Expired]: <ArchiveIcon color={theme.textTertiary} />,\n    [FileOperationState.Complete]: <DoneIcon color={theme.accent} />,\n    [FileOperationState.Error]: <WarningIcon color={theme.danger} />,\n  };\n\n  const formatMapping: Record<FileOperationFormat, string> = {\n    [FileOperationFormat.JSON]: \"JSON\",\n    [FileOperationFormat.Notion]: \"Notion\",\n    [FileOperationFormat.MarkdownZip]: \"Markdown\",\n    [FileOperationFormat.HTMLZip]: \"HTML\",\n    [FileOperationFormat.PDF]: \"PDF\",\n  };\n\n  const format = formatMapping[fileOperation.format];\n  const title =\n    fileOperation.type === FileOperationType.Import ||\n    fileOperation.collectionId\n      ? fileOperation.name\n      : t(\"All collections\");\n\n  const handleDelete = React.useCallback(async () => {\n    try {\n      await fileOperations.delete(fileOperation);\n\n      if (fileOperation.type === FileOperationType.Import) {\n        toast.success(t(\"Import deleted\"));\n      } else {\n        toast.success(t(\"Export deleted\"));\n      }\n    } catch (err) {\n      toast.error(err.message);\n    }\n  }, [fileOperation, fileOperations, t]);\n\n  const handleConfirmDelete = React.useCallback(async () => {\n    dialogs.openModal({\n      title: t(\"Are you sure you want to delete this import?\"),\n      content: (\n        <ConfirmationDialog\n          onSubmit={handleDelete}\n          savingText={`${t(\"Deleting\")}…`}\n          danger\n        >\n          {t(\n            \"Deleting this import will also delete all collections and documents that were created from it. This cannot be undone.\"\n          )}\n        </ConfirmationDialog>\n      ),\n    });\n  }, [dialogs, t, handleDelete]);\n\n  const showMenu =\n    (fileOperation.type === FileOperationType.Export &&\n      fileOperation.state === FileOperationState.Complete) ||\n    fileOperation.type === FileOperationType.Import;\n\n  const selfHostedHelp = isCloudHosted\n    ? \"\"\n    : `. ${t(\"Check server logs for more details.\")}`;\n\n  return (\n    <ListItem\n      title={title}\n      image={iconMapping[fileOperation.state]}\n      subtitle={\n        <>\n          {stateMapping[fileOperation.state]}&nbsp;•&nbsp;\n          {fileOperation.error && (\n            <>\n              {fileOperation.error}\n              {selfHostedHelp}&nbsp;•&nbsp;\n            </>\n          )}\n          {t(`{{userName}} requested`, {\n            userName:\n              user.id === fileOperation.user.id\n                ? t(\"You\")\n                : fileOperation.user.name,\n          })}\n          &nbsp;\n          <Time dateTime={fileOperation.createdAt} addSuffix shorten />\n          {format ? <>&nbsp;•&nbsp;{format}</> : \"\"}\n          {fileOperation.size ? <>&nbsp;•&nbsp;{fileOperation.sizeInMB}</> : \"\"}\n        </>\n      }\n      actions={\n        showMenu && (\n          <Action>\n            <FileOperationMenu\n              fileOperation={fileOperation}\n              onDelete={\n                fileOperation.type === FileOperationType.Import\n                  ? handleConfirmDelete\n                  : handleDelete\n              }\n            />\n          </Action>\n        )\n      }\n    />\n  );\n};\n\nexport default observer(FileOperationListItem);\n"],"names":["Spinner","color","props","jsx","SVG","width","height","viewBox","xmlns","children","Circle","$color","fill","strokeWidth","strokeLinecap","cx","cy","r","styled","svg","withConfig","componentId","circle","theme","textSecondary","FileOperationMenu","fileOperation","onDelete","t","useTranslation","can","usePolicy","menu","useMenuState","modal","jsxs","Fragment","OverflowMenuButton","ContextMenu","Template","items","type","title","icon","DownloadIcon","visible","FileOperationType","Export","state","FileOperationState","Complete","href","downloadUrl","delete","TrashIcon","dangerous","onClick","observer","FileOperationListItem","user","useCurrentUser","useTheme","dialogs","fileOperations","useStores","stateMapping","Creating","Uploading","Expired","Error","iconMapping","ArchiveIcon","textTertiary","DoneIcon","accent","WarningIcon","danger","format","FileOperationFormat","JSON","Notion","MarkdownZip","HTMLZip","PDF","Import","collectionId","name","handleDelete","React","async","success","err","error","message","handleConfirmDelete","openModal","content","ConfirmationDialog","onSubmit","savingText","showMenu","selfHostedHelp","isCloudHosted","ListItem","image","subtitle","userName","id","Time","dateTime","createdAt","addSuffix","shorten","size","sizeInMB","actions","Action"],"mappings":"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"}