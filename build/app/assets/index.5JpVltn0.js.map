{"version":3,"file":"index.5JpVltn0.js","sources":["../../../app/scenes/Errors/Error402.tsx","../../../app/scenes/Errors/Error403.tsx","../../../app/scenes/Document/components/MarkAsViewed.ts","../../../app/scenes/Document/components/DataLoader.tsx","../../../app/scenes/Document/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport Flex from \"@shared/components/Flex\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport Notice from \"~/components/Notice\";\nimport Scene from \"~/components/Scene\";\n\nconst Error402 = () => {\n  const location = useLocation<{ title?: string }>();\n  const { t } = useTranslation();\n  const title = location.state?.title ?? t(\"Payment Required\");\n\n  return (\n    <Scene title={title}>\n      <Heading>{title}</Heading>\n      <Flex style={{ maxWidth: 500 }} column>\n        <Empty size=\"large\">\n          <Notice>\n            This document cannot be viewed with the current edition. Please\n            upgrade to a paid license to restore access.\n          </Notice>\n        </Empty>\n      </Flex>\n    </Scene>\n  );\n};\n\nexport default Error402;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Flex from \"@shared/components/Flex\";\nimport Button from \"~/components/Button\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport Scene from \"~/components/Scene\";\nimport { navigateToHome } from \"~/actions/definitions/navigation\";\nimport useActionContext from \"~/hooks/useActionContext\";\n\nconst Error403 = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const context = useActionContext();\n\n  return (\n    <Scene title={t(\"No access to this doc\")}>\n      <Heading>{t(\"No access to this doc\")}</Heading>\n      <Flex gap={20} style={{ maxWidth: 500 }} column>\n        <Empty size=\"large\">\n          {t(\n            \"It doesnâ€™t look like you have permission to access this document.\"\n          )}{\" \"}\n          {t(\"Please request access from the document owner.\")}\n        </Empty>\n        <Flex gap={8}>\n          <Button action={navigateToHome} context={context} hideIcon>\n            {t(\"Home\")}\n          </Button>\n          <Button onClick={history.goBack} neutral>\n            {t(\"Go back\")}\n          </Button>\n        </Flex>\n      </Flex>\n    </Scene>\n  );\n};\n\nexport default Error403;\n","import * as React from \"react\";\nimport Document from \"~/models/Document\";\n\nconst MARK_AS_VIEWED_AFTER = 3 * 1000;\ntype Props = {\n  document: Document;\n  children?: JSX.Element;\n};\n\nfunction MarkAsViewed(props: Props) {\n  const { document, children } = props;\n  const viewTimeout = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  React.useEffect(() => {\n    viewTimeout.current = setTimeout(async () => {\n      const view = await document.view();\n\n      if (view) {\n        document.updateLastViewed(view);\n      }\n    }, MARK_AS_VIEWED_AFTER);\n\n    return () => {\n      viewTimeout.current && clearTimeout(viewTimeout.current);\n    };\n  }, [document]);\n\n  return children || null;\n}\n\nexport default MarkAsViewed;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useLocation, RouteComponentProps, StaticContext } from \"react-router\";\nimport { NavigationNode, TeamPreference } from \"@shared/types\";\nimport { ProsemirrorHelper } from \"@shared/utils/ProsemirrorHelper\";\nimport { RevisionHelper } from \"@shared/utils/RevisionHelper\";\nimport Document from \"~/models/Document\";\nimport Revision from \"~/models/Revision\";\nimport Error402 from \"~/scenes/Errors/Error402\";\nimport Error403 from \"~/scenes/Errors/Error403\";\nimport Error404 from \"~/scenes/Errors/Error404\";\nimport ErrorOffline from \"~/scenes/Errors/ErrorOffline\";\nimport { useDocumentContext } from \"~/components/DocumentContext\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { Properties } from \"~/types\";\nimport Logger from \"~/utils/Logger\";\nimport {\n  AuthorizationError,\n  NotFoundError,\n  OfflineError,\n  PaymentRequiredError,\n} from \"~/utils/errors\";\nimport history from \"~/utils/history\";\nimport { matchDocumentEdit, settingsPath } from \"~/utils/routeHelpers\";\nimport Loading from \"./Loading\";\nimport MarkAsViewed from \"./MarkAsViewed\";\n\ntype Params = {\n  /** The document urlId + slugified title  */\n  documentSlug: string;\n  /** A specific revision id to load. */\n  revisionId?: string;\n  /** The share ID to use to load data. */\n  shareId?: string;\n};\n\ntype LocationState = {\n  /** The document title, if preloaded */\n  title?: string;\n  restore?: boolean;\n  revisionId?: string;\n};\n\ntype Children = (options: {\n  document: Document;\n  revision: Revision | undefined;\n  abilities: Record<string, boolean>;\n  readOnly: boolean;\n  onCreateLink: (\n    params: Properties<Document>,\n    nested?: boolean\n  ) => Promise<string>;\n  sharedTree: NavigationNode | undefined;\n}) => React.ReactNode;\n\ntype Props = RouteComponentProps<Params, StaticContext, LocationState> & {\n  children: Children;\n};\n\nfunction DataLoader({ match, children }: Props) {\n  const { ui, views, shares, comments, documents, revisions } = useStores();\n  const team = useCurrentTeam();\n  const user = useCurrentUser();\n  const { setDocument } = useDocumentContext();\n  const [error, setError] = React.useState<Error | null>(null);\n  const { revisionId, shareId, documentSlug } = match.params;\n\n  // Allows loading by /doc/slug-<urlId> or /doc/<id>\n  const document =\n    documents.getByUrl(match.params.documentSlug) ??\n    documents.get(match.params.documentSlug);\n\n  if (document) {\n    setDocument(document);\n  }\n\n  const revision = revisionId\n    ? revisions.get(\n        revisionId === \"latest\"\n          ? RevisionHelper.latestId(document?.id)\n          : revisionId\n      )\n    : undefined;\n\n  const sharedTree = document\n    ? documents.getSharedTree(document.id)\n    : undefined;\n  const isEditRoute =\n    match.path === matchDocumentEdit || match.path.startsWith(settingsPath());\n  const isEditing = isEditRoute || !user?.separateEditMode;\n  const can = usePolicy(document);\n  const location = useLocation<LocationState>();\n\n  React.useEffect(() => {\n    async function fetchDocument() {\n      try {\n        await documents.fetchWithSharedTree(documentSlug, {\n          shareId,\n        });\n      } catch (err) {\n        setError(err);\n      }\n    }\n    void fetchDocument();\n  }, [ui, documents, shareId, documentSlug]);\n\n  React.useEffect(() => {\n    async function fetchRevision() {\n      if (revisionId && revisionId !== \"latest\") {\n        try {\n          await revisions.fetch(revisionId);\n        } catch (err) {\n          setError(err);\n        }\n      }\n    }\n    void fetchRevision();\n  }, [revisions, revisionId]);\n\n  React.useEffect(() => {\n    async function fetchRevision() {\n      if (document && revisionId === \"latest\") {\n        try {\n          await revisions.fetchLatest(document.id);\n        } catch (err) {\n          setError(err);\n        }\n      }\n    }\n    void fetchRevision();\n  }, [document, revisionId, revisions]);\n\n  React.useEffect(() => {\n    async function fetchViews() {\n      if (document?.id && !document?.isDeleted && !revisionId) {\n        try {\n          await views.fetchPage({\n            documentId: document.id,\n          });\n        } catch (err) {\n          Logger.error(\"Failed to fetch views\", err);\n        }\n      }\n    }\n    void fetchViews();\n  }, [document?.id, document?.isDeleted, revisionId, views]);\n\n  const onCreateLink = React.useCallback(\n    async (params: Properties<Document>, nested?: boolean) => {\n      if (!document) {\n        throw new Error(\"Document not loaded yet\");\n      }\n\n      const newDocument = await documents.create(\n        {\n          collectionId: nested ? undefined : document.collectionId,\n          parentDocumentId: nested ? document.id : document.parentDocumentId,\n          data: ProsemirrorHelper.getEmptyDocument(),\n          ...params,\n        },\n        {\n          publish: document.isDraft ? undefined : true,\n        }\n      );\n\n      return newDocument.url;\n    },\n    [document, documents]\n  );\n\n  React.useEffect(() => {\n    if (document) {\n      // sets the current document as active in the sidebar\n      ui.setActiveDocument(document);\n\n      // If we're attempting to update an archived, deleted, or otherwise\n      // uneditable document then forward to the canonical read url.\n      if (!can.update && isEditRoute && !document.template) {\n        history.push(document.url);\n        return;\n      }\n\n      // Prevents unauthorized request to load share information for the document\n      // when viewing a public share link\n      if (can.read && !document.isDeleted && !revisionId) {\n        if (team.getPreference(TeamPreference.Commenting)) {\n          void comments.fetchAll({\n            documentId: document.id,\n            limit: 100,\n            direction: \"ASC\",\n          });\n        }\n\n        shares.fetch(document.id).catch((err) => {\n          if (!(err instanceof NotFoundError)) {\n            throw err;\n          }\n        });\n      }\n    }\n  }, [\n    can.read,\n    can.update,\n    document,\n    isEditRoute,\n    comments,\n    team,\n    shares,\n    ui,\n    revisionId,\n  ]);\n\n  if (error) {\n    return error instanceof OfflineError ? (\n      <ErrorOffline />\n    ) : error instanceof PaymentRequiredError ? (\n      <Error402 />\n    ) : error instanceof AuthorizationError ? (\n      <Error403 />\n    ) : (\n      <Error404 />\n    );\n  }\n\n  if (can.read === false) {\n    return <Error404 />;\n  }\n\n  if (!document || (revisionId && !revision)) {\n    return (\n      <>\n        <Loading location={location} />\n      </>\n    );\n  }\n\n  const canEdit = can.update && !document.isArchived && !revisionId;\n  const readOnly = !isEditing || !canEdit;\n\n  return (\n    <>\n      {!shareId && !revision && <MarkAsViewed document={document} />}\n      <React.Fragment key={canEdit ? \"edit\" : \"read\"}>\n        {children({\n          document,\n          revision,\n          abilities: can,\n          readOnly,\n          onCreateLink,\n          sharedTree,\n        })}\n      </React.Fragment>\n    </>\n  );\n}\n\nexport default observer(DataLoader);\n","import * as React from \"react\";\nimport { StaticContext, useHistory } from \"react-router\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { SidebarContextType } from \"~/components/Sidebar/components/SidebarContext\";\nimport { useLastVisitedPath } from \"~/hooks/useLastVisitedPath\";\nimport useStores from \"~/hooks/useStores\";\nimport DataLoader from \"./components/DataLoader\";\nimport Document from \"./components/Document\";\n\ntype Params = {\n  documentSlug: string;\n  revisionId?: string;\n  shareId?: string;\n};\n\ntype LocationState = {\n  title?: string;\n  restore?: boolean;\n  revisionId?: string;\n  sidebarContext?: SidebarContextType;\n};\n\ntype Props = RouteComponentProps<Params, StaticContext, LocationState>;\n\nexport default function DocumentScene(props: Props) {\n  const { ui } = useStores();\n  const history = useHistory();\n  const { documentSlug, revisionId } = props.match.params;\n  const currentPath = props.location.pathname;\n  const [, setLastVisitedPath] = useLastVisitedPath();\n\n  React.useEffect(() => {\n    setLastVisitedPath(currentPath);\n  }, [currentPath, setLastVisitedPath]);\n\n  React.useEffect(() => () => ui.clearActiveDocument(), [ui]);\n\n  React.useEffect(() => {\n    // When opening a document directly on app load, sidebarContext will not be set.\n    if (!props.location.state?.sidebarContext) {\n      history.replace({\n        ...props.location,\n        state: { ...props.location.state, sidebarContext: \"collections\" }, // optimistic preference of \"collections\"\n      });\n    }\n  }, [props.location, history]);\n\n  // the urlId portion of the url does not include the slugified title\n  // we only want to force a re-mount of the document component when the\n  // document changes, not when the title does so only this portion is used\n  // for the key.\n  const urlParts = documentSlug ? documentSlug.split(\"-\") : [];\n  const urlId = urlParts.length ? urlParts[urlParts.length - 1] : undefined;\n  const key = [urlId, revisionId].join(\"/\");\n\n  return (\n    <DataLoader\n      key={key}\n      match={props.match}\n      history={props.history}\n      location={props.location}\n    >\n      {(rest) => <Document {...rest} />}\n    </DataLoader>\n  );\n}\n"],"names":["Error402","location","useLocation","t","useTranslation","title","state","jsxs","Scene","children","jsx","Heading","Flex","style","maxWidth","column","Empty","size","Notice","Error403","history","useHistory","context","useActionContext","gap","Button","action","navigateToHome","hideIcon","onClick","goBack","neutral","MarkAsViewed","props","document","viewTimeout","React","current","setTimeout","async","view","updateLastViewed","clearTimeout","observer","DataLoader","match","ui","views","shares","comments","documents","revisions","useStores","team","useCurrentTeam","user","useCurrentUser","setDocument","useDocumentContext","error","setError","revisionId","shareId","documentSlug","params","getByUrl","get","revision","RevisionHelper","latestId","id","undefined","sharedTree","getSharedTree","isEditRoute","path","matchDocumentEdit","startsWith","settingsPath","isEditing","separateEditMode","can","usePolicy","fetchDocument","fetchWithSharedTree","err","fetchRevision","fetch","fetchLatest","fetchViews","isDeleted","fetchPage","documentId","onCreateLink","nested","Error","create","collectionId","parentDocumentId","data","ProsemirrorHelper","getEmptyDocument","publish","isDraft","url","setActiveDocument","update","template","push","read","getPreference","TeamPreference","Commenting","fetchAll","limit","direction","catch","NotFoundError","OfflineError","ErrorOffline","PaymentRequiredError","AuthorizationError","Error404","Fragment","Loading","canEdit","isArchived","readOnly","React.Fragment","abilities","DocumentScene","currentPath","pathname","setLastVisitedPath","useLastVisitedPath","useEffect","clearActiveDocument","sidebarContext","replace","urlParts","split","key","length","join","rest","Document"],"mappings":"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"}