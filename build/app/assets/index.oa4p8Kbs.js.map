{"version":3,"file":"index.oa4p8Kbs.js","sources":["../../../app/components/SearchActions.ts","../../../app/utils/FeatureFlags.ts","../../../app/actions/definitions/developer.tsx","../../../app/utils/developer.ts","../../../app/actions/root.ts","../../../app/components/CommandBar/CommandBarItem.tsx","../../../app/components/CommandBar/CommandBarResults.tsx","../../../app/components/CommandBar/CommandBar.tsx","../../../app/components/CommandBar/useRecentDocumentActions.tsx","../../../app/components/CommandBar/useSettingsAction.tsx","../../../app/components/CommandBar/useTemplatesAction.tsx"],"sourcesContent":["import { useKBar } from \"kbar\";\nimport * as React from \"react\";\nimport { searchDocumentsForQuery } from \"~/actions/definitions/documents\";\nimport { navigateToRecentSearchQuery } from \"~/actions/definitions/navigation\";\n\nimport useCommandBarActions from \"~/hooks/useCommandBarActions\";\nimport useStores from \"~/hooks/useStores\";\n\nexport default function SearchActions() {\n  const { searches } = useStores();\n\n  React.useEffect(() => {\n    if (!searches.isLoaded && !searches.isFetching) {\n      void searches.fetchPage({\n        source: \"app\",\n      });\n    }\n  }, [searches]);\n\n  const { searchQuery } = useKBar((state) => ({\n    searchQuery: state.searchQuery,\n  }));\n\n  useCommandBarActions(\n    searchQuery ? [searchDocumentsForQuery(searchQuery)] : [],\n    [searchQuery]\n  );\n\n  useCommandBarActions(searches.recent.map(navigateToRecentSearchQuery));\n\n  return null;\n}\n","import { observable } from \"mobx\";\nimport Storage from \"@shared/utils/Storage\";\n\nexport enum Feature {\n  /** New collection permissions UI */\n  newCollectionSharing = \"newCollectionSharing\",\n}\n\n/** Default values for feature flags */\nconst FeatureDefaults: Record<Feature, boolean> = {\n  [Feature.newCollectionSharing]: true,\n};\n\n/**\n * A simple feature flagging system that stores flags in browser storage.\n */\nexport class FeatureFlags {\n  public static isEnabled(flag: Feature) {\n    // init on first read\n    if (this.initalized === false) {\n      this.cache = new Set();\n      for (const key of Object.values(Feature)) {\n        const value = Storage.get(key);\n        if (value === true) {\n          this.cache.add(key);\n        }\n      }\n      this.initalized = true;\n    }\n\n    return this.cache.has(flag) ? true : FeatureDefaults[flag] ?? false;\n  }\n\n  public static enable(flag: Feature) {\n    this.cache.add(flag);\n    Storage.set(flag, true);\n  }\n\n  public static disable(flag: Feature) {\n    this.cache.delete(flag);\n    Storage.set(flag, false);\n  }\n\n  @observable\n  private static cache: Set<Feature> = new Set();\n\n  private static initalized = false;\n}\n","import copy from \"copy-to-clipboard\";\nimport {\n  BeakerIcon,\n  CopyIcon,\n  EditIcon,\n  ToolsIcon,\n  TrashIcon,\n  UserIcon,\n} from \"outline-icons\";\nimport * as React from \"react\";\nimport { toast } from \"sonner\";\nimport { createAction } from \"~/actions\";\nimport { DeveloperSection } from \"~/actions/sections\";\nimport env from \"~/env\";\nimport { client } from \"~/utils/ApiClient\";\nimport { Feature, FeatureFlags } from \"~/utils/FeatureFlags\";\nimport Logger from \"~/utils/Logger\";\nimport { deleteAllDatabases } from \"~/utils/developer\";\nimport history from \"~/utils/history\";\nimport { homePath } from \"~/utils/routeHelpers\";\n\nexport const copyId = createAction({\n  name: ({ t }) => t(\"Copy ID\"),\n  icon: <CopyIcon />,\n  keywords: \"uuid\",\n  section: DeveloperSection,\n  children: ({\n    currentTeamId,\n    currentUserId,\n    activeCollectionId,\n    activeDocumentId,\n  }) => {\n    function copyAndToast(text: string | null | undefined) {\n      if (text) {\n        copy(text);\n        toast.success(\"Copied to clipboard\");\n      }\n    }\n\n    return [\n      createAction({\n        name: \"Copy User ID\",\n        section: DeveloperSection,\n        icon: <CopyIcon />,\n        visible: () => !!currentUserId,\n        perform: () => copyAndToast(currentUserId),\n      }),\n      createAction({\n        name: \"Copy Team ID\",\n        section: DeveloperSection,\n        icon: <CopyIcon />,\n        visible: () => !!currentTeamId,\n        perform: () => copyAndToast(currentTeamId),\n      }),\n      createAction({\n        name: \"Copy Collection ID\",\n        icon: <CopyIcon />,\n        section: DeveloperSection,\n        visible: () => !!activeCollectionId,\n        perform: () => copyAndToast(activeCollectionId),\n      }),\n      createAction({\n        name: \"Copy Document ID\",\n        icon: <CopyIcon />,\n        section: DeveloperSection,\n        visible: () => !!activeDocumentId,\n        perform: () => copyAndToast(activeDocumentId),\n      }),\n      createAction({\n        name: \"Copy Team ID\",\n        icon: <CopyIcon />,\n        section: DeveloperSection,\n        visible: () => !!currentTeamId,\n        perform: () => copyAndToast(currentTeamId),\n      }),\n      createAction({\n        name: \"Copy Release ID\",\n        icon: <CopyIcon />,\n        section: DeveloperSection,\n        visible: () => !!env.VERSION,\n        perform: () => copyAndToast(env.VERSION),\n      }),\n    ];\n  },\n});\n\nfunction generateRandomText() {\n  const characters =\n    \"abcdefghijklmno pqrstuvwxyzABCDEFGHIJKL MNOPQRSTUVWXYZ 0123456789\\n\";\n  let text = \"\";\n  for (let i = 0; i < Math.floor(Math.random() * 10) + 1; i++) {\n    text += characters.charAt(Math.floor(Math.random() * characters.length));\n  }\n  return text;\n}\n\nexport const startTyping = createAction({\n  name: \"Start automatic typing\",\n  icon: <EditIcon />,\n  section: DeveloperSection,\n  visible: ({ activeDocumentId }) =>\n    !!activeDocumentId && env.ENVIRONMENT === \"development\",\n  perform: () => {\n    const intervalId = setInterval(() => {\n      const text = generateRandomText();\n      document.execCommand(\"insertText\", false, text);\n    }, 250);\n\n    window.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Escape\") {\n        intervalId && clearInterval(intervalId);\n      }\n    });\n\n    toast.info(\"Automatic typing started, press Escape to stop\");\n  },\n});\n\nexport const clearIndexedDB = createAction({\n  name: ({ t }) => t(\"Clear IndexedDB cache\"),\n  icon: <TrashIcon />,\n  keywords: \"cache clear database\",\n  section: DeveloperSection,\n  perform: async ({ t }) => {\n    history.push(homePath());\n    await deleteAllDatabases();\n    toast.success(t(\"IndexedDB cache cleared\"));\n  },\n});\n\nexport const createTestUsers = createAction({\n  name: \"Create 10 test users\",\n  icon: <UserIcon />,\n  section: DeveloperSection,\n  visible: () => env.ENVIRONMENT === \"development\",\n  perform: async () => {\n    const count = 10;\n    await client.post(\"/developer.create_test_users\", { count });\n    toast.message(`${count} test users created`);\n  },\n});\n\nexport const createToast = createAction({\n  name: \"Create toast\",\n  section: DeveloperSection,\n  visible: () => env.ENVIRONMENT === \"development\",\n  perform: () => {\n    toast.message(\"Hello world\", {\n      duration: 30000,\n    });\n  },\n});\n\nexport const toggleDebugLogging = createAction({\n  name: ({ t }) => t(\"Toggle debug logging\"),\n  icon: <ToolsIcon />,\n  section: DeveloperSection,\n  perform: ({ t }) => {\n    Logger.debugLoggingEnabled = !Logger.debugLoggingEnabled;\n    toast.message(\n      Logger.debugLoggingEnabled\n        ? t(\"Debug logging enabled\")\n        : t(\"Debug logging disabled\")\n    );\n  },\n});\n\nexport const toggleFeatureFlag = createAction({\n  name: \"Toggle feature flag\",\n  icon: <BeakerIcon />,\n  section: DeveloperSection,\n  visible: () => env.ENVIRONMENT === \"development\",\n  children: Object.values(Feature).map((flag) =>\n    createAction({\n      id: `flag-${flag}`,\n      name: flag,\n      selected: () => FeatureFlags.isEnabled(flag),\n      section: DeveloperSection,\n      perform: () => {\n        if (FeatureFlags.isEnabled(flag)) {\n          FeatureFlags.disable(flag);\n          toast.success(`Disabled feature flag: ${flag}`);\n        } else {\n          FeatureFlags.enable(flag);\n          toast.success(`Enabled feature flag: ${flag}`);\n        }\n      },\n    })\n  ),\n});\n\nexport const developer = createAction({\n  name: ({ t }) => t(\"Development\"),\n  keywords: \"debug\",\n  icon: <ToolsIcon />,\n  iconInContextMenu: false,\n  section: DeveloperSection,\n  children: [\n    copyId,\n    toggleDebugLogging,\n    toggleFeatureFlag,\n    createToast,\n    createTestUsers,\n    clearIndexedDB,\n    startTyping,\n  ],\n});\n\nexport const rootDeveloperActions = [developer];\n","import flatten from \"lodash/flatten\";\nimport stores from \"~/stores\";\nimport { flattenTree } from \"./tree\";\n\n/**\n * Delete all databases in the browser.\n *\n * @returns A promise that resolves when all databases have been deleted.\n */\nexport async function deleteAllDatabases() {\n  if (\"databases\" in window.indexedDB) {\n    const databases = await window.indexedDB.databases();\n\n    for (const database of databases) {\n      if (database.name) {\n        window.indexedDB.deleteDatabase(database.name);\n      }\n    }\n    return;\n  }\n\n  // If the browser does not support listing databases, we need to manually delete as best we can\n  // by iterating over all known collections and documents.\n  await Promise.all(\n    stores.collections.orderedData.map(async (collection) => {\n      const nodes = flatten(collection.documents?.map(flattenTree));\n\n      return nodes.map(async (node) => {\n        window.indexedDB.deleteDatabase(`document.${node.id}`);\n      });\n    })\n  );\n}\n","import { rootCollectionActions } from \"./definitions/collections\";\nimport { rootDeveloperActions } from \"./definitions/developer\";\nimport { rootDocumentActions } from \"./definitions/documents\";\nimport { rootNavigationActions } from \"./definitions/navigation\";\nimport { rootNotificationActions } from \"./definitions/notifications\";\nimport { rootRevisionActions } from \"./definitions/revisions\";\nimport { rootSettingsActions } from \"./definitions/settings\";\nimport { rootTeamActions } from \"./definitions/teams\";\nimport { rootUserActions } from \"./definitions/users\";\n\nexport default [\n  ...rootCollectionActions,\n  ...rootDocumentActions,\n  ...rootUserActions,\n  ...rootNavigationActions,\n  ...rootNotificationActions,\n  ...rootRevisionActions,\n  ...rootSettingsActions,\n  ...rootDeveloperActions,\n  ...rootTeamActions,\n];\n","import { ActionImpl } from \"kbar\";\nimport { ArrowIcon, BackIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { s, ellipsis } from \"@shared/styles\";\nimport { normalizeKeyDisplay } from \"@shared/utils/keyboard\";\nimport Flex from \"~/components/Flex\";\nimport Key from \"~/components/Key\";\nimport Text from \"~/components/Text\";\n\ntype Props = {\n  action: ActionImpl;\n  active: boolean;\n  currentRootActionId: string | null | undefined;\n};\n\nfunction CommandBarItem(\n  { action, active, currentRootActionId }: Props,\n  ref: React.RefObject<HTMLDivElement>\n) {\n  const theme = useTheme();\n  const ancestors = React.useMemo(() => {\n    if (!currentRootActionId) {\n      return action.ancestors;\n    }\n    const index = action.ancestors.findIndex(\n      (ancestor) => ancestor.id === currentRootActionId\n    );\n\n    // +1 removes the currentRootAction; e.g. if we are on the \"Set theme\"\n    // parent action, the UI should not display \"Set theme… > Dark\" but rather\n    // just \"Dark\"\n    return action.ancestors.slice(index + 1);\n  }, [action.ancestors, currentRootActionId]);\n\n  return (\n    <Item active={active} ref={ref}>\n      <Content align=\"center\" gap={8}>\n        <Icon>\n          {action.icon ? (\n            // @ts-expect-error no icon on ActionImpl\n            React.cloneElement(action.icon, {\n              size: 22,\n            })\n          ) : (\n            <ArrowIcon />\n          )}\n        </Icon>\n\n        {ancestors.map((ancestor) => (\n          <React.Fragment key={ancestor.id}>\n            <Ancestor>{ancestor.name}</Ancestor>\n            <ForwardIcon color={theme.textSecondary} size={22} />\n          </React.Fragment>\n        ))}\n        {action.name}\n        {action.children?.length ? \"…\" : \"\"}\n      </Content>\n      {action.shortcut?.length ? (\n        <Shortcut>\n          {action.shortcut.map((sc: string, index) => (\n            <React.Fragment key={sc}>\n              {index > 0 ? (\n                <>\n                  {\" \"}\n                  <Text size=\"xsmall\" type=\"secondary\">\n                    then\n                  </Text>{\" \"}\n                </>\n              ) : (\n                \"\"\n              )}\n              {sc.split(\"+\").map((key) => (\n                <Key key={key}>{normalizeKeyDisplay(key)}</Key>\n              ))}\n            </React.Fragment>\n          ))}\n        </Shortcut>\n      ) : null}\n    </Item>\n  );\n}\n\nconst Shortcut = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  gap: 4px;\n`;\n\nconst Icon = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  color: ${s(\"textSecondary\")};\n  flex-shrink: 0;\n`;\n\nconst Ancestor = styled.span`\n  color: ${s(\"textSecondary\")};\n`;\n\nconst Content = styled(Flex)`\n  ${ellipsis()}\n  flex-shrink: 1;\n`;\n\nconst Item = styled.div<{ active?: boolean }>`\n  font-size: 14px;\n  padding: 9px 12px;\n  margin: 0 8px;\n  border-radius: 4px;\n  background: ${(props) =>\n    props.active ? props.theme.menuItemSelected : \"none\"};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: var(--pointer);\n\n  ${ellipsis()}\n  user-select: none;\n  min-width: 0;\n\n  ${(props) =>\n    props.active &&\n    css`\n      ${Icon} {\n        color: ${props.theme.text};\n      }\n    `}\n`;\n\nconst ForwardIcon = styled(BackIcon)`\n  transform: rotate(180deg);\n  flex-shrink: 0;\n`;\n\nexport default React.forwardRef<HTMLDivElement, Props>(CommandBarItem);\n","import { useMatches, KBarResults } from \"kbar\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"~/components/Text\";\nimport CommandBarItem from \"./CommandBarItem\";\n\nexport default function CommandBarResults() {\n  const { results, rootActionId } = useMatches();\n\n  if (results.length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <KBarResults\n        items={results}\n        maxHeight={400}\n        onRender={({ item, active }) =>\n          typeof item === \"string\" ? (\n            <Header type=\"tertiary\" size=\"xsmall\" ellipsis>\n              {item}\n            </Header>\n          ) : (\n            <CommandBarItem\n              action={item}\n              active={active}\n              currentRootActionId={rootActionId}\n            />\n          )\n        }\n      />\n    </Container>\n  );\n}\n\n// Cannot style KBarResults unfortunately, so we must wrap and target the inner\nconst Container = styled.div`\n  > div {\n    padding-bottom: 8px;\n  }\n`;\n\nconst Header = styled(Text).attrs({ as: \"h3\" })`\n  letter-spacing: 0.03em;\n  margin: 0;\n  padding: 16px 0 4px 20px;\n  height: 36px;\n  cursor: default;\n`;\n","import { useKBar, KBarPositioner, KBarAnimator, KBarSearch } from \"kbar\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Portal } from \"react-portal\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { depths, s } from \"@shared/styles\";\nimport SearchActions from \"~/components/SearchActions\";\nimport rootActions from \"~/actions/root\";\nimport useCommandBarActions from \"~/hooks/useCommandBarActions\";\nimport CommandBarResults from \"./CommandBarResults\";\nimport useRecentDocumentActions from \"./useRecentDocumentActions\";\nimport useSettingsAction from \"./useSettingsAction\";\nimport useTemplatesAction from \"./useTemplatesAction\";\n\nfunction CommandBar() {\n  const { t } = useTranslation();\n  const recentDocumentActions = useRecentDocumentActions();\n  const settingsAction = useSettingsAction();\n  const templatesAction = useTemplatesAction();\n  const commandBarActions = React.useMemo(\n    () => [\n      ...recentDocumentActions,\n      ...rootActions,\n      templatesAction,\n      settingsAction,\n    ],\n    [recentDocumentActions, settingsAction, templatesAction]\n  );\n\n  useCommandBarActions(commandBarActions);\n\n  return (\n    <>\n      <KBarPortal>\n        <Positioner>\n          <Animator>\n            <SearchActions />\n            <SearchInput\n              defaultPlaceholder={`${t(\"Type a command or search\")}…`}\n            />\n            <CommandBarResults />\n          </Animator>\n        </Positioner>\n      </KBarPortal>\n    </>\n  );\n}\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nconst KBarPortal: React.FC = ({ children }: Props) => {\n  const { showing } = useKBar((state) => ({\n    showing: state.visualState !== \"hidden\",\n  }));\n\n  if (!showing) {\n    return null;\n  }\n\n  return <Portal>{children}</Portal>;\n};\n\nconst Positioner = styled(KBarPositioner)`\n  z-index: ${depths.commandBar};\n`;\n\nconst SearchInput = styled(KBarSearch)`\n  position: relative;\n  padding: 16px 12px;\n  margin: 0 8px;\n  width: calc(100% - 16px);\n  outline: none;\n  border: none;\n  background: ${s(\"menuBackground\")};\n  color: ${s(\"text\")};\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${s(\"inputBorder\")};\n  }\n\n  &:disabled,\n  &::placeholder {\n    color: ${s(\"placeholder\")};\n    opacity: 1;\n  }\n`;\n\nconst Animator = styled(KBarAnimator)`\n  max-width: 600px;\n  max-height: 75vh;\n  width: 90vw;\n  background: ${s(\"menuBackground\")};\n  color: ${s(\"text\")};\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: rgb(0 0 0 / 40%) 0px 16px 60px;\n  transition: max-width 0.2s ease-in-out;\n\n  ${breakpoint(\"desktopLarge\")`\n    max-width: 740px;\n  `};\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default observer(CommandBar);\n","import { DocumentIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport Icon from \"@shared/components/Icon\";\nimport { createAction } from \"~/actions\";\nimport { RecentSection } from \"~/actions/sections\";\nimport useStores from \"~/hooks/useStores\";\nimport history from \"~/utils/history\";\nimport { documentPath } from \"~/utils/routeHelpers\";\n\nconst useRecentDocumentActions = (count = 6) => {\n  const { documents, ui } = useStores();\n\n  return React.useMemo(\n    () =>\n      documents.recentlyViewed\n        .filter((document) => document.id !== ui.activeDocumentId)\n        .slice(0, count)\n        .map((item) =>\n          createAction({\n            name: item.titleWithDefault,\n            analyticsName: \"Recently viewed document\",\n            section: RecentSection,\n            icon: item.icon ? (\n              <Icon value={item.icon} color={item.color ?? undefined} />\n            ) : (\n              <DocumentIcon />\n            ),\n            perform: () => history.push(documentPath(item)),\n          })\n        ),\n    [count, ui.activeDocumentId, documents.recentlyViewed]\n  );\n};\n\nexport default useRecentDocumentActions;\n","import { SettingsIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { createAction } from \"~/actions\";\nimport { NavigationSection } from \"~/actions/sections\";\nimport useSettingsConfig from \"~/hooks/useSettingsConfig\";\nimport history from \"~/utils/history\";\n\nconst useSettingsAction = () => {\n  const config = useSettingsConfig();\n  const actions = React.useMemo(\n    () =>\n      config.map((item) => {\n        const Icon = item.icon;\n        return {\n          id: item.path,\n          name: item.name,\n          icon: <Icon />,\n          section: NavigationSection,\n          perform: () => history.push(item.path),\n        };\n      }),\n    [config]\n  );\n\n  const navigateToSettings = React.useMemo(\n    () =>\n      createAction({\n        id: \"settings\",\n        name: ({ t }) => t(\"Settings\"),\n        section: NavigationSection,\n        shortcut: [\"g\", \"s\"],\n        icon: <SettingsIcon />,\n        children: () => actions,\n      }),\n    [actions]\n  );\n\n  return navigateToSettings;\n};\n\nexport default useSettingsAction;\n","import { NewDocumentIcon, ShapesIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport Icon from \"@shared/components/Icon\";\nimport { createAction } from \"~/actions\";\nimport {\n  ActiveCollectionSection,\n  DocumentSection,\n  TeamSection,\n} from \"~/actions/sections\";\nimport useStores from \"~/hooks/useStores\";\nimport history from \"~/utils/history\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\n\nconst useTemplatesAction = () => {\n  const { documents } = useStores();\n\n  React.useEffect(() => {\n    void documents.fetchAllTemplates();\n  }, [documents]);\n\n  const actions = React.useMemo(\n    () =>\n      documents.templatesAlphabetical.map((template) =>\n        createAction({\n          name: template.titleWithDefault,\n          analyticsName: \"New document\",\n          section: template.isWorkspaceTemplate\n            ? TeamSection\n            : ActiveCollectionSection,\n          icon: template.icon ? (\n            <Icon value={template.icon} color={template.color ?? undefined} />\n          ) : (\n            <NewDocumentIcon />\n          ),\n          keywords: \"create\",\n          visible: ({ currentTeamId, activeCollectionId, stores }) => {\n            if (activeCollectionId) {\n              return (\n                stores.policies.abilities(activeCollectionId).createDocument &&\n                (template.collectionId === activeCollectionId ||\n                  template.isWorkspaceTemplate)\n              );\n            }\n            return (\n              !!currentTeamId &&\n              stores.policies.abilities(currentTeamId).createDocument &&\n              template.isWorkspaceTemplate\n            );\n          },\n          perform: ({ activeCollectionId, sidebarContext }) =>\n            history.push(\n              newDocumentPath(template.collectionId ?? activeCollectionId, {\n                templateId: template.id,\n              }),\n              {\n                sidebarContext,\n              }\n            ),\n        })\n      ),\n    [documents.templatesAlphabetical]\n  );\n\n  const newFromTemplate = React.useMemo(\n    () =>\n      createAction({\n        id: \"templates\",\n        name: ({ t }) => t(\"New from template\"),\n        placeholder: ({ t }) => t(\"Choose a template\"),\n        section: DocumentSection,\n        icon: <ShapesIcon />,\n        visible: ({ currentTeamId, activeCollectionId, stores }) => {\n          if (activeCollectionId) {\n            return stores.policies.abilities(activeCollectionId).createDocument;\n          }\n          return (\n            !!currentTeamId &&\n            stores.policies.abilities(currentTeamId).createDocument\n          );\n        },\n        children: () => actions,\n      }),\n    [actions]\n  );\n\n  return newFromTemplate;\n};\n\nexport default useTemplatesAction;\n"],"names":["SearchActions","searches","useStores","React","isLoaded","isFetching","fetchPage","source","searchQuery","useKBar","state","searchDocumentsForQuery","useCommandBarActions","recent","map","navigateToRecentSearchQuery","Feature","newCollectionSharing","FeatureDefaults","FeatureFlags","isEnabled","flag","this","initalized","cache","Set","key","Object","values","Storage","get","add","has","enable","set","disable","delete","_FeatureFlags","observable","copyId","createAction","name","t","icon","CopyIcon","keywords","section","DeveloperSection","children","currentTeamId","currentUserId","activeCollectionId","activeDocumentId","copyAndToast","text","copy","toast","success","visible","perform","env","VERSION","startTyping","EditIcon","ENVIRONMENT","intervalId","setInterval","generateRandomText","characters","i","Math","floor","random","charAt","execCommand","addEventListener","event","clearInterval","info","clearIndexedDB","TrashIcon","async","push","homePath","deleteAllDatabases","window","indexedDB","databases","database","deleteDatabase","Promise","all","stores","collections","orderedData","collection","flatten","documents","flattenTree","node","id","createTestUsers","UserIcon","client","post","count","message","createToast","duration","toggleDebugLogging","ToolsIcon","debugLoggingEnabled","Logger","toggleFeatureFlag","BeakerIcon","selected","rootActions","rootCollectionActions","rootDocumentActions","rootUserActions","rootNavigationActions","rootNotificationActions","rootRevisionActions","rootSettingsActions","iconInContextMenu","rootTeamActions","Shortcut","styled","div","withConfig","componentId","Icon","Flex","s","Ancestor","span","Content","ellipsis","Item","props","active","theme","menuItemSelected","css","ForwardIcon","BackIcon","CommandBarItem","action","currentRootActionId","ref","useTheme","ancestors","index","findIndex","ancestor","slice","jsxs","align","gap","jsx","size","ArrowIcon","React.Fragment","color","textSecondary","length","shortcut","sc","Fragment","Text","type","split","Key","normalizeKeyDisplay","CommandBarResults","results","rootActionId","useMatches","Container","KBarResults","items","maxHeight","onRender","item","Header","attrs","as","KBarPortal","showing","visualState","Portal","Positioner","KBarPositioner","depths","commandBar","SearchInput","KBarSearch","Animator","KBarAnimator","breakpoint","observer","CommandBar","useTranslation","recentDocumentActions","useRecentDocumentActions","ui","recentlyViewed","filter","document","titleWithDefault","analyticsName","RecentSection","value","undefined","DocumentIcon","history","documentPath","settingsAction","useSettingsAction","config","useSettingsConfig","actions","path","NavigationSection","navigateToSettings","SettingsIcon","templatesAction","useTemplatesAction","fetchAllTemplates","useMemo","templatesAlphabetical","template","isWorkspaceTemplate","TeamSection","ActiveCollectionSection","NewDocumentIcon","policies","abilities","createDocument","collectionId","sidebarContext","newDocumentPath","templateId","newFromTemplate","placeholder","DocumentSection","ShapesIcon","commandBarActions","defaultPlaceholder"],"mappings":"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"}